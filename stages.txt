[{"_id": "678c3d1a820abd653b9b85be", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/gamestop_reviews.csv", "in": [], "out": ["678c3d1a820abd653b9b85bf"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "gamestop_reviews", "comment": "", "pipeline_id": "678c3d1a820abd653b9b85bb", "sub_type": "HDFS", "stage_type": "source", "stage_attributes": {"url": "/FileStore/platform/uploadedSourceFiles/gamestop_reviews.csv", "filename": "gamestop_reviews.csv", "delimiter": ",", "file_type": "Delimeted", "dbfs_token": "", "dbfs_domain": "", "is_header": "Use Header Line", "domain": "http://172.31.59.158", "port": "40070", "dirPath": "/FileStore/platform", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}, "status": "new", "position": {"x": -80, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/source/hdfs-source.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 14, "fill": "#333333", "type": "source", "text": "gamestop_reviews", "slug": "hdfs", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "_id": "678c3d1a820abd653b9b85be", "dbValues": {"url": "/FileStore/platform/uploadedSourceFiles/gamestop_reviews.csv", "filename": "gamestop_reviews.csv", "delimiter": ",", "file_type": "Delimeted", "dbfs_token": "", "dbfs_domain": "", "is_header": "Use Header Line", "domain": "http://172.31.59.158", "port": "40070", "dirPath": "/FileStore/platform", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"inherited": true, "checked": true, "field": "index", "alias": "index", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "name", "alias": "name", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "brand", "alias": "brand", "type": "String", "position": 2}, {"inherited": true, "checked": true, "field": "sku", "alias": "sku", "type": "String", "position": 3}, {"inherited": true, "checked": true, "field": "reviewer_name", "alias": "reviewer_name", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "review_title", "alias": "review_title", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "review_description", "alias": "review_description", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "recommended_review", "alias": "recommended_review", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "verifed_purchaser", "alias": "verifed_purchaser", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "helpful_count", "alias": "helpful_count", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "not_helpful_count", "alias": "not_helpful_count", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "reviewed_at", "alias": "reviewed_at", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "rating", "alias": "rating", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "average_rating", "alias": "average_rating", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "reviews_count", "alias": "reviews_count", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "comment_id", "alias": "comment_id", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "uniq_id", "alias": "uniq_id", "type": "String", "position": 16}, {"inherited": true, "checked": true, "field": "scraped_at", "alias": "scraped_at", "type": "String", "position": 17}], "actual_schema": [{"inherited": true, "checked": true, "field": "index", "alias": "index", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "name", "alias": "name", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "brand", "alias": "brand", "type": "String", "position": 2}, {"inherited": true, "checked": true, "field": "sku", "alias": "sku", "type": "String", "position": 3}, {"inherited": true, "checked": true, "field": "reviewer_name", "alias": "reviewer_name", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "review_title", "alias": "review_title", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "review_description", "alias": "review_description", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "recommended_review", "alias": "recommended_review", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "verifed_purchaser", "alias": "verifed_purchaser", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "helpful_count", "alias": "helpful_count", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "not_helpful_count", "alias": "not_helpful_count", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "reviewed_at", "alias": "reviewed_at", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "rating", "alias": "rating", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "average_rating", "alias": "average_rating", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "reviews_count", "alias": "reviews_count", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "comment_id", "alias": "comment_id", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "uniq_id", "alias": "uniq_id", "type": "String", "position": 16}, {"inherited": true, "checked": true, "field": "scraped_at", "alias": "scraped_at", "type": "String", "position": 17}], "selected_schema": [], "created_at": "2025-01-18 23:45:30.273000", "joinSchema": [], "updated_at": "2025-01-18 23:49:54.165000", "__v": 0, "sampleData": [{"index": "FYI...the 65\u201d HD television I had to replace was a Samsung that was about 4 or 5 years old that stopped working after some loud cracking and popping noises that sounded like the transformer on an overhead power line blowing out. However", "name": " my 42\u201d VIZIO that I bought in \u201808 doesn\u2019t even have a single bad pixel. Food for thought.\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "10 months ago", "recommended_review": "2", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "229167959", "reviewed_at": "16e925e3-1e59-537e-aa67-1675b613d351", "rating": "16/01/2022 16:17:56", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "8", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "jonck", "review_title": "Great features", "review_description": "I got this today 2/25 for my birthday present from my son as a surprise gift, without any prior guess or information at all. My previous one in my master bed room was quite old Samsung 50\u201d PD TV, which was ok but heavy and bulky compared to this. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "16", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Ryan CIN3MATIX", "review_title": "Beautiful Elite Series 2", "review_description": "This controller has always been great but this one is a work of art.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "195708350", "uniq_id": "89ac96f3-a6a7-5f6e-ac22-302869e30bc7", "scraped_at": "16/01/2022 16:17:57"}, {"index": "19", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Skyturtle97", "review_title": "Excellent purchase.", "review_description": "Love the controller use it everytime I play. The remote plays excellent. Be carefull of the back buttons though do to being removable I feel like they will wear out faster than most.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "18 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "194187129", "uniq_id": "902d7992-f6fd-55bd-b5d7-408db5a49648", "scraped_at": "16/01/2022 16:17:57"}, {"index": "27", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jeremy Green", "review_title": "Another Win-tendo Jewel!!", "review_description": "The quirky style that shined in Yoshi\u2019s Wooly World has gotten a serious upgrade in this new gem from Nintendo.  Like all it\u2019s first-party titles, this game is nearly flawless.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "42", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "DrKillem", "review_title": "Amazing!", "review_description": "Best Xbox controller I've owned. Worth every penny. Owned for a month with no issues. Only con is I wish there were replacement joysticks, I love these but i know I'm going to wear them out, and I won't have Master Cheif green ones to replace :/", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192503208", "uniq_id": "3de73f9b-98c9-56e2-805a-e539ab1e5e33", "scraped_at": "16/01/2022 16:17:57"}, {"index": "44", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "eyesayahh", "review_title": "Best Controller", "review_description": "This controller is incredibly responsive. It\u2019s fully customizable with lots of additional features & settings that can be adjusted to your preferences. I was skeptical at first due to the price but after a fair amount of use I wouldn\u2019t game with anything else", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "4", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192087597", "uniq_id": "8c024bd3-193e-5631-802c-3a989f6d4f73", "scraped_at": "16/01/2022 16:17:57"}, {"index": "53", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "SamuraiMatt", "review_title": "Tank Yoshi and the layered egg aiming", "review_description": "Fun and cute, but some of the mechanics don't work that well (Tank Yoshi and the mutil-layer egg aiming). Still fun, but needs improvement in the mentioned areas. See Caddicarus' analysis.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127396175", "uniq_id": "c74037cf-5c28-5aa1-894a-c9abd50cdc79", "scraped_at": "16/01/2022 16:17:57"}, {"index": "75", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Marco AP", "review_title": "Buttons don\u2019t register", "review_description": "AXYB buttons do no register unless they are 100% fully pressed in. Annoying there is no pressure sensitivity!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "18", "reviewed_at": "1 month ago", "rating": "1", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191531039", "uniq_id": "db0b55df-7fd4-5d5c-90d3-eac2b049be4c", "scraped_at": "16/01/2022 16:17:58"}, {"index": "76", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "I own this", "review_title": "Excellent controller", "review_description": "This no longer available item is excellent and you should buy one, but you can\u2019t.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "41", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191517192", "uniq_id": "c026bcd2-f440-5b87-95d0-a9dbdd87d4fe", "scraped_at": "16/01/2022 16:17:58"}, {"index": "78", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "516", "review_title": "Solid controller", "review_description": "So far I love the feel and look of this controller. Need to wait and see how the grips hold up to give it a 5 star rating.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "4", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191473354", "uniq_id": "20b6e8de-5239-5339-97cd-f4a96cf19873", "scraped_at": "16/01/2022 16:17:58"}, {"index": "82", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Bigbadbarry", "review_title": "Yoshi Fun!", "review_description": "I loved the Yoshi yarn game on the 3DS & I love the New Yoshi Yarn game on the switch.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "86", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "HeliosExe", "review_title": "gud", "review_description": "10/10, it is a very creative, thinking out of the box game, it might be a bit easy, but it is fun to and I will 100% it even if it's the last thing I do.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127299640", "uniq_id": "2dee6b9f-1dd6-500a-9518-e48555992512", "scraped_at": "16/01/2022 16:17:58"}, {"index": "87", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "platygirl", "review_title": "Yoshi's Crafted World... Buy it TODAY", "review_description": "OMG, this is the ultimate of fun, silly, fantasy escapism. Sit back, relax, and give yourself an hour to let Yoshi explore the hand-made world of tape, cardboard, and pipe cleaners", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127295961", "uniq_id": "348d2ec6-347b-50e5-9fe8-388a58176915", "scraped_at": "16/01/2022 16:17:58"}, {"index": "3. The remote is also not bad at all.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "The Bad: Pre-calibrations could improve", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "100", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Harbinger86", "review_title": "Love it", "review_description": "Great item and excellent condition. Works awesome!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191464723", "uniq_id": "3da6f23f-4693-549c-9b9f-0faa66b56124", "scraped_at": "16/01/2022 16:17:58"}, {"index": "101", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Incredible controller!", "review_description": "Very cool design, feels great and comfortable in my hands.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191463669", "uniq_id": "66f84845-97c8-5cca-8bf1-4cc4cdfceead", "scraped_at": "16/01/2022 16:17:58"}, {"index": "102", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Halo Infinite Elite Series 2 Controller", "review_description": "This Halo Infinite Elite Series 2 controller is so awesome with the Halo theme on it, it's beautiful.  Being able to customize the controller to my liking ranging from the controller sticks, d-pad, and how short you want your trigger throw is freaking amazing compared to a normal controller.  Only con is that it's expensive, but once you open up the whole package and unboxing experience it is well worth the price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "28", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191462968", "uniq_id": "8a38edf4-1d13-54d2-a32c-f98303cbd0ac", "scraped_at": "16/01/2022 16:17:58"}, {"index": "108", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Parker86", "review_title": "Worth every penny.", "review_description": "This was my first elite controller and I love it, it\u2019s definitely a game changer and looks beautiful.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439828", "uniq_id": "22f370a8-e30f-5cea-9d38-0d7b9da2fd0b", "scraped_at": "16/01/2022 16:17:58"}, {"index": "132", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Ems C", "review_title": "Big replay value", "review_description": "I'm in love with everything from this game and I appreciate the replay value as well. You can go back to a level and find new tasks/goals", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127230795", "uniq_id": "f30f8cd1-56b3-5068-bcd7-d59438a6da70", "scraped_at": "16/01/2022 16:17:59"}, {"index": "134", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Kids love i", "review_title": "Kids love it", "review_description": "It actually looks crafty and there is so much to explore and you can", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "141", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TCTV", "review_title": "Very Nice", "review_description": "This is my 3rd Vizio TV. 1st OLED. They are all 5 star products!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228297521", "uniq_id": "b72f7138-db42-5954-9039-1eebfbe44ba6", "scraped_at": "16/01/2022 16:17:59"}, {"index": "159", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Adyn Evans", "review_title": "Great once I got the working product.", "review_description": "Thumbstick issues straight out of box. Had to send back to Microsoft to exchange for working one. After that it\u2019s wonderful. More of a quality control issue on Microsoft\u2019s end than gamestops fault, however when I reached out to GameStop about the purchase I was told they didn\u2019t have any to replace it with. Just a general pain in the butt just for me to get a working product that I paid a lot of money for.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191433776", "uniq_id": "9f9fe687-9b39-54dc-a594-be74dc951e9f", "scraped_at": "16/01/2022 16:17:59"}, {"index": "160", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "glumee", "review_title": "Nintendo Just KNOWS Fun!", "review_description": "Typical, classic, Nintendo fun! Challenging? Not very. Enjoyable from beginning to end? Absolutely!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127153348", "uniq_id": "7a0bc368-d016-51c1-a93a-e5255b8818b6", "scraped_at": "16/01/2022 16:17:59"}, {"index": "173", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "deshon", "review_title": "OK Updates would make it better", "review_description": "Some features are missing and broken but when it works its great!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227791669", "uniq_id": "6344ef26-f49a-5fe7-adf8-f78f0291da78", "scraped_at": "16/01/2022 16:18:00"}, {"index": "197", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "RobertKW", "review_title": "Surprisingly fun", "review_description": "I haven't been a huge fan of the series since it is a easier version A Mario title but this game has been surprisingly fun", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127014676", "uniq_id": "bc7017a3-b713-5c27-9b55-944deacc859b", "scraped_at": "16/01/2022 16:18:00"}, {"index": "217", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Twan", "review_title": "Price to feature king!", "review_description": "Wonderful image, oodles of features and an asking price that\u2019s within  reach of the average consumer, what more Can you ask for.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227582245", "uniq_id": "b69b8ac8-89ff-5e89-9697-52a682ad0e76", "scraped_at": "16/01/2022 16:18:00"}, {"index": "218", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Res136", "review_title": "Great picture", "review_description": "I\u2019ve always liked Visio. My first 50\u201d had one backlight diode burn out after 7yrs heavy use. Replaced with 50\u201d nano Visio. I was happy with the upgrade. Figured I could get a 55\u201d within the space constraint I had. Got this one as open box. And WOW! The picture POPS of vibrancy and consistent brightness.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227560725", "uniq_id": "b707b4b5-8acc-5c69-9279-f1029422274c", "scraped_at": "16/01/2022 16:18:00"}, {"index": "225", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "BxBNicX", "review_title": "Best controller ever", "review_description": "Its similar to the regular elite it just feels lighter quality feels slightly better and it looks so hecking cool in person so many details that the pictures dont do it justice", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190820482", "uniq_id": "31786614-0e1e-5a38-9e27-8f23084e6ee1", "scraped_at": "16/01/2022 16:18:00"}, {"index": "232", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Dadadum", "review_title": "#1", "review_description": "Game is great for parents to play with their kids.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126754711", "uniq_id": "f9469cbd-8ad3-5f74-9b6d-3aefeaf073c7", "scraped_at": "16/01/2022 16:18:01"}, {"index": "233", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Mr Dingus", "review_title": "Fun!", "review_description": "Very fun! As someone playing through sekiro, this was a nice pallet cleanser.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126754570", "uniq_id": "2c072257-f611-5e72-a1ab-5dc75ef88f59", "scraped_at": "16/01/2022 16:18:01"}, {"index": "245", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "PM117ER", "review_title": "Looks pretty - never worked", "review_description": "It came broken\u2026. Stick drift on the right thumb stick right out of the box.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "1", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190766977", "uniq_id": "c61a0a2e-6150-5816-827e-7d7fc7f7f94e", "scraped_at": "16/01/2022 16:18:01"}, {"index": "252", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "mdfsandman", "review_title": "Great picture.  easy setup", "review_description": "I had no problems after mounting the TV and the set up was a breeze", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227514155", "uniq_id": "a56d9282-4860-5371-9f05-a9bd99c99914", "scraped_at": "16/01/2022 16:18:01"}, {"index": "257", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jos\u00e9viera264", "review_title": null, "review_description": "The best \u201cAmerican product 100% costumer satisfacci\u00f3n  guaranteed", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227469318", "uniq_id": "fe663898-37db-56ab-9d32-c3d52f93b4e5", "scraped_at": "16/01/2022 16:18:01"}, {"index": "262", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "JPez1", "review_title": "Amazing controller", "review_description": "Great controller! Only wish I had the halo Xbox to go with it", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190758968", "uniq_id": "7ca99b13-422b-5892-a441-b2dd7bf7a000", "scraped_at": "16/01/2022 16:18:01"}, {"index": "270", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "cheeseman585", "review_title": "A Modern Take on Yoshi's Story", "review_description": "This is a proper modern evolution of the Yoshi formula.  Giving you access to the fore- and background when throwing eggs adds an extra dimension of exploration and the collectibles are definitely worth getting.  The flower requirement to progress to new areas is rarely difficult to fulfill, but it emphasizes the collection aspect in a game that gives you a lot of tools to do so and is chock-full of stuff to see.  If you've ever loved playing a platformer, you need to play this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126576266", "uniq_id": "a5a4fa33-a821-53a1-82a9-e28573bb422f", "scraped_at": "16/01/2022 16:18:02"}, {"index": "286", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "TimB76", "review_title": "Super fun", "review_description": "We Bridges this for Christmas for my nephew everyone had a good time playing", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "123364925", "uniq_id": "9bd2d34a-5e61-57c4-9d29-646e5cf6ba26", "scraped_at": "16/01/2022 16:18:02"}, {"index": "302", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Imagine1959", "review_title": "Great tv", "review_description": "The colors are incredibly vivid, even with a standard HD signal. I also love that it has screen mirroring for my iPhone along with a bunch of other viewing options.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227162981", "uniq_id": "821dde30-9ad1-59e3-b367-e0a36dc2691b", "scraped_at": "16/01/2022 16:18:03"}, {"index": "308", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "SD Dad", "review_title": "Yoshi is great", "review_description": "Got this for my 2 sons they love & have a lot of fun playing it together", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126528004", "uniq_id": "27ea1f05-cdda-5466-ba89-1578af352018", "scraped_at": "16/01/2022 16:18:03"}, {"index": "Makes a perfect 2nd controller for kids.\"", "name": "yes: I recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "3 years ago", "review_description": "4", "recommended_review": "4.875", "verifed_purchaser": "32", "helpful_count": "122140626", "not_helpful_count": "0b338d34-27a3-56a0-9787-1d3b437f1ba9", "reviewed_at": "16/01/2022 16:18:04", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Great sequel to Wooly World\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "126297513", "not_helpful_count": "1962b25e-379f-515a-a961-26950bbd081d", "reviewed_at": "16/01/2022 16:18:05", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "376", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jack Badgerlord Fox", "review_title": "Weaponized Cuteness at it's Finest", "review_description": "Not a heck of a lot wrong with this game. I like to say this is the epitome of Weaponized Cuteness. The designers did a fantastic job with level design. It feels like they actually built every level in the game with cardboard and construction paper in reality and then put it into the game, and they stick with that through the entire game. The controls are tight and the yoshis are as adorable as ever.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "382", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "LaBestia", "review_title": "Great tv quality - could use a microphone remote", "review_description": "This tv has been fantastic and especially since we recently purchased a 5.1 Dolby surround system. Mandalorian looks, and sounds amazing now after getting this tv. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "385", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Tom42", "review_title": "Great picture", "review_description": "Bought for picture quality and I am not disappointed. It is fabulous. I am actually surprised at how wonderful the display is in my home. Very satisfied and would buy again. If it goes on sale anytime soon I will buy another one for another room in my home.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226732331", "uniq_id": "23656563-b23a-5a13-b5c5-5ab4eaabf6e9", "scraped_at": "16/01/2022 16:18:05"}, {"index": "389", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Concerned vizio tv owner.", "review_title": "Terrible software", "review_description": "I bought the tv about a month ago and have never had as many problems with a tv in my life. Vizio has a reputable name so of course I wanted to give the oled a try. Day one when I got the tv home it wouldn\u2019t power up. So after plugging the tv up and unplugging it a few times I got it to power up. The oled does have a beautiful picture but now every morning when I want to turn on the tv it won\u2019t power up again. I have to unplug the tv for 30 minutes EVERY morning for it to come on now. While I\u2019m watching tv the sound just goes away at times and I have to reboot the tv sometimes 3 times before the sound comes back on. At times the hdmi won\u2019t recognize it has the cable or game system connected so I have to turn it off and on again when that happens. This is just unacceptable from vizio. I hear there will be firmware updates but how long will that take?  I don\u2019t know what to do should I return the tv and try another vizio oled or just stay clear of vizio because this is the beat quality they can produce right now", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226704721", "uniq_id": "2cd61b63-9d87-5b31-a9f0-29eb39dc6df2", "scraped_at": "16/01/2022 16:18:05"}, {"index": "420", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TomsVizio", "review_title": "Almost great for gaming", "review_description": "120hrz, VRR, VRR+HDR, black screen but at 60htz it looks great! Vizio please fix.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "434", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "TheEyesHaveIt", "review_title": "Excellent", "review_description": "I\u2019m a sucker for a 3D side scroller with an  interactive background. The art is phenomenal and the small, finer details are top notch.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126248119", "uniq_id": "b8403b8a-3a76-59e4-804e-02aca8146f29", "scraped_at": "16/01/2022 16:18:06"}, {"index": "436", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Bocho45", "review_title": "Yoshi time", "review_description": "Fun game....it took me 1 day to finifh it...should have been bigger and a bit more hard..but it is a fun game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126247183", "uniq_id": "1de1526c-76af-5a89-93d1-1bd12a4f64bf", "scraped_at": "16/01/2022 16:18:06"}, {"index": "440", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "MacFan2410", "review_title": "Awesome game. Music is the only draw back.", "review_description": "Really fun and thought out game. A lot to do and find. Attention to detail is amazing. So far music variety is the only draw back.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126242816", "uniq_id": "ba31126f-3e77-54f6-8ff4-68e2e15d3330", "scraped_at": "16/01/2022 16:18:06"}, {"index": "444", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Johnwicked", "review_title": "Almost perfect", "review_description": "I bought this TV about a month ago. The picture is out of this world good. Since about th 2nd firmware update the TV does not always turn on. I had worked for Geek squad in the past so I know how these products work It is not user error. I contacted support through chat and they say it is not a known issue. If you go on about forums you can see it is a widespread problem. I'd this would be corrected I try would be a 5 star review. I am out of my return window so I certainly hope this issue is corrected.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226599103", "uniq_id": "a55472fc-0d7a-5056-b86f-64b5c181a6cb", "scraped_at": "16/01/2022 16:18:06"}, {"index": "485", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "djFox", "review_title": "Carefully Crafted Joy", "review_description": "Yoshi's Crafted World is everything I had hoped for -- a solid Yoshi title that I can choose to play casually when I want some mellow fun, or play obsessively to go for 100%.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "486", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Robert.Rob", "review_title": "Great TV", "review_description": "We\u2019ve had the TV up and running for two days. So far, it\u2019s been an amazing addition to our HomeKit connected home.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226509543", "uniq_id": "cd39e728-95d5-59b9-b12b-7c91ab92de88", "scraped_at": "16/01/2022 16:18:07"}, {"index": "519", "name": "ENHANCE Flexible LED Gaming Headset Stand", "brand": "ENHANCE", "sku": "307514", "reviewer_name": "Chris R", "review_title": "Decent", "review_description": "Only issue is that the USB ports do not support Fast Charging on the station. Tried charging my phone and it was going to take 6 hours.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4", "reviews_count": "1", "comment_id": "1109149704", "uniq_id": "5d963a19-e6ae-529e-9f3d-b7c312291ad5", "scraped_at": "16/01/2022 16:18:08"}, {"index": "538", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "KasperJazz", "review_title": "Game for Wolf Lovers", "review_description": "If you love wolves you\u2019ll love this game. The storyline is intriguing and well thought out", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6512", "reviews_count": "129", "comment_id": "140255194", "uniq_id": "d7546f35-1fd9-5395-9b2f-3d8d4183c2ce", "scraped_at": "16/01/2022 16:18:08"}, {"index": "580", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "Wonderwoman734", "review_title": "Please play it!", "review_description": "I loved this game, it has an engaging story line. The art was so unique and enjoyable. The side missions were very cohesive with the main quests. The only odd part was the ending but they made it work. All in all I highly suggest playing this game! \u2764\ufe0f", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6512", "reviews_count": "129", "comment_id": "129548101", "uniq_id": "517ddaea-1ba9-55c9-86b1-b5635eaa0583", "scraped_at": "16/01/2022 16:18:09"}, {"index": "584", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "Daniel Saini", "review_title": "Art", "review_description": "Beautiful representation of Japanese folklore through ukiyo-e like cellshading. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "The graphics in CW are superb. It amazes me how realistic and detailed every single thing is in this game! The levels are fun", "name": " but there\u2019s not much challenge. It\u2019s very easy to complete a level without taking any damage.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "As with most Yoshi games", "name": " you still seek out the flowers", "brand": " coins", "sku": " etc in every level", "reviewer_name": " but now there\u2019s a hide and seek challenge with each world where you\u2019re tasked to find hidden items in each level. It becomes real redundant and exhausting.\"", "review_title": "yes: I recommend this product", "review_description": "Verified Purchaser", "recommended_review": "1", "verifed_purchaser": "0", "helpful_count": "2 years ago", "not_helpful_count": "3", "reviewed_at": "4.6556", "rating": "2390", "average_rating": "126204575", "reviews_count": "926f8b58-35d6-5103-a0c9-0d4177b3608f", "comment_id": "16/01/2022 16:18:09", "uniq_id": null, "scraped_at": null}, {"index": "620", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "hsalem", "review_title": "amazing picture, needs 2.1 update", "review_description": "hdmi 2.1 not working as of now, but picture is insane", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "225958360", "uniq_id": "79cfc4fd-a1cd-57a2-9d9b-9d7bdd180f5f", "scraped_at": "16/01/2022 16:18:10"}, {"index": "633", "name": "LucidSound LS35X Black Direct Connect Wireless Gaming Headset for Xbox One", "brand": "LucidSound", "sku": "150229", "reviewer_name": "Mustangguy18", "review_title": "Decent", "review_description": "It\u2019s a pretty solid headset for the price.  Very excited to no longer have a cable to my controller", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.125", "reviews_count": "56", "comment_id": "191870757", "uniq_id": "5632fc84-664c-552d-83c6-176185354fe4", "scraped_at": "16/01/2022 16:18:10"}, {"index": "644", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "Bp3d", "review_title": "A classic", "review_description": "This is a title that was originally released during the last year of the ps2 and honestly one of that console's best. It features a beautiful artstyle, innovative interface, and great story steeped deep in Japanese lore with an overall theme of restoring the beauty of nature with some humor thrown in from time to time as well, with an epic Zelda like gameplay. Unfortunately this would be the swan song for Clover studios (famous for Viewtiful Joe) but they certainly went out on a high note. Some minor graphical glitches mar this version but otherwise a truly great title and one of my all-time favorites from it's era.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.6512", "reviews_count": "129", "comment_id": "117221259", "uniq_id": "482c12a3-247b-5007-a307-e8c073683821", "scraped_at": "16/01/2022 16:18:10"}, {"index": "649", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "MADMAN39", "review_title": "Xbox for life", "review_description": "Great controller it when feels different than the Normal one", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "191531935", "uniq_id": "7ff4026a-4e2a-56ee-bee5-cc98597775d1", "scraped_at": "16/01/2022 16:18:10"}, {"index": "663", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ricardo20", "review_title": "Vizio OLED Review", "review_description": "I bought these tv a month ago, and I so very happy I did, beautiful picture, I can\u2019t wait to buy my Xbox Series X to see how great it plays games.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "225321740", "uniq_id": "8834963e-4106-54f9-a85c-8d49ce4e8615", "scraped_at": "16/01/2022 16:18:10"}, {"index": "672", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "Xerostarr", "review_title": "Can finally play without digging out the ps2", "review_description": "Great game and nice that they rereleased it for newer consoles.  Love the art style and the game play still holds up well since the first release.  Not sure how it would compare to the wii version with wiimote support, but if you enjoyed it on ps2 you'll enjoy it here.  Didn't really make much use of the touchpad support for celestial brush techniques, but that could be something some players may enjoy more than the usual analog stick.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6512", "reviews_count": "129", "comment_id": "115560120", "uniq_id": "a74fffd9-b5ce-5c99-97e0-880e7bba9f58", "scraped_at": "16/01/2022 16:18:11"}, {"index": "697", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Robbyj1500", "review_title": "Camera blocks gameplay", "review_description": "If you want to stream with it, the camera will be on your monitor as well blocking gameplay", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "3.969", "reviews_count": "129", "comment_id": "191374468", "uniq_id": "88280e84-ecf7-57bc-aa8d-0acf464e2d72", "scraped_at": "16/01/2022 16:18:13"}, {"index": "700", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Anonymously anonymous mus", "review_title": "Facts over opinion", "review_description": "Bought this for a buddy since he was twitch streaming w just a mic, he loves it as do I bc I get to see his pretty lil face now. Ohhh an btw this literally shipped in a day. He was goin in vaca for the weekend and it showed up a half hour before he left. Seriously excellent timing GameStop!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.969", "reviews_count": "129", "comment_id": "190894313", "uniq_id": "89b2f7d5-2766-5a33-a39f-c597c0f1591e", "scraped_at": "16/01/2022 16:18:13"}, {"index": "702", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Rmora023", "review_title": "Ps5 camera", "review_description": "It's great! My only complaint would be is that there is no mic for the camera. Other then that, the visual quality of the camera is pretty great, I love it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "4", "average_rating": "3.969", "reviews_count": "129", "comment_id": "190661558", "uniq_id": "ede7c01e-3797-51b4-a80d-883fb7b41559", "scraped_at": "16/01/2022 16:18:13"}, {"index": "703", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "deegeedee", "review_title": "Does not work with PS4 titles!", "review_description": "The thing is not compatible with PS4 games that need a camera!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 months ago", "rating": "1", "average_rating": "3.969", "reviews_count": "129", "comment_id": "190561474", "uniq_id": "394bcb04-b98a-5db5-813d-3bebb4c28444", "scraped_at": "16/01/2022 16:18:13"}, {"index": "712", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Nathand60", "review_title": "Left blue Nintendo Joy-Con Purchase", "review_description": "So far we havent had any drifting issues which is saying alot with a left Nintendo joycon. All in all were pleased with our purchase", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "181301865", "uniq_id": "da289789-2dc5-55ab-96e3-a7c119fef179", "scraped_at": "16/01/2022 16:18:13"}, {"index": "720", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "MP75", "review_title": "Good but missing much needed improvements", "review_description": "It does what it states. Although, it would have been nice if they had thought ahead and added additional features and components to it. A mic would have been great. Ability to incorporate it into your VR setup would have also been a great addition.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "737", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "JWashington", "review_title": "Beware there's no mic on the camera", "review_description": "The ps4 camera was better honestly, the took the mic off of the camera which was super useful. Other than that it's alright I guess.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "3", "average_rating": "3.969", "reviews_count": "129", "comment_id": "180611737", "uniq_id": "e44d5428-51f3-5a92-ad0b-e4f339884fc0", "scraped_at": "16/01/2022 16:18:14"}, {"index": "742", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Anonymous", "review_title": "completely unnecessary purchase", "review_description": "don't buy, you can't even use it to talk in while chatting with friends.  I haven't even been able to use it once.  Save your money, or use the old one if it even works.  have no clue", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "9", "reviewed_at": "10 months ago", "rating": "1", "average_rating": "3.969", "reviews_count": "129", "comment_id": "174274602", "uniq_id": "99539197-850d-5452-bb13-1a79882c05b0", "scraped_at": "16/01/2022 16:18:14"}, {"index": "743", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "TheStonerd", "review_title": "Good quality", "review_description": "Perfect for streaming on PS5, just make sure your room is well lit so it can look sharp.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "3.969", "reviews_count": "129", "comment_id": "172766123", "uniq_id": "9b711b04-98b8-5b1d-9551-90b98eba9591", "scraped_at": "16/01/2022 16:18:14"}, {"index": "744", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "ReikimasterColin", "review_title": "Hd camera is excellent", "review_description": "Easy to use. Hook was super easy. Couldnt be happier with my HD camera", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "3.969", "reviews_count": "129", "comment_id": "172608606", "uniq_id": "80431fd0-c0eb-5f1f-925b-7421bf7208f6", "scraped_at": "16/01/2022 16:18:14"}, {"index": "756", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Anonymous", "review_title": "Used Joycons are not worth it.", "review_description": "Has JoyCon Drift. I recalibrated several times and joystick drifts south no matter what I do. Took 3 1/2 weeks to get to me, and then when it finally came it wasn't usable. Do not recommend getting this product used at all.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "160870891", "uniq_id": "32ca1f15-3fa7-525f-8f7f-8e00fa2d428b", "scraped_at": "16/01/2022 16:18:15"}, {"index": "759", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "Deathstroke4561", "review_title": "Best game I've gotten in a long time", "review_description": "I freaking love Theif. When I played the demo it was really good. Now since I've got the game, it's even better. The gameplay is awsome, the graphics on it are amazing, because I love Unreak Engine, and the feeling of sneaking around and being surprised is fun.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.52", "reviews_count": "125", "comment_id": "147865236", "uniq_id": "c8583c62-b66b-5227-a510-5250e9fcd4f4", "scraped_at": "16/01/2022 16:18:15"}, {"index": "774", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "Big U G", "review_title": "Must play", "review_description": "Once i learned the movements this is fun to immerse oneself in.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "3.52", "reviews_count": "125", "comment_id": "120884154", "uniq_id": "73740f63-c497-5b45-b7c7-9252422d80b7", "scraped_at": "16/01/2022 16:18:16"}, {"index": "796", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "driftz33", "review_title": "Joy-con works as described", "review_description": "Joy-con was in good condition, no damage or issues", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "143235030", "uniq_id": "9e79717d-e07b-51b9-bde2-2f132925ce1e", "scraped_at": "16/01/2022 16:18:16"}, {"index": "808", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "MrYarboro", "review_title": "Really good game!", "review_description": "This is my first thief game i have played and i had fun playing it. Really the only problem i have with it is that the map is kind of hard to understand, it's hard to get around for me. I got this game on the day it came out and i still play it today it has replay value.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "4", "average_rating": "3.52", "reviews_count": "125", "comment_id": "37965430", "uniq_id": "c6d658bc-e7e1-5314-be6b-ed777bb0be50", "scraped_at": "16/01/2022 16:18:16"}, {"index": "827", "name": "The Simpsons Game - PlayStation 3", "brand": "Electronic Arts", "sku": "930082", "reviewer_name": "KnightTime", "review_title": "Great Game", "review_description": "This game is awesome it is so fun and crazy which games are not like any more. there is so many people that want games like assassin creed and fps and I'm sick of it I love how silly this game is yet creative and its fun also it has split screen co op which is the best when friends are over or if you have siblings It is short but it is repetitive great buy", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.0385", "reviews_count": "26", "comment_id": "32623088", "uniq_id": "f243790c-735f-530b-be84-f6589f223312", "scraped_at": "16/01/2022 16:18:17"}, {"index": "839", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "Misterb4", "review_title": "Old Thief Fun", "review_description": "I'm an old time fan of the original and this game brings back all those great memories of thief from the past. Thief is a stealth game and all the reviews pointing out flaws don't seem to realize this isn't a FPS. Love stealth, you'll love Thief!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "4", "average_rating": "3.52", "reviews_count": "125", "comment_id": "34780117", "uniq_id": "4820e2b6-c3f4-5a94-9806-332f1bc13759", "scraped_at": "16/01/2022 16:18:18"}, {"index": "842", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "CrakingHeads", "review_title": "How they product did not work", "review_description": "Product was not working properly had to buy new controllers", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "2", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "141250752", "uniq_id": "4341ee4f-49fe-5923-9f88-c07e9f54e848", "scraped_at": "16/01/2022 16:18:18"}, {"index": "846", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "LCPC", "review_title": "Was defective", "review_description": "Didnt charge. Didnt lock into the handheld console. Slid right off. Needed to exchange it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "140980786", "uniq_id": "2fc5aa96-cba8-5916-8de6-31d4de900cd2", "scraped_at": "16/01/2022 16:18:18"}, {"index": "851", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Mamabear0307", "review_title": "Some people", "review_description": "It didn\u2019t work. I had to take it back and get another one. But I will add Gamestop was amazing about it!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "140346309", "uniq_id": "011521d9-ebc0-5a5b-b125-5327293ba233", "scraped_at": "16/01/2022 16:18:18"}, {"index": "855", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "MarcusM822", "review_title": "Functionality  Superb", "review_description": "My switch is finally getting the use it deserves. My old old pro con had drift and never locked on to the console and it was bought and replaced new. This one was preowned and works better than my previous ones.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "138752892", "uniq_id": "e2f02a9c-7a53-52d2-b4a2-53e62bd88c71", "scraped_at": "16/01/2022 16:18:18"}, {"index": "860", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Dennis Anty", "review_title": "Bought to salvage", "review_description": "I bought the joycon to take apart and reshell, all the pieces worked like a charm", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "137739327", "uniq_id": "10158236-221e-5930-9580-34ed5f3b8d7d", "scraped_at": "16/01/2022 16:18:18"}, {"index": "869", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "Tearlessdeath", "review_title": "Destroying a series", "review_description": "I had high hopes when Eidos Montreal said they were making this game I had high hopes this is the company that did Deus Ex: Human Evolution which was a beautiful game. There are some minor problems with this which I can deal with but when you add them up it starts to feel like they just didn't care about the franchise that they were making. (1) The voice acting in the cutscenes was average but when half of the times the lips and the voice move off key and it looks like a English dubbed Chinese movie. (2) The characters in the story are so boring they have no appeal to the story and they are very forgetful. (3) the load point between parts of the city were stupid crawling in between boxes and lifting a log at the end was to generic they could of changed up the animation to different parts. P.s also I've only ever had motion sickness once in gears of war franchise when you run, and this game was making me sick I had to play in 1 hour runs. did this happen to anyone else? I would recommend maybe a rent but don't buy this and you won't be disappointed.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "7 years ago", "rating": "2", "average_rating": "3.52", "reviews_count": "125", "comment_id": "34711984", "uniq_id": "fbf765fe-d56e-54bc-a4b6-a351dca989b9", "scraped_at": "16/01/2022 16:18:18"}, {"index": "875", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Yezenia", "review_title": "Great buy", "review_description": "Works perfect. Connected right away. No issues what so ever.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "137025588", "uniq_id": "cf8bb203-2ce8-5871-a689-bb7867c07b6b", "scraped_at": "16/01/2022 16:18:19"}, {"index": "884", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "123456789Jess", "review_title": "Great buy", "review_description": "I bought these for my husband's bday and he said they are wonderful. He loves how sturdy they are and the mic mute feature with the flip of the mouth piece is a great addition.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 months ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "188827697", "uniq_id": "cd757dc8-2991-5753-9848-af4f604e21a8", "scraped_at": "16/01/2022 16:18:19"}, {"index": "888", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "OldGasbag1965", "review_title": "Great headset", "review_description": "The sound is amazing I connected with optic very clear", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "174247519", "uniq_id": "2907c197-ed3c-5acc-a40d-b1660aca6630", "scraped_at": "16/01/2022 16:18:19"}, {"index": "895", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "KP88", "review_title": "Please Stop!", "review_description": "Don't buy this game\u20265 minutes in and you see the little potential it has. It is awful, not enjoyable and at times I can't believe I paid hard earned money for it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "8", "reviewed_at": "7 years ago", "rating": "1", "average_rating": "3.52", "reviews_count": "125", "comment_id": "34678417", "uniq_id": "a1e48cc7-1488-5d9a-9d49-a6fd1bcd4e59", "scraped_at": "16/01/2022 16:18:19"}, {"index": "912", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Djjuliamarie", "review_title": "Joycon", "review_description": "Needed replacement, they had a preowned for a tiny bit less than new.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "131846676", "uniq_id": "9e3afce0-b305-5f5f-91d9-28bcdd216a0b", "scraped_at": "16/01/2022 16:18:19"}, {"index": "919", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Deadlyswordsman", "review_title": "Useful", "review_description": "Glad i got this for my bride to be since hers was being weird.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "131114528", "uniq_id": "dac0e068-caba-5859-a494-7d02809fbedb", "scraped_at": "16/01/2022 16:18:19"}, {"index": "922", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Deaththekid52", "review_title": "Amazing game!", "review_description": "This is by far one of the best games I have ever played.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "132120455", "uniq_id": "d0350668-c95f-506e-8fb2-e362401a297a", "scraped_at": "16/01/2022 16:18:20"}, {"index": "You become a leader", "name": " but have zero leader choices. Makes absolutely no impact to the game even though they make a big commotion about it. ", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "AI is horrific and can throw sticky grenades", "name": " knives", "brand": " ect through walls with perfect accuracy. Be ready for an extremely unfair fights. So I hope you're ready to cheese some conflicts. ", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "-\"\"enemy players\"\" have rediculous accuracy and damage. ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Original voices and subtitles! However there's no English audio. So there's no choice.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "926", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Darkrose29", "review_title": "Good game", "review_description": "We watch the anime and love it got the 1st game it was good but not what we were looking for this one is better and love the game play so far", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "128645824", "uniq_id": "6ffa4c49-e6d2-5a1a-847d-a4a60dfd1eb0", "scraped_at": "16/01/2022 16:18:20"}, {"index": "944", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Leo3", "review_title": "Great buy", "review_description": "Great deal and works great with my PS5.  Very comfortable headset.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "171204137", "uniq_id": "e0d63651-9f79-5d2f-a192-b7f2d3c0ecde", "scraped_at": "16/01/2022 16:18:20"}, {"index": "945", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Rickismadman", "review_title": "Gaming set", "review_description": "These headphone set is far the best to what I need and more, comfy and loud and clear thanks", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "166241537", "uniq_id": "98a98fb4-58ce-51b8-aa10-ab2cce57eb2b", "scraped_at": "16/01/2022 16:18:20"}, {"index": "956", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Donelin", "review_title": "A good game but...", "review_description": "one excellent game but only one flaw...Not in english", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "3", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "124842910", "uniq_id": "4d597074-7696-5208-826c-29fc21a15697", "scraped_at": "16/01/2022 16:18:20"}, {"index": "961", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "TaylorS", "review_title": "Broken", "review_description": "It was broken - no matter what I did, the stick veered upward", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "129240509", "uniq_id": "0bdb503f-829c-545a-8a06-cc3adf3a9382", "scraped_at": "16/01/2022 16:18:21"}, {"index": "964", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Everett Klomp", "review_title": "Used Left Joy-Con", "review_description": "The replacement left Joy-Con is fine and works properly.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "127967469", "uniq_id": "8e9a56eb-cb6d-5390-9a2b-ccacb84f50a0", "scraped_at": "16/01/2022 16:18:21"}, {"index": "976", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Bernard M", "review_title": "PS4 RIG  800 HS Headphones.", "review_description": "Overall very good headphones, only thing is that they don\u2019t have super human hearing for games like CoD. But they are excellent at canceling out background noise, very loud and clear sound. And have great battery life. I would recommend these headphones.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "142047495", "uniq_id": "ea6fd264-fdf3-51c6-8cfa-cadb8211aebf", "scraped_at": "16/01/2022 16:18:21"}, {"index": "977", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Alex Velez", "review_title": "Just being Real", "review_description": "i have medium to long hair so it tends to slide out of place a bit with the extra strap it has for comfort. great for long gaming sessions. great sound quality but not the best sound for helping me pinpoint an enemy location in a live action FPS like my most played game Apex Legends. Comfort make up for that tho. i tend to play for hours with these on they what there supposed to do. they haven't shocked me yet. and unlike my previous head set there enough comfort in these headphone that they don't cause any discomfort. i think there good. These headphone are definitely better than Turtle Beaches", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "141896944", "uniq_id": "868e7df4-14bf-5225-ad4b-b2a55af8f1ef", "scraped_at": "16/01/2022 16:18:21"}, {"index": "987", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "xizanagix", "review_title": "Great!", "review_description": "I bought the game a year ago, finally finished it. Story line was good, a lot of work done on this. Great job!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "122684989", "uniq_id": "a6f4b563-c7bf-570e-9e71-d4f45408479d", "scraped_at": "16/01/2022 16:18:21"}, {"index": "996", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "EthanW", "review_title": "Worth It", "review_description": "My left joycon was lost a few weeks ago and I didn\u2019t know what to do. I had bought the switch with the neon colors, and was disappointed to find the Left Neon Joycon was not available for retail sale. GameStop was the only place I could find it, so I made the purchase. It arrived quite a bit late, but I think that was a fault of USPS, not GameStop, and it was worth the wait. My original joycon had issues from the start, so this was actually a step up. I highly recommend this, as it is half the price of a new one and it functions and looks perfectly.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "126248968", "uniq_id": "e9a9a3c7-e807-537e-bf3a-79a7d89f0ca5", "scraped_at": "16/01/2022 16:18:21"}, {"index": "997", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Leon99", "review_title": "New switch joy con", "review_description": "It works good, plus I didn\u2019t have to get a different color than the one I already had.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "126060090", "uniq_id": "cf74313f-1487-5b52-9168-4cf2b4e52f47", "scraped_at": "16/01/2022 16:18:21"}, {"index": "999", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Kothanare", "review_title": "Joy-Con left dosnt work vary good", "review_description": "Every left joy-con i buy pulls to the left after about a week i think Nintendo needs to fix the problem.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "3", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "125539310", "uniq_id": "4069aeba-91b5-55c9-9f58-c56f7e38abf1", "scraped_at": "16/01/2022 16:18:21"}, {"index": "1005", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Brandon Waters", "review_title": "RIG 800HS - Great Quality and Satisfied", "review_description": "Amazing sound, Great quality, product as described and packaged very well. Decent price and compatible to top ps4 headsets for sure", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "140824544", "uniq_id": "e281628d-7845-529a-99f9-8b6d72f6a2d5", "scraped_at": "16/01/2022 16:18:21"}, {"index": "1040", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "KendraTG", "review_title": "Just what I needed.", "review_description": "My original left joy-con got permanently out of alignment and could no longer be properly recalibrated,so finding this was great. It works perfectly and I have been enjoying being able to play in handheld or TV mode without the cursor or my character suddenly just moving all over the place.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "123616113", "uniq_id": "81d20c8d-5787-57b9-9d1d-4630a396be7a", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1080", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Brandonhsa", "review_title": "Better than the original", "review_description": "Bought as a second joy con and was very pleased with quality of used.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "120436668", "uniq_id": "a726ab39-5531-580b-9abb-de0456d3fc92", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1082", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Frank Nez", "review_title": "Don\u2019t buy pre-owned.", "review_description": "Pre-owned price was cheaper but not worth the gamble. Purchased to use on a trip only to find out the product was defective. Very dissatisfied.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "119306733", "uniq_id": "4049c309-0bb1-5905-8502-9a53736cf524", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1089", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Universegirlaz", "review_title": "Breaks away from the other SAO games", "review_description": "The GGO arc of SAO was by far one of my favorites of the series. I have played all the SAO games and became annoyed that every single one praised Kirito every 5 seconds and than left my own character as an after thought. Not Fatal Bullet. Right from the begining yiu make your own avatar and can change it anytime! ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1108", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Bleu20", "review_title": "Not Bad", "review_description": "It's pretty fun! Though there's a lot of grinding involved and typical SAO moments", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "115239567", "uniq_id": "e5e8f10f-d380-544b-8a05-b812828c800c", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1120", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Dmuchison", "review_title": "Good game.", "review_description": "About this about a week ago, and it's a good game. There's a lot of talking scenes, especially in the beginning of the game, but after you get into the action it is very good. Good controls, no major complaints. Though I do wish some of the events that they talk about you actually have to take action in instead of just watching them talk about it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "114288668", "uniq_id": "2055d519-1c34-516d-a45f-6a44836539b1", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1121", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "lockboy69", "review_title": "Quick, easy and inexpensive", "review_description": "We were at my daughter's soccer game and my younger son had his Nintendo Switch with him. A few weeks prior he had closed the Switch in the arm rest of the car and mangled the left blue controller. We had manahlged to piece back together or so we thought. So while at the game he was running around and some how the black knobnon the controller fell off. Luckily there was a Game Stop only minutes away and instead of having to pay for a new set or single controller the store rep offered a referphished one at a much lower cost.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Mike\"", "name": "No: I don\u2019t recommend this product", "brand": "Verified Purchaser", "sku": "43", "reviewer_name": "4", "review_title": "3 years ago", "review_description": "5", "recommended_review": "3.9133", "verifed_purchaser": "738", "helpful_count": "114048554", "not_helpful_count": "c6c8ae50-0d69-53e3-bd69-9bd04365f45c", "reviewed_at": "16/01/2022 16:18:23", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1122", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Zagima", "review_title": "Great game", "review_description": "Love the graphics and by far the best sword art online game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "114258927", "uniq_id": "9919f0c3-ff2f-5d82-b2e3-cc1db3cc5c88", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1133", "name": "Star Wars Episode IX: The Rise of Skywalker Supreme Leader Kylo Ren Force FX Elite Lightsaber", "brand": "Hasbro", "sku": "195533", "reviewer_name": "Andreia h", "review_title": "This is amazing", "review_description": "[This review was collected as part of a promotion.] I couldn't wait to get this going. Put it all together and was like why wont it light up. Then I realized the blades weren't in all the way. So make sure of that. Push in and rotate. All 3 of them. Works just fine after. It has amazing sound and it lights up a dark room. Its pretty heavy as well. As a star wars fan this was amazing. I couldn't stop playing with it and my fiance was like seriously as he was watching a movie I was like fight me as I was pretending we were in a star wars movie lol. Holds up on stand great. I like the battery pack. It all is amazing. Instructions could have written words on what to do. But doesnt take away how fun and great this lightsaber is.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.5952", "reviews_count": "42", "comment_id": "137973623", "uniq_id": "ab64d2f8-fe44-5bd5-a5b7-590dd3afe5b4", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1151", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Usmc87", "review_title": "No wrist strap", "review_description": "It's insane to sell these at the same price as new and not include wrist straps! Straps are 7 dollars apiece. I just got pre owned blue left and right and neither had a strap.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "37", "not_helpful_count": "27", "reviewed_at": "4 years ago", "rating": "3", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "95352445", "uniq_id": "45388ff8-bdd7-5098-b26d-a25e5866c2f2", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1158", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "mighty_mouse220", "review_title": "Decent", "review_description": "Decent headset with clear audio. Clear mic with not much feedback issues at all", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "129414154", "uniq_id": "81ab2201-f139-555b-8732-9f9dfe11777e", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1162", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Kayla150", "review_title": "A MUST-HAVE", "review_description": "I've envested 75 hours into this game and have loved every second of it. I love everything sword art online. To the novels, anime, and the games! Like it's past games, fatal bullet is amusingly well done. This game is a must play! Has a great story!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "25", "not_helpful_count": "3", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "111137419", "uniq_id": "5676380d-8a2d-5bf2-acf3-ddf0387dc53f", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1171", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Kbuchek1", "review_title": "RIG 800HS wireless headphones", "review_description": "Works good and thinking about buying another one. I would recommend this to all", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "127322103", "uniq_id": "a06d8218-b9b3-5bcc-8d5e-37eb477de3b7", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1180", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Gathman", "review_title": "YOU ARE NOT PREPARED!", "review_description": "Holy cow amazing! Secong only to Astro A50 in terms of sound! Honestly astounding battery life! And very durable with breathable ear padding! Best headset for its price point!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "125923879", "uniq_id": "ab294a9d-4ec4-52ba-94f1-c3342449c45f", "scraped_at": "16/01/2022 16:18:25"}, {"index": "And great sounds\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.4111", "verifed_purchaser": "596", "helpful_count": "125060685", "not_helpful_count": "a40b4ef2-9174-5f9e-91eb-e93fec127b27", "reviewed_at": "16/01/2022 16:18:26", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1239", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Jboyd01", "review_title": "Amazing Headset", "review_description": "It is an amazing headset that\u2019s durable and convenient. Definitely worth the money!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "124543187", "uniq_id": "da31894b-fa23-537d-8dba-b2defd4677e1", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1247", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "TheXeroLink", "review_title": "A Fantastic 3DS Game", "review_description": "This is a great Zelda game. Originally this game was to be a remake of TLoZ A Link to the Past, the team decided to make it it's own game. It is a blast to play and the mix of familiar with new things is a great reason to pick up this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "130450633", "uniq_id": "a9de33d9-bcf8-5211-924b-66b1a91f6157", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1269", "name": "Honey-Can-Do Floating Wall Shelf", "brand": "Honey-Can-Do", "sku": "323846", "reviewer_name": "Purpie", "review_title": "Pretty but not very useful", "review_description": "[This review was collected as part of a promotion.] The shelf is well-made and attractive. I personally would prefer the wood shelf to be a little bit darker.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1284", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "YdoUneed", "review_title": "Greatest of all Time", "review_description": "Best Zelda game EVER!! Nintendo should make more in the same style!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "125425009", "uniq_id": "40534795-b24c-518d-88d6-3809b93d3cec", "scraped_at": "16/01/2022 16:18:28"}, {"index": "1289", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "BigDiesel870", "review_title": "Great features!", "review_description": "I bought this about two months ago and it is the best sound quality that I\u2019ve ever had in a headset", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "123532667", "uniq_id": "7921cfee-bf36-53b7-9e1a-099e587b818e", "scraped_at": "16/01/2022 16:18:28"}, {"index": "1308", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Sexy Salad", "review_title": "A Link Between Worlds......it's not bad.", "review_description": "This was a decent title to play but most of the dungeons didn't feel as long as they could have been.  And while I felt most of them were too easy, I did find two of them to be annoyingly difficult.  Not because they were clever but because their layouts weren't as clear cut.  And don't get me started on that stupid stealth section.  All and all, its a decent title and it'll keep your busy in your off time if you needed something to fill it.  Oh, I enjoyed the 2D transformation and would like to see this power return in a future title.  That was a cool one.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "125136206", "uniq_id": "9c22e76f-95b3-5394-9d35-9f9dda14e594", "scraped_at": "16/01/2022 16:18:29"}, {"index": "1320", "name": "NES Controller Metal Water Bottle", "brand": "Paladone", "sku": "234047", "reviewer_name": "MysticSeer", "review_title": "Review", "review_description": "Very nice, I really like it. Holds a full o", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1326", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "AnthemEager", "review_title": "control party and game chat from headset", "review_description": "Protip. Use the digital and usb connection as instructed. Make sure your input and output is set to the headset. Your done. bottom control is overall volume. Top control adjust party and game. Top for game, bottom for party.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "122197053", "uniq_id": "fa4e8a84-9e72-52a2-a82c-7f8406058a6b", "scraped_at": "16/01/2022 16:18:29"}, {"index": "1331", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "ShadieBlack", "review_title": "Amazing Quality", "review_description": "I bought this headset a week ago and they haven\u2019t failed. They are super nice and heavy duty compared to my turtle beaches. Yeah I know turtle beaches are supposed to be the stuff. The RIG 800 HS beat them. They have easy instructions hooking them up. Basically self explanatory. Sound quality is great. Super comfy around the ears and head. I can wear them for hours on end without being uncomfortable. I haven\u2019t find anything negative about them yet. Overall I give them a 5/5 rating.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "121472523", "uniq_id": "2b74e2c3-6e06-5610-a450-8625154a1bcd", "scraped_at": "16/01/2022 16:18:29"}, {"index": "1338", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Dodgers4life79", "review_title": "Awesome game!", "review_description": "It is a good game! The game is good but there is one part I didn\u2019t like and that was that is was confusing in one part but that is because I\u2019m stupid. I would recommend the game to Nintendo players!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "121301206", "uniq_id": "d7e505cc-8a72-56d4-aa7a-a503857090a9", "scraped_at": "16/01/2022 16:18:30"}, {"index": "1362", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Me06", "review_title": "Lots of fun", "review_description": "Great game. I\u2019m a big fan of the Zelda Franchise. Never disappointed", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "117131638", "uniq_id": "e48b7e50-d87f-5362-8d65-5a2daaaa3ff6", "scraped_at": "16/01/2022 16:18:30"}, {"index": "1366", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Ryan7068", "review_title": "Best headset I have ever had", "review_description": "Very comfortable and great sound. Best purchase I have made in a very long time. Well worth every penny.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "120108799", "uniq_id": "27a6adbf-8b20-503b-953c-2561003122eb", "scraped_at": "16/01/2022 16:18:30"}, {"index": "1381", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Ginamc73", "review_title": "Fantastic fun", "review_description": "If you liked/loved A link to the past as I did you're going to love A link between worlds more. Same classic LOZ game play with better graphics & loads more to figure out and do. I love this game & am very happy we purchased it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "114895086", "uniq_id": "8380dd25-a92f-5f6c-a1b8-bd7f671d6c89", "scraped_at": "16/01/2022 16:18:31"}, {"index": "Great game!! Highly recommend!\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "3 years ago", "review_description": "5", "recommended_review": "4.6818", "verifed_purchaser": "396", "helpful_count": "114340700", "not_helpful_count": "d5045ec5-7957-5041-b14b-dc41dd138907", "reviewed_at": "16/01/2022 16:18:31", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "COMFORT", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "BATTERY", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1404", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "FearTheKilt", "review_title": "In my top five Zelda Games.", "review_description": "So, I'm a massive Zelda fan. I've played all but three games, The first two (I don't have an NES) and Skyward Sword (I refuse to buy a Wii). A Link Between Worlds is only out ranked by Wind Waker, Ocarina of Time and maybe Minish Cap or Majora's Mask. I absolutely love the game. It is absolutely beautiful to look at, the sound track is amazing, the gameplay feels like the Minish Cap and I believe it will, or at least should, become a classic. However, it's not all good. There are two mechanics that I find interesting. First, is the 'wall merge' this is a cool little mechanic that allows you to merge into a wall for a short time. It's not that I don't like this mechanic, but it's integrated into a ton of puzzles and I have a tendency to forget about the more gimmicky mechanics like this which causes me to get stuck (even on my third play through). Second, is that you 'rent' most of you items. Now, this one really sucks. When you die you lose all of those items. But that is not the reason I hate this mechanic; the reason I hate this mechanic is that you never know just exactly what you're going to need in a dungeon. If it weren't for this mechanic Link Between Worlds would easily be my favorite game of all time; it is awful and should NEVER be put into another Zelda game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "4", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "62007788", "uniq_id": "dcb444d4-0319-5d07-bcc9-bd9a0f357bb7", "scraped_at": "16/01/2022 16:18:31"}, {"index": "1408", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "george4963", "review_title": "great headphones", "review_description": "i just got them and the way it sounds is great  i hear everything i can walk around the house and still talk on them i us them in the division and believe me i didn't know i can hear so many things thank you again", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "118471798", "uniq_id": "80b56588-fa45-5377-bdfc-eb7026791ac5", "scraped_at": "16/01/2022 16:18:31"}, {"index": "I can't emphasize enough just how fantastic a Zelda game this is. The only person I would not recommend this to would be one who only likes character and narrative-driven games .\"", "name": "yes: I recommend this product", "brand": null, "sku": "2", "reviewer_name": "1", "review_title": "6 years ago", "review_description": "5", "recommended_review": "4.6818", "verifed_purchaser": "396", "helpful_count": "51795339", "not_helpful_count": "1e9e21c7-edbc-5c4d-a9c5-3aaaf9e406ef", "reviewed_at": "16/01/2022 16:18:32", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1426", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Egzacklee", "review_title": "These headphones are terrible", "review_description": "Terribly awesome is more like it! Completely wireless, light, excellent battery life, easy installation, and great sound quality! I am quite satisfied with them and I\u2019m sure you will be too :D", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "116908645", "uniq_id": "447f8e13-f98c-55ee-a7a2-2eedd33a3f7d", "scraped_at": "16/01/2022 16:18:32"}, {"index": "1434", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Briandaniel45", "review_title": "High quality headphones", "review_description": "I was happy with them until the mic randomly stopped working within the first month.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "114908493", "uniq_id": "6491e6d4-dd1d-5202-b77f-8a97c2e56ff6", "scraped_at": "16/01/2022 16:18:32"}, {"index": "1436", "name": "Mothergunship - PlayStation 4", "brand": "U&I Entertainment", "sku": "177892", "reviewer_name": "JRMons71", "review_title": "Fun game.", "review_description": "It is kind of fun, have only played it a little. But have had fun while playing it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "2.963", "reviews_count": "27", "comment_id": "140433821", "uniq_id": "c71dc548-c396-5569-907b-dd2eab1e614a", "scraped_at": "16/01/2022 16:18:32"}, {"index": "The game\u2019s graphics are good", "name": " and the use of the 3D effect is exemplary; it legitimately contributes to some parts\u2019 visual quality. The soundtrack and sound effects are both great", "brand": " also. Of particular quality are the Overworld themes of both Hyrule and Lorule. The story is good", "sku": " and the characterization of Ravio", "reviewer_name": " Princess Hilda", "review_title": " and Yuga is nicely executed (for a video game). The optional order of dungeon completion (in Lorule) was a nice addition", "review_description": " too. The combat system is simple yet effective", "recommended_review": " and though some Lorulean enemies are a bit overpowered", "verifed_purchaser": " this should be mitigated by eventual health and weapon upgrades. And though some specific instances in the game felt a bit obscure as to how to progress", "helpful_count": " this can probably be attributed to my inaptitude at Zelda games. Rest assured", "not_helpful_count": " enough experimentation and exploration can generally solve most puzzles and problems.", "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1458", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Anonymous", "review_title": "Amazing", "review_description": "It is amazing to be able to play these games again. Especially Heavy Rain and Beyond. I am so beyond thrilled. I can't put my controller down", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "4 months ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "186932523", "uniq_id": "e71c7058-a1e2-5107-bb24-0df1527af504", "scraped_at": "16/01/2022 16:18:33"}, {"index": "1471", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Anonymous", "review_title": "A Cult Classic", "review_description": "I purchased this game yesterday and it was totally worth the forty bucks. Ravio is great and the weapon renting system is also good. It even has good field as well as dungeon combat. I recommend it to all kinds of gamers.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "34264786", "uniq_id": "da8d1c71-86a2-5b8c-a4e5-5f94a8a916e1", "scraped_at": "16/01/2022 16:18:33"}, {"index": "1484", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Knightwolf4444", "review_title": "My opinion", "review_description": "Living in Michigan I just had to have the game Detroit. All games in this 3 pack are exceptional. Like that you can play them more than once and have different outcomes.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "129378436", "uniq_id": "4a5482f3-e6d3-5767-bced-990a1c6479dd", "scraped_at": "16/01/2022 16:18:33"}, {"index": "Also he talks. 'Nuff said.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1503", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "StLouisR1", "review_title": "Almost worth the price, except GameStop ruins the", "review_description": "The games have great story, even so the game mechanics pull away from the player\u2019s enjoyment. Timed button combos do no justice to the games. Finally, GameStop does not recognize the package upon return and will only take the games back individually.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "127695455", "uniq_id": "4d277bc0-328c-5214-a50f-b38fdea799a5", "scraped_at": "16/01/2022 16:18:34"}, {"index": "1505", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Charlie McLane", "review_title": "Detroit", "review_description": "When I bought the game for my son, I asked the clerk specifically if there was cussing in the game and she said there was not. However, the game was full of inappropriate language. Actually, overly bad and the sad part is it isn\u2019t necessary; the game isn\u2019t bad actually.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "2", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "127661606", "uniq_id": "430354d4-bf36-5676-98ed-3dff5045ec02", "scraped_at": "16/01/2022 16:18:34"}, {"index": "1512", "name": "KidKraft Wall Storage Unit with 8 Plastic Bins White", "brand": "KidKraft", "sku": "318705", "reviewer_name": "VGB", "review_title": "Wall storage unit", "review_description": "It looks good but not great quality and came damage during shipment. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1524", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Chameleon6", "review_title": "Classic", "review_description": "Awesome value for 3 classic games! I love this collection.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "126239586", "uniq_id": "5e03e18c-7f92-5dd9-b26d-ff2fdc0f5ad3", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1533", "name": "Remnant: From the Ashes - PlayStation 4", "brand": "THQ Nordic", "sku": "213157", "reviewer_name": "jan_luv_souls", "review_title": "Most fun CO-OP since Dark Souls", "review_description": "This is a fantastic game!!  We are having a blast playing the whole game together me and my family and friends. We are doing campaign and survival mode. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "If you are not a dark souls fan", "name": " this is still a MUST HAVE!!!!\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "3", "review_title": "0", "review_description": "1 year ago", "recommended_review": "5", "verifed_purchaser": "3.8", "helpful_count": "35", "not_helpful_count": "162535778", "reviewed_at": "ce32cb8a-5885-5cbf-a887-1a0c4dda67a7", "rating": "16/01/2022 16:18:35", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1536", "name": "Remnant: From the Ashes - PlayStation 4", "brand": "THQ Nordic", "sku": "213157", "reviewer_name": "Saltbuddie", "review_title": "Multiplayer unplayable", "review_description": "Constantly get kicked off, unable to host or join. Can\u2019t like a game if I can\u2019t play it. When they update I\u2019ll take this review down.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "19", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "3.8", "reviews_count": "35", "comment_id": "158131136", "uniq_id": "c1bea9ca-62a5-50b9-b1c4-efb7d7cbf019", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1554", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "lilchris9", "review_title": "Interactive movies, not quite games.", "review_description": "These games are focused on story over gameplay. If you're looking to have fun, none of these 3 will satisfy that itch.  ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "But if you are looking for a good story or a nice movie", "name": " these 3 can be one to pick up.\"", "brand": "No: I don\u2019t recommend this product", "sku": "Verified Purchaser", "reviewer_name": "0", "review_title": "0", "review_description": "2 years ago", "recommended_review": "3", "verifed_purchaser": "4.6156", "helpful_count": "359", "not_helpful_count": "125555134", "reviewed_at": "4e366b4c-2cc4-55f9-ba18-00f7bd06978f", "rating": "16/01/2022 16:18:36", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1562", "name": "Hasbro Star Wars: The Black Series The Clone Wars Phase I Clone Trooper 6-in Action Figure", "brand": "Hasbro", "sku": "212504", "reviewer_name": "LordLudicrous", "review_title": "New Clone Trooper Rocks Socks", "review_description": "It looks kind of shoddy in the picture, but is absolutely gorgeous in person. 10/10 figure!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2857", "reviews_count": "7", "comment_id": "165122497", "uniq_id": "551def4c-d1ea-5830-9770-9f79a1575e7d", "scraped_at": "16/01/2022 16:18:36"}, {"index": "1576", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Manuel Moreno", "review_title": "Awesome Game Quantic Dream Collection.", "review_description": "Its a fantastic game really great detail. Glad i bought the Quantic Dream Collection.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "125058241", "uniq_id": "edaf07bb-8965-5608-a84e-e8b56f6d4eec", "scraped_at": "16/01/2022 16:18:36"}, {"index": "1577", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Kenny Rutledge", "review_title": "Great game", "review_description": "Only played Detroit so far, but it is a great game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "124865400", "uniq_id": "d6ed4a03-1d69-5e96-b41e-d9ee139ce539", "scraped_at": "16/01/2022 16:18:36"}, {"index": "1599", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Dellabrown", "review_title": "3 really awesome games for a low price", "review_description": "Beyond two souls and heavy rain were on ps3 and on the sony store as ps4 digital downloads. I do not have internet so for these to be released as a physical copy is a great thing. Detroit become human is fantastic.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "123692491", "uniq_id": "f8046a09-7715-5584-b1ac-2f850f742dc0", "scraped_at": "16/01/2022 16:18:37"}, {"index": "1602", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Jody_Beltoff", "review_title": "Great graphics!", "review_description": "My best friend and I bought this a couple of weeks ago, and we absolutely love it! The graphics in the games are great as well as the plot!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "123503740", "uniq_id": "9c402316-a154-5bd7-a807-af65b43ddda6", "scraped_at": "16/01/2022 16:18:37"}, {"index": "1615", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Tbearrow", "review_title": "Amazing interactive game play", "review_description": "The graphics were beyond expectations. The storylines were just so well thought out. Then the fact you had a chance to do the dialogue with both characters at once idk if that\u2019s ever been done before", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "123031434", "uniq_id": "d26a62ef-3342-53c9-96ea-610703c3e018", "scraped_at": "16/01/2022 16:18:38"}, {"index": "1619", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "SexySheikah", "review_title": "Detroit human is something special!", "review_description": "Heavy rain was a leading game of its time, the graphics are updated but the game is aging difficultly. Beyond is a game with mixed concepts although intriguing it can be hindered by game mechanics. Detroit human is where this five star rating is a must. This game is beautiful, crisp, and you never know when the decision you'll make will change lives. Peace or war, obey or freedom, sacrifice or living to fight another day. It's an amazing game where each character draws you in in different ways making you question truly what the best decision for yourself and or for everyone else is. The concept of an aware AI has been in our eye sight for years, but this game touches on the heart of it and demands the player to choose where they stand. The draw backs would be the occasional forced story line where the choice you would make isn't an option, lack of tutorial leaves the occasional negative consequences when an action was missed and lastly the game mechanics and view screen can on occasion leave you struggling to get your bearings. BUT in all honesty these things are so minor. The ending left me wishing they'd given us more but I see room for a second game and only hope the story just might continue. Overall this game left me emotionally ragged in all the ups and downs my people went through, along with making me really feel and know every action could save or kill my character. I give it a solid nine out of ten and a must play recommendation for anyone looking for a game where your decisions matter.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "122906309", "uniq_id": "1b7f2295-be8c-5c52-ba9b-44014bd760b0", "scraped_at": "16/01/2022 16:18:38"}, {"index": "1633", "name": "Funko Pop! TV: The Simpsons Belly Dance Homer 2021 FunKon Exclusive 4.75-in Vinyl Figure", "brand": "Funko", "sku": "234661", "reviewer_name": "Lees316", "review_title": "Great item. Dented boxes.", "review_description": "All 3 of mines came with dented corners on the outside box covering. As a collector, I now have to find one with a good box to add to my collection, after putting it in a plastic protector.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "4 months ago", "rating": "1", "average_rating": "4.3165", "reviews_count": "79", "comment_id": "186196537", "uniq_id": "3fc3e637-4d7f-5308-a132-3e2ecc509c39", "scraped_at": "16/01/2022 16:18:39"}, {"index": "1644", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "SqPondMe", "review_title": "Great Watch", "review_description": "The watch does everything I wanted a watch to do. Provides me with all the tracking information I want for my activities and sleep. Plus I have downloaded all my playlists from my Spotify account  to listen on my earbuds without carrying my phone with me.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 days ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236716078", "uniq_id": "76300ac8-5f3d-57cb-a25c-c676a0b44d38", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1647", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Gratefulheart", "review_title": "Advanced device", "review_description": "The device is working properly, but it\u2019s a bit more than I need. I\u2019m struggling to track my runs through the device or the app. At one point a great run got messed up and I couldn\u2019t adjust it- very frustrating! It\u2019s user error, but don\u2019t buy more device than you need.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 days ago", "rating": "3", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236682794", "uniq_id": "a630ce16-1648-5eea-8e8c-3ef4a42b75bc", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1648", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "DrDrano", "review_title": "Great Watch", "review_description": "Love the watch. Great price. No, it doesn\u2019t have all the bells and whistles but it does what I need it to do.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "13 days ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236568109", "uniq_id": "41ea8bc5-f28f-561b-8c3d-2f0fa98937b6", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1651", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Lisas", "review_title": "Lack of open water swimming features", "review_description": "It was a Christmas present. I love open water swimming so I was excited to get a Garmin watch that my husband had been told would be suitable and the shop. Now I have to figure how how to get it to track open water swimming.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "22 days ago", "rating": "3", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236379383", "uniq_id": "c0bd4937-6692-5811-9a1d-391eaf5dc144", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1668", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Am13", "review_title": "Suggestions", "review_description": "Me acaba de llegar el reloj y me parece perfecto, el color, la forma y algunas de las animaciones que tiene as\u00ed como la aplicaci\u00f3n, sin embargo en esta versi\u00f3n de m\u00fasica que compr\u00e9 no est\u00e1 YouTube Music, en la cual tengo mi membres\u00eda ya paga, ser\u00eda bueno si pudiesen agregarla.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 months ago", "rating": "4", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "233280024", "uniq_id": "1b7e1336-2fa4-5725-baed-a66e84b4ef1c", "scraped_at": "16/01/2022 16:18:42"}, {"index": "1685", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Tmichelle", "review_title": "Love the features. Easy to use.", "review_description": "I bought this a couple weeks ago and it's great. Love being able to track my workouts and foods. The only thing I wish I could do is connect to pandora.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "231362178", "uniq_id": "31090aea-7f31-5bd4-be90-6312e5b3ffbf", "scraped_at": "16/01/2022 16:18:42"}, {"index": "1694", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Kimmer", "review_title": "Love it!", "review_description": "Just received this a few days ago.  Love it!  Was easy to set up,  am 63...and NOT tech savvy . It is light weight, and very comfortable as well. Thank you Garmin! Shout out to my wonderful husband who found this and bought it for me!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "230607357", "uniq_id": "27629623-e553-5ff9-be7d-a0d24430d7c9", "scraped_at": "16/01/2022 16:18:43"}, {"index": "1703", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "Sunshine Lady", "review_title": "The Michael Jackson Wii The Experience", "review_description": "I can\u2019t rate it yet. I actually put this gift in the back of the closet and forgot about it. It was supposed to be a Christmas gift. Oh my goodness, I know she will love it!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "6", "reviewed_at": "11 months ago", "rating": "1", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "172406215", "uniq_id": "5b02899b-2ca1-5278-b3a0-706f3c1d6cd5", "scraped_at": "16/01/2022 16:18:43"}, {"index": "1721", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Scottz", "review_title": "It\u2019s ok", "review_description": "The size is smaller then expected and the display is not as clear as I would have liked it. A lot to learn with a lot of pages and menus. Does not have an easy quick view of simple displayed like Apple has. Also, My bank is not a participant in Garmin pay. In hind site I should have spent the extra money and bought an Apple.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "227443296", "uniq_id": "33a582b6-fc07-53b8-a4f0-264ca25ef6e1", "scraped_at": "16/01/2022 16:18:44"}, {"index": "1724", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Tmurphy", "review_title": "Christmas gift", "review_description": "My husbamd bought this for me as a gift. I want to love this watch BUT it is not very accurate. I use the Eliptical A LOT and the steps and calories are way off on this watch from my Eliptical. Also the heart rate. I did plenty of research and read reviews on this amd the Fitbit Versa 3 and decided on this one. Unfortunately, it did not live up to the hype. I will more than likely be sending it back.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "2", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "227293985", "uniq_id": "830438b5-2456-5ab7-bdcc-3b89de0451ca", "scraped_at": "16/01/2022 16:18:44"}, {"index": "1734", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Ken2108", "review_title": "Pulse-Ox", "review_description": "I bought my watch not knowing it had a pulse-Ox on it. I started using it at night while I slept only to find out I needed supplement oxygen at night. I showed my readings to my pulmonary doctor. She had me wear a medical-grade pulse-ox overnight and was put on oxygen 2 days later.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "226381411", "uniq_id": "f29d05af-1cc0-57ff-a1d5-3ede318ed8c9", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1737", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "kmerr", "review_title": "Very Accurate", "review_description": "I love my new Garmin Venu SQ.  It's easy to use and keeps excellent data", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "225733460", "uniq_id": "09fc027a-c16b-585c-9d4f-1d6ba0351fb8", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1753", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "awitiwari", "review_title": "Not worth", "review_description": "In such a competitive era. I dont expect such quality from Garmin. If we compare it to that of Sam active 2 that is more promisinhg and havubg good features.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "2", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "225054788", "uniq_id": "6561f0f6-cc44-5e75-94bb-2a35f582b0f2", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1754", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Plt3334", "review_title": "Really nice watch", "review_description": "very pleased with the watch to date. Long battery life, great features and easy to operate.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "224997450", "uniq_id": "ead79a4d-3238-5e81-9769-0949dc1232a4", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1756", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Nonickname", "review_title": "Great features", "review_description": "Integration with my 520 plus is good, but instructions could be more precise.  Video instruction for each section would be helpful (ie golf, bike, walk, run etc).pairing Videos would also help. I realise that some are available, but a more logical progression / order would be beneficial .", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "224941773", "uniq_id": "0d289e97-5e81-5ba1-9b9a-440bcbe1af82", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1757", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "JudP", "review_title": "Really good, but not quite great.", "review_description": "Two days in and I really like the watch. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Cons:", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Settings menu only available on watch itself.  Why can't this all be found on the phone app?", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1769", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "Dnick91", "review_title": "Great game", "review_description": "My girls love it.... a bit pricey for a older game but no complains", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "117828026", "uniq_id": "066ec339-5fe1-5e19-b366-fe7318ee33db", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1771", "name": "Nerf Elite 2.0 Flipshots Flip-8 Blaster", "brand": "Hasbro", "sku": "291038", "reviewer_name": "kareeokie", "review_title": "HE LOVES THIS NERF GUN!", "review_description": "[This review was collected as part of a promotion.] Well I gave this to my grandson and he immediately knew how to work it ad started running through the house flipping it from side to side. He loves the sound it makes when it flips. Like racking the gun.  This Nerf Gun is a hot!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 months ago", "rating": "5", "average_rating": "4.6364", "reviews_count": "11", "comment_id": "185100949", "uniq_id": "56ae035b-d898-5895-b9a8-5a5ac08e3ab2", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1773", "name": "Nerf Elite 2.0 Flipshots Flip-8 Blaster", "brand": "Hasbro", "sku": "291038", "reviewer_name": "scarle291", "review_title": "Lots of fun", "review_description": "[This review was collected as part of a promotion.] My 7 year old son loves everything Nerf! He loves this one. It holds eight bullets. Four bullets go in at each end of the barrel. After shooting the first four you flip the barrel and shoot the last four. My son loves that feature. It takes the Elite bullets which shoot pretty far in this. The green slide to flip the barrels also is a sight. Very cool with the flashy green color on it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 months ago", "rating": "5", "average_rating": "4.6364", "reviews_count": "11", "comment_id": "184500862", "uniq_id": "64b0e255-2665-5b63-9013-7b2c53c845b8", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1774", "name": "Nerf Elite 2.0 Flipshots Flip-8 Blaster", "brand": "Hasbro", "sku": "291038", "reviewer_name": "MrsJG", "review_title": "So much fun!", "review_description": "[This review was collected as part of a promotion.] The Nerf Elite 2.0 Flipshots Flip-8 is a great new asset to the Nerf family. My husband is a kid at heart and loves shooting alongside my two sons. He loves the flip action and said the flip reloading action is exciting. He was able to trick our sons into thinking he ran out of bullets but unbeknownst to them he flipped it on them and continued the Nerf war, they were definitely surprised! It has great accuracy as well as power and precision. You need to add the Nerf Elite 2.0 Flipshots Flip-8 to your collection! Can\u2019t recommend it enough!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "6 months ago", "rating": "5", "average_rating": "4.6364", "reviews_count": "11", "comment_id": "183625704", "uniq_id": "f50a8948-a0d2-5cf2-bb1d-a2072905f6a8", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1782", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Mightyduck", "review_title": "Authentic", "review_description": "Authentic and in great shape, works fine on New 3ds XL", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "190604893", "uniq_id": "22a33e9c-b902-5b83-b4bb-3eb09f5958e0", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1787", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Wally88", "review_title": "Solid game", "review_description": "Solid game and story line. I hadn\u2019t played a Pok\u00e9mon game since 2006 (diamond was my last game), so just wanted to get back to playing. Black was a good refresher.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "6 months ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "183265767", "uniq_id": "40bad41e-133e-5836-bb3e-74c880c44954", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1790", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Brewmama11", "review_title": "Heartbroken kid", "review_description": "After three weeks to arrive, we received a defective game. My son is heartbroken that we cannot get a replacement in a timely manner. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1796", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "ROSES7", "review_title": "ITS LIKE DANCING IN A MICHAEL JACKSON MUSIC VIDEO.", "review_description": "ITS A GREAT GAME TO DANCE TO BY LEARNING THE ACTUAL MOVES LIKE MICHAEL JACKSON. HAD SO MUCH FUN DANCING TO THE GAME.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "29389468", "uniq_id": "0a4c8839-6c9d-5f76-9d3b-52b886800311", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1804", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "It didn't work!", "review_description": "I bought the first one and it arrived visibly corroded. I took it back to the store and ordered another one. The second one looked fine but it didn't work when inserted into the game. I had to make another trip back to the store. I am not impressed.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "6", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "163288834", "uniq_id": "7b9645da-76d5-5a41-ab43-383748cf629f", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1805", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "pokemon black", "review_description": "Great game. Missing link to get all my pokemon from when I was a kid to SWSH... Great service too. Almost impossible to find a legit copy these days.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "163262408", "uniq_id": "98d8a8aa-9381-587e-9151-39ab8868f5d5", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1810", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "Damaged", "review_description": "Bought the pre-owned but it wasn't even working. Opened it and it was entirely scratched up.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "4", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "161310290", "uniq_id": "9e4043b0-5034-5091-ac25-849b7e936379", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1812", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "aham3", "review_title": "Awesome for a party", "review_description": "Awesome with a group of people for a party also great for lowering the fat bulge areas.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "21100124", "uniq_id": "ea407d31-0642-5f02-a38c-0853c1dd9c99", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1826", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Acasa", "review_title": "Instant classic", "review_description": "I have logged so many hours into this game just exploring all the areas and re-exploring. Plus the post game has many things to keep you occupied including connecting with friends via Entralink, and a battle subway.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "136507470", "uniq_id": "1178096b-6cbf-5348-844a-e8055c0d380d", "scraped_at": "16/01/2022 16:18:47"}, {"index": "It is Nintendo's first try at making pok\u00e9mon semi 3D. It has a great story in-game with bad guys and good guys alike", "name": " and a bunch of great new pok\u00e9mon to catch and places to explore.  Another amazing installment in the franchise!\"", "brand": "yes: I recommend this product", "sku": "Verified Purchaser", "reviewer_name": "2", "review_title": "1", "review_description": "2 years ago", "recommended_review": "5", "verifed_purchaser": "4.4195", "helpful_count": "553", "not_helpful_count": "131438003", "reviewed_at": "2cc7226c-f8cd-5986-8a8d-75967cb63d59", "rating": "16/01/2022 16:18:47", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1833", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "PrincessCeeCee167", "review_title": "Love the Game", "review_description": "I really love this game.Its very fun, when we have parties we play it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "18180307", "uniq_id": "6361788e-6585-5d7f-a81e-9801a71ad40c", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1858", "name": "Battlefield 1", "brand": "Electronic Arts", "sku": "125976", "reviewer_name": "Keno82", "review_title": "Needs improvements", "review_description": "The overall concept of the game is good; I do like how the game comes with new features like the bayonet charge. I also like the options of a vehicle having the capability of holding a lot of people. What I do not like is the game is full of glitches. This is not a well-polished game at all. It leaves a lot to be desired. If you have a FPS that you already like and know this may not be a good choice for you. The vehicles being able to carry multiple passengers are the only good feature about them. The viewing angles are awful and while this might be historically correct is does not make for good game play. Shotguns are ridiculously over powered! People one shot from halfway across the map as well as handgun sniping seems to be happening too. I don\u2019t know if this a cheating issue or a skill issue. The last point I would make is that all the servers have very low Tic counts. This can make for some very short games. More load time then actual play time. I would only recommend this game if you are looking for a game that takes place during this time period or you would want a FPS while not having one that is current.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "13", "reviewed_at": "5 years ago", "rating": "2", "average_rating": "3.5556", "reviews_count": "9", "comment_id": "77563020", "uniq_id": "3110ae52-7eb0-5c0b-88ff-a3b7357bfca5", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1875", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Matt K", "review_title": "Defective product", "review_description": "Game cartridge was defective.   Tried on 3 separate systems and it would not play.   They should test games before they sell them", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "2", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "123820104", "uniq_id": "1dbd4757-f8c5-5275-82a8-257a80253225", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1876", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Stluv", "review_title": "Great features", "review_description": "I bought again for my son who lost it during a move.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "123293495", "uniq_id": "028ce26a-8afa-5977-8fd6-616dcaccfde9", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1883", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "jay260410", "review_title": "This is the best dance game ever.", "review_description": "Micheal Jackson the experience is the best dance/workout game ever. It is very fun at parties. Also it is E for everyone which is also great. the graphics are tremendous, most songs look a lot like his videos.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "16569609", "uniq_id": "f572fed2-b87c-556a-8f5d-2c8201683e70", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1893", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "DiddlyDangDax", "review_title": "Very underrated", "review_description": "I would recommend this to any Pok\u00e9mon fan that owns a ds. It gets way too much hate and not enough praise. Definitely worth the money.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "122488815", "uniq_id": "0080ba56-f8d2-5ede-a8f4-8677389ec106", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1894", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Scardra", "review_title": "Classic Pokemon", "review_description": "I actually already have a copy, but I bought the new one for a friend. This game is your classic Pok\u00e9mon game and is amazingly fun (as usual). Compared to older games, it has almost no previous Pok\u00e9mon until you beat the league, still amazing though.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "122403545", "uniq_id": "052e8641-ef45-5b6b-95d7-ba311cd19dd3", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1906", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "RabidSyndrome", "review_title": "The most fun we've had in a long time.", "review_description": "We brought this game home with our Wii -- it was one of the two games that made the family decide to even get that console! -- and popped it in pretty quickly. After dancing to one song, even my mother, who truly isn't a fan of video games in any shape or form except for the occasional arcade-style game, wanted to play. We managed to spend almost three hours just having sheer FUN with this, trying out the songs, dancing along, singing, whatever.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1911", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "butterflyheart426", "review_title": null, "review_description": "The brand is the number one in my eyes and so many others.  It is not expensive and are used in many items and they last a long time.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 months ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "231067298", "uniq_id": "e9ad26dc-e566-501c-9d9e-3bd71c4c5008", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1956", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Dragonfly9178", "review_title": "Great product", "review_description": "[This review was collected as part of a promotion.] So I have been using these batteries for 2 weeks now. My kids hot wheel track is still going strong. This toy is played with alot in a day. Very pleased with this brand and will be getting more soon", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "203053564", "uniq_id": "c1183791-12a3-58ea-885b-82d349bce3d2", "scraped_at": "16/01/2022 16:18:50"}, {"index": "1962", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Dave Rhomberg", "review_title": "new maglite 4  d cell had to chisel out batteries,", "review_description": "new maglite 4 d cell,had to ream and chisel out batteries.4 more of the same 8 pack never used,not past exp.,leaked on shelf in house.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "1", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "167989226", "uniq_id": "69011d89-0852-5a66-a922-3b7780b90ce5", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1965", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "THE UNTOUCHABLES 1987", "review_title": "one of the best fighting games since MK.", "review_description": "Injustice Gods Among Us is from the people who bought everyone the one and only, Mortal Kombat series. this game is a lot like Mortal Kombat only with DC superheroes and villain's. every fighter is great in the game; it only depends who you like. the story mode is very deep, and exciting. plus the extra content is a bonus for the ultimate edition. overall great fighting game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "9", "not_helpful_count": "1", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "95564509", "uniq_id": "fe05bd46-9844-5008-a172-3a57b7242347", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1967", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "334g", "review_title": "Injustice gods among us U edition", "review_description": "I think it's a perfect game I love it and the best part is that the are making a second one on xbox one. One thing I think should be upgrade is the moves the should put a lot more power moves and stuff.Hope the second game is just as good.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "1", "reviewed_at": "5 years ago", "rating": "4", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "72447391", "uniq_id": "ddef3a6b-b3ab-5ac1-b26f-269279bb2199", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1974", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "oooop", "review_title": "super fun", "review_description": "the unova region is one of my favorite regions in all the pokemon games, this game would be a great way to start", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "61362200", "uniq_id": "fc529662-7bfc-59eb-94a3-fa338848211d", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1976", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "SlivergamerHD", "review_title": "Fun game", "review_description": "Pokemon Black is a really great game but it has some stuff i hate. The story in Pokemon black is a really fun and interesting, it's about a team trying to take away Pokemon from all trainers but i'm not going to talk too much about that, the story is not too long or too short. 1 of the problems I hate about this game is most Pokemon look weird I know it's not a new thing but they should improve. The gameplay is AWESOME they changed some of the battling moves so they look cooler now and sometimes when you are playing the camera turns in different angles so it doesn't feel like some blocky world. A other problem is when you finish the story you don't really have nothing to do except catching them all but there isn't that much Pokemon unlike the other games. After all Pokemon black is a really great,fun and awesome game and you can play with your friends like in the other games so I really recommend to play this game if you are a Pokemon fan.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "6 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "50354893", "uniq_id": "a4ab0688-dd16-5c7a-905d-9396a7b19d93", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1977", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "radicalhanna", "review_title": "New Favorite", "review_description": "Now, compared to Nintendo's last few Pok\u00e9mon releases, this one is by far the greatest. The graphics are great, and the overall gameplay and storyline are stimulating enough to not put this game down! Definitely the greatest release since Leaf Green.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "7 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "38242995", "uniq_id": "53415750-686f-5812-8e21-ce31015b2dc6", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1987", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "BAdreon", "review_title": "Longer lasting", "review_description": "[This review was collected as part of a promotion.] I used these batteries in a battery-draining shower radio. The batteries wear down so quick, but these batteries from Rayovac lasted a lot longer. And for the price, they are definitely a great value.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "4", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "145994071", "uniq_id": "1b2bd358-e3fe-5a5f-9d18-cf85ae9702b8", "scraped_at": "16/01/2022 16:18:51"}, {"index": "2003", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "rc77", "review_title": "Great Bundle!", "review_description": "feel more secure and prepared having this storm bundle handy.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "83302070", "uniq_id": "d4b2ea5c-361f-5aa4-bc98-5fd8d04c1f66", "scraped_at": "16/01/2022 16:18:52"}, {"index": "2004", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Fancy", "review_title": "Lantern great, flashlights great but don't really glow in the dark.", "review_description": "The Lanterns are great. They throw off alot of light. Really light up a room. Highly recommend them.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2009", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Fisherbob", "review_title": "Great lantern. Everyone needs at least 1.", "review_description": "Already had the older model and the new model is just as great. Very bright lantern with a neat locator light. Great product. Have not tried the flashlight yet.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "47066222", "uniq_id": "a2d02269-0dba-50ab-8fe2-cae67e2c4dce", "scraped_at": "16/01/2022 16:18:52"}, {"index": "2010", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Immillion", "review_title": "BUY THIS GAME!!!!!!!!", "review_description": "This game is a good game I have spent countless hours playing this game it is my overall 3rd favorite ds game of all time I highly advise casual gamers and hardcore gamers to buy this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "30426404", "uniq_id": "0343ec48-9c6f-5b4b-95d9-cb905a931acc", "scraped_at": "16/01/2022 16:18:52"}, {"index": "2014", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "martin117", "review_title": "A bit of a flop", "review_description": "\"Now, in no way am I one of those pokefans that hates the games just because they are new. I've played Pokemon since blue and have loved all of the regions from the coastlines of johto to the island of sinnoh I've played them all and I loved the games. I've clocked in at least 200+ hours each. Unfortunately this came to an end when i played that unbearable mess that was White or maybe Black version. I don't remember because those games were in no sense \"\"fun\"\" they ruined the XP system", "recommended_review": " gave us the worst Pokemon up date.. Ice Cream and Garbage bags ? Really? but worst of all was the incredibly corny story line about some brain washed kid and Pokemon being friends instead of tools... which almost every Pokemon is to all trainers except the protagonists... in this case N... this game was so bland that after i beat the elite four i turned off my DS and took it straight to BB to get 30 back... i had no interest in the after game because the legendary trio was so lame it wasn't worth it to me", "verifed_purchaser": " I am going to buy B2 or W2 and hope that it is not quite this bad.\"", "helpful_count": "No: I don\u2019t recommend this product", "not_helpful_count": null, "reviewed_at": "0", "rating": "2", "average_rating": "8 years ago", "reviews_count": "3", "comment_id": "4.4195", "uniq_id": "553", "scraped_at": "29144828"}, {"index": "Beautiful cut scenes", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Hope this has helped!\"", "name": "yes: I recommend this product", "brand": null, "sku": "0", "reviewer_name": "1", "review_title": "8 years ago", "review_description": "3", "recommended_review": "4.4195", "verifed_purchaser": "553", "helpful_count": "27876126", "not_helpful_count": "37f668aa-e81b-598b-8c4d-f0cd930bb7f0", "reviewed_at": "16/01/2022 16:18:52", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2019", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "pieguy007", "review_title": "this is AWSOME!!!", "review_description": "This is one of the best games i have ever played. i would reckomend this game to any one that likes Poke'mon", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "25885232", "uniq_id": "b531d7ed-2ac8-5603-aa47-475889d389af", "scraped_at": "16/01/2022 16:18:52"}, {"index": "2032", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Jallet", "review_title": "really?", "review_description": "Good graphics, I just dislike that you can't skip the cut scenes so it is very drug out.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "7 months ago", "rating": "2", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "181535341", "uniq_id": "fc141d51-7785-524f-a967-0c3fb8552f69", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2036", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Anonymous", "review_title": "W2K19 awesome game", "review_description": "My 7 year old WWE fanatic likes it best out of all the WWE GAMES and he has them all!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "175624511", "uniq_id": "127d59f9-0ac9-585f-a4b7-378346bc2ec6", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2041", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Cliff51", "review_title": "Great lights", "review_description": "I really like the LED lights. The lantern is not big, but gives out a lot of nice, white light. This means it is easy to find a place to put it. The 2 small flashlights also put out a lot of light and can be stored in a car glove compartment or pocket. Part of the small flashlight housing emits a faint glow after use so you can locate it.Overall, wonderful products.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "25083130", "uniq_id": "1cb81a6a-ccf2-5f29-8b85-2a671e3c9de9", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2045", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Jeff124642fhkfdkjfdjcstuk", "review_title": "Just ok", "review_description": "Lantern is very small. Was expecting something a bit bigger for a battery operated lantern. Flashlights are good for a pocket size light. Not sure yet how long a set of batteries will last. It would be more upfront if you would give the product measurements instead of just the lumens. Most people don't know 1 lumen from the 240 lumen light you sold me. The 240 sounds great but in reality it is not a great amount of light. I put I would recommend, just be aware of what you are buying.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "3", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "21603096", "uniq_id": "4ec87bef-40ca-5132-9f0e-72f63f0cc65c", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2049", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "staarz", "review_title": "Love this summer storm set", "review_description": "Love this set. The lantern which is tricky to open and insert batteries is wonderful. We are going to really enjoy this come summer time. and the little flash lights are small tho oh so powerful...", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "17240519", "uniq_id": "cea0c9b7-7f99-5598-9e76-9cef6f2f1726", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2050", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "RAS4442", "review_title": "Well worth the money", "review_description": "Very good products for the money. I bought two bundles and I consider it almost a steal at the price I paid. Thanks Ray-O-Vac!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "16874529", "uniq_id": "625de5f6-4bc9-5308-9798-ba130e36d872", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2059", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Rella", "review_title": "Great light in a small package.", "review_description": "After Hurrican Sandy I knew I need some additonal lighting for when the electric was off. I purchased one lantern, when I saw how much light it delivered I purchased several more for my family. Lots of light for a little lantern. All ready for the next storm.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "13738444", "uniq_id": "5801ef6a-07a9-5e8b-9d25-a260d38f22fb", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2067", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Anonymous", "review_title": "Fun gameplay", "review_description": "A fun game that lets you experience, wrestling to the fullest. I had a great time with the game", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "141241223", "uniq_id": "9cb8272b-7bff-5dc7-a420-199495d3138e", "scraped_at": "16/01/2022 16:18:53"}, {"index": "I gave it 4 stars because no instructions were enclosed.\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "9 years ago", "review_description": "4", "recommended_review": "4.6053", "verifed_purchaser": "76", "helpful_count": "13432861", "not_helpful_count": "01196490-6250-5220-9a6e-441f1fd59dcc", "reviewed_at": "16/01/2022 16:18:54", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2087", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Cool C 23", "review_title": "WWE 2K19", "review_description": "love WWE 2K19 all my favorite  wrestlers game play is great.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "138045712", "uniq_id": "656e2695-44fb-5508-abb0-a91686a6943c", "scraped_at": "16/01/2022 16:18:54"}, {"index": "2099", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "gamer332", "review_title": "Why? just why? why nintendo? :(", "review_description": "I bought this game thinking it would be better than diamond or pearl. What was nintendo doing the past 4 YEARS? The pokemon were stupid!!! There was no creativity! They should just make a remake of firered or some older pokemon game or something!!! I would not even recommend this to a 4 year old!! please nintendo, while im trying to keep my manners make a better game. >:(", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "30", "reviewed_at": "9 years ago", "rating": "2", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "23101716", "uniq_id": "5f1eceb8-6c4c-581a-af68-84642acc67e4", "scraped_at": "16/01/2022 16:18:54"}, {"index": "Turned out beautiful.  Also added remote controlled battery lights to the ceilings", "name": " makes it look very real especially when the front is closed.\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "5", "verifed_purchaser": "4.7143", "helpful_count": "21", "not_helpful_count": "227821313", "reviewed_at": "c8141619-216e-5423-a6b6-0676189a6571", "rating": "16/01/2022 16:18:54", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "It takes time to put it together but if you download the app that it\u2019s recommended (BILD) it\u2019ll be so much easier to follow the steps and faster to get it done.\"", "name": "yes: I recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "5", "recommended_review": "4.7143", "verifed_purchaser": "21", "helpful_count": "227570761", "not_helpful_count": "92f11ede-101e-5170-a54e-d9cde699f876", "reviewed_at": "16/01/2022 16:18:54", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2130", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Destroyah92", "review_title": "Here's hoping to 2K20.", "review_description": "I finally bought this at the 20 buck price, because I feel like that's what these titles are really worth now. The match expansion is cool, creating a MITB is neat too, albeit very lite form of it. But the gameplay is still the same with little really added to it. The paybacks are okay, but not really much of a momentum shift change. & the Daniel Bryan showcase is like playing wrestling Bop-It!. The entire match is just do the certain objective until a cutscene happens that leaves you at a disadvantage or just finishes the match for you. 2K still needs work on these.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "131180169", "uniq_id": "c8c30750-78e7-55cb-807f-5af6b04ea234", "scraped_at": "16/01/2022 16:18:55"}, {"index": "Loved it", "name": " now using it for trading. Thanks Nintendo!\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "3", "review_title": "0", "review_description": "9 years ago", "recommended_review": "5", "verifed_purchaser": "4.4195", "helpful_count": "553", "not_helpful_count": "21964345", "reviewed_at": "aff53db0-c595-5dc7-9b83-3df81f153269", "rating": "16/01/2022 16:18:55", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2135", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "pikachuandpiplup", "review_title": "i love pokemon", "review_description": "i love pokemon. and i love the game its fun. all my friends like to play my game. i think pokemon games are addicting.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "21880477", "uniq_id": "5a759751-8175-5dbc-8449-7acc6aac5423", "scraped_at": "16/01/2022 16:18:55"}, {"index": "2136", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "HIGHLANDER7412", "review_title": "Pokemons still got it", "review_description": "I got the Pokemon black Dsi bundle and i was very pleased with it. It was a little over priced because i dont see charging over $150 for a hand held system as even reasonable but i digress. The game play is fun and the use of the c-gear makes it where you have to go online to do alot of things but its still a good game. The online how ever is not appealing in the least. While the use of wifi trading from around the world is kool you often come across 5yr olds with all rare and shiny pokemon who taunt you in the trade center or you incounter those who only want rare pokemon and will give you a very common pokemon in return (ex. they want to give you a magikarp for your reshiram). I still love the game as ive grown up in the pokemon era. I totally recommend this game to anyone who loves pokemon as i am 18 yrs old and in college and i still play pokemon.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "21879943", "uniq_id": "732c8a56-dc68-5ac2-9808-990574c0d9ef", "scraped_at": "16/01/2022 16:18:55"}, {"index": "2143", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Bowl", "review_title": "Increased Difficuilty ^_^", "review_description": "Great game! most of all they increased game difficulty :D", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "21099371", "uniq_id": "d10df274-6646-564f-9256-be07d87d5510", "scraped_at": "16/01/2022 16:18:55"}, {"index": "2162", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "KnockEmDown90", "review_title": "Missed opportunities/Do not limit reversals", "review_description": "There\u2019s no real technique. You have limited reversals and that\u2019s not realistic. This hand has a lot of potential and opportunities to improve. I used to love wresting games now I don\u2019t think I\u2019ll ever purchase another one", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "129853736", "uniq_id": "cae5d5c7-3b2a-52ea-bbb5-3795ecb3a076", "scraped_at": "16/01/2022 16:18:55"}, {"index": "2180", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "LJAMIN", "review_title": "Finally!", "review_description": "It has finally happened and wwe 2k has made a game with a decent story for my career mode. It\u2019s honestly a cheesy storyline that made me laugh a few times but still better than what you\u2019ll watch in the wwe nowadays. With more legends than I remember you\u2019ll find yourself enjoying this game even if youre not a fan of the current wwe. There is a grind to unlock everything though unless you just want to pay to unlock everything. Really am glad about the story mode though. That alone made this purchase for me enjoyable. Few glitches but nothing game breaking. Would recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "129459445", "uniq_id": "64476435-2642-535d-a36f-16279cd16760", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2185", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Drgnhrt", "review_title": "I miss thq", "review_description": "It's ok. Story mode is back which was refreshing. Still not worth new price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "128665316", "uniq_id": "3e903293-eae0-5518-8562-f038a3ace848", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2187", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "amzing93274WiiandDSFan", "review_title": "New! good :) :D :)", "review_description": "fun worlds new game play elimits And fun puzzils and Gameplay new tips of battles and New pokemon good online amzing Lots to do its a Long keeps u bizzy. Lots of good Gameplay and 3D worlds its realy good! i love it! PS good story and So funny parts easter eggs and Black city if u git this one. it fills differt and New. PS its have new music good parts i love online its crazy adding difert fill than the Other pokemon games if ur bord with the Same old pokemon give this a Try!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "20224758", "uniq_id": "37df71aa-5af2-539e-8db2-bafcce0e2c78", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2193", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Zachattack22", "review_title": "My favorite pokemon game", "review_description": "This is my favorite pokemon game because of all the new features that are in the game. If your a pokemon fan or someone who wants a lot of extra content out of a ds game. You can't go wrong with pokemon black.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "19913310", "uniq_id": "2421035a-eafe-5735-bdac-2c6446d7f7f6", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2198", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "Brittanya", "review_title": "Good game buy not thr version he wanted", "review_description": "The game is fine just wasnts the one i came in for. This game is like the one on the phone.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "3", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "154428436", "uniq_id": "9f17e545-ef19-54d2-b66a-8ec09cc76812", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2201", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "SamGTX", "review_title": "Fun and addicting", "review_description": "Fun and addicting game, but ends too soon, needs more levels!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "137878231", "uniq_id": "d3e8178b-6d54-5840-89b6-6e7e419a92f7", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2203", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "CodyMac", "review_title": "PVZ what more can I say?", "review_description": "Another classic, with multiplayer no less. Can't beat it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "131210116", "uniq_id": "f79788ee-a1af-523b-8723-c90173a11acf", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2224", "name": "Hunting Simulator - PlayStation 4", "brand": "Maximum Games", "sku": "150357", "reviewer_name": "deer hunting man", "review_title": "Not a good game", "review_description": "This game is not what I thought it would be. Was looking for a little more realistic hunting experience.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "3", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "3.1529", "reviews_count": "85", "comment_id": "123109874", "uniq_id": "fba87fb1-121b-5a47-a8e4-3750c47558f1", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2229", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "AGB1988", "review_title": "Love it", "review_description": "My Daughter bought the game for herself so she could create her wrestler to team up with Charlotte Flair..", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "128421334", "uniq_id": "20933cc4-b7de-5a5c-8e09-f96a27ab5a64", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2231", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Cide Kazama", "review_title": "I play for the building and creating i enjoy", "review_description": "It\u2019s like it always has been. Depends on how you want to play", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "128014670", "uniq_id": "0a5675ae-2445-5180-87ad-a91925ae422a", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2237", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Pokemaster1", "review_title": "TOTALLY AWESOME", "review_description": "I have loved pokemon ever since my first one: gold. I am very impressed with the creativity, graphics, gameplay, new pokemon and EVERYTHING. Unless you hate pokemon more than anything, you will like it. My only complaint is that it doesnt go on forever! Great job, Nintendo!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "19768082", "uniq_id": "eeb12943-e018-5f40-90db-dff32742f9e2", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2241", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "prime10293", "review_title": "Fantastic", "review_description": "This game is amazing. This is easily the best generation since Gold/Silver in my opinion. The game provides the best story of any previous pokemon game and manages to keep the basics intact. The new pokemon you can find in the Unova region look stupid and their names don't help them, but once you play the game you start to fall in love with a lot of these pokemon like I did.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "19596494", "uniq_id": "da1ae16d-b12d-5203-9838-6904cfb13df5", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2255", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "JonfromPortland", "review_title": "This game sucks", "review_description": "It requires you to have an xbox gold live membership to play. I'm not going to buy an xbox gold live membership!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "20", "not_helpful_count": "6", "reviewed_at": "7 years ago", "rating": "1", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "42013375", "uniq_id": "13d80c63-171b-5d1c-b692-fa5dd8fc97ec", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2256", "name": "Hunting Simulator - PlayStation 4", "brand": "Maximum Games", "sku": "150357", "reviewer_name": "Zacriley80", "review_title": "Meh.", "review_description": "Pretty good. Graphics and realism suck a little but overall it\u2019s fun.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "3.1529", "reviews_count": "85", "comment_id": "119897829", "uniq_id": "0df37cbe-0d14-5776-a965-c7980b8ed0c1", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2286", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "EternalFlamesOfDeath", "review_title": "Overall Good.", "review_description": "I reserved this game and got it the morning it was released and from the moment i played i was drawn into its new landscape and the overall story. However Some of the creatures they choose are rather poor with certain ones but there are some i just was in awe of. I loved that there where more 3-D effects while traveling and in battle along with a few more areas. If your a seasoned pokemon fan and have been since the begining then you will find this game rather easy to beat, but it is still a fun installment in the series.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "4", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "19053019", "uniq_id": "c4095540-fd06-53ad-8ddf-3d7cfdb3e48b", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2289", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "MIDSHADOW99", "review_title": "THIS GAME IS AWESOME", "review_description": "YOU SHOULD GET THIS GAME ITS BETER THE ONLINE AND I RECOMED THIS GAME TO EVERYONE OUT THERE!!!!!!! THANK YOU FOR READING GET THIS GAME TODAY!!!!!O YEAH THE ONLINE VEISON SUCKS!!!! GET TIS GAME ON THE XBOX 360!!!! I WISH THEY HAD THIS FOR THE WII!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "8", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "25208424", "uniq_id": "53c12fe3-53db-5e39-b334-9ccd74f7b9a8", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2291", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "Hedy75", "review_title": "Love it!", "review_description": "I bought this when it first came out. My kids and I still play it. We loved it so much, I bought it for Xbox 360 too. I love the Zombies. I love the all the little side games you can do. I'm even going to preorder The Sims 3 Super Natural so I can get all the PVZ gear. This is just an awesome game if you want to play for fun or just kill some time.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "6", "not_helpful_count": "4", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "24441953", "uniq_id": "976dcdcc-8992-5cf4-8ea8-f35a9f0f8cc3", "scraped_at": "16/01/2022 16:18:57"}, {"index": "They make the reversals hard to do it\u2019s either to fast", "name": " to slow or shows green but doesn\u2019t work properly. ", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "I find the controls very slow and the character takes way to long to get up and do anything. I\u2019m actually close to just removing this game off my system because it\u2019s so annoying. This game has a lot of potential if they fixed a few things.\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "2", "recommended_review": "4.2351", "verifed_purchaser": "1195", "helpful_count": "126268881", "not_helpful_count": "2b1ca8ac-e072-5e0e-9f58-461554a16bb3", "reviewed_at": "16/01/2022 16:18:58", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2313", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Lil Biggie", "review_title": "Why aren\u2019t all the characters unlocked.", "review_description": "My kids love this game. We wish all the characters were unlocked without having to buy a season pass for $29.99 but other than that they live the game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "125907014", "uniq_id": "a4101f8c-a6d1-573d-a47c-9258af8ed656", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2330", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Codbo4", "review_title": "Wwe2k19", "review_description": "My player mode could be put together better. It\u2019s seems like it was made in 2007, last years was better my player gets worse every year.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "125251087", "uniq_id": "0f9a8f8a-7989-55a6-b098-83c5d2513126", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2334", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "Anonymous", "review_title": "Pretty Good", "review_description": "Plants vs Zombies is a very fun and addicting game. The graphics are totally cartoon, but that doesn't change how fun it is. You have to use lots of strategy to complete each level. The different plants and zombies get very creative and funny. I would suggest this buying this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "19685372", "uniq_id": "ba956bde-a711-59a6-8480-9ced72934fa4", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2336", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Bmart202119", "review_title": "Great game", "review_description": "The graphics are really good. Game play is awesome.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "125145254", "uniq_id": "8c0d0982-7888-5a81-9f01-5f1ed3533c4c", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2338", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "punk99", "review_title": "awesome game", "review_description": "this game is the best pokemon game ever made on ds", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "18849430", "uniq_id": "4d6fceda-db5b-5b9b-a9c6-25e1ceb3d9ad", "scraped_at": "16/01/2022 16:18:58"}, {"index": "-Not every Pokemon can be seen or captured until Nintendo releases an Event. Japan has had a bunch so far", "name": " mainly Dream World", "brand": " but everywhere else lacks Events to introduce the remaining few Pokemon unavailable.[can you say Keldeo?]", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2349", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "andrewpbeast", "review_title": "A Great Last Game to the DS", "review_description": "This was the last game for the DS to some. The 3DS was about a month away, and no one could wait. But Nintendo pulled out a new Pokemon main series game to end the DS off, and we had no problem waiting another month for the 3DS. This game, in my opinion, is what Pokemon Diamand and Pearl should have been. It actually boosted up the graphics, made the Pokemon always moving, added a new camera view (both in battle and out), and made online play accessable. Plus the game has a lot of content... including 150 ALL NEW Pokemon. So... let's get on with the review. -----GRAPHICS------ Nothing ground-breaking, but they still look very nice, and the animations are great! -----FEATURES----- The game features 150 new Pokemon. That might be enough to make you want to buy this game. Plus there is a whole new region to explore with new cities, characters, and a whole new dramatic story. Plus all of the Pokemon from past versions are able to be caught or traded after the main game is over... so replay value is pretty high. -----GAMEPLAY----- The gameplay is awesome. It is Pokemon (and its fast paced, unlike diamand and pearl were). You run around and explore areas, finding your way through puzzles and areas, and pitting your Pokemon together in classic RPG battles. Pokemon in its prime. -----CONCLUSION----- This game is awesome. If you do not own either black or white, buy one of them (or both!!!). These games are true Pokemon classics... enough said!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "8", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "18762069", "uniq_id": "6a245aea-2dc8-5485-8180-cd35fe8d1539", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2360", "name": "Hasbro Power Rangers Dino Charge Green Ranger Lightning Collection 6-in Action Figure", "brand": "Hasbro", "sku": "248018", "reviewer_name": "Greatwolvie", "review_title": "Excellent Power Rangers", "review_description": "Great items, super fast shipping,  packed very well", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 days ago", "rating": "5", "average_rating": "4.3333", "reviews_count": "6", "comment_id": "198421551", "uniq_id": "324d5d25-2120-5e07-a77a-1fad6c4ece90", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2374", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "PAPASMURF8182", "review_title": "To many glitches", "review_description": "Has to many glitches in match always freezing in main event overall yall rushed the released before perfecting it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "124510344", "uniq_id": "af86cacc-6e4e-5a85-85f7-32805b8ce3b1", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2376", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Bison272", "review_title": "Nice but I am not ready...", "review_description": "Create a character was too hard to understand and I gave up.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "124300716", "uniq_id": "d5864fe7-7eaa-5072-9011-a881984ec596", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2377", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "shadowfinnjake", "review_title": "Good game but...", "review_description": "Great game with great graphics and creation modes. Showcase was a bit short though. MyCareer isn't what you'd expect and it's a story, not YOUR OWN career. It was cheesy. Universe mode needs to freaking step it up and make it like SvR 2007 GM Mode. Good game, lacks replayability.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "124193192", "uniq_id": "ed358df1-989b-584d-9e3c-9e80935cdda9", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2389", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Jmaine285", "review_title": "Great quality and picture", "review_description": "[This review was collected as part of a promotion.] I got this monitor to game. The quality of the picture is very good. Refresh rates are fantastic. Get a Samsung and never look back.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "212314351", "uniq_id": "d89dbbd5-591a-507f-b136-9d23a5ce4c0b", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2409", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "amazing!!!!!", "review_description": "soooooooooooooooooooooooo gooooooooooood i cant stop playing it!!!!!!!!!!!!!!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "18318830", "uniq_id": "c854fa84-82b1-5113-8aa8-2ead6ce52e28", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2419", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Holcs", "review_title": "Last and Last", "review_description": "[This review was collected as part of a promotion.] I got this product about a couple weeks ago and I finally got to use them on my fishing trip I put them in my aerator in my minnow bucket we fished all day and the next morning they were still as strong as when I put them in", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231566093", "uniq_id": "847b3b6b-c949-5d0a-8aeb-d0d36f297ea6", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2421", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "european game", "review_title": "You sent me a European Game", "review_description": "You guys sent me a European Game. I meanit works fine and everything it's still in english and the Switch is region free but don't you guys not take foreign games?", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "4", "reviewed_at": "5 months ago", "rating": "3", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "185874023", "uniq_id": "fffef95e-5e25-58df-9125-8cb2795d9862", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2426", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "NorCaliChick", "review_title": "Sing the doom song", "review_description": "Great game play, story line!! My switch handles the graphics well. Love this game!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "174105080", "uniq_id": "71afef1e-cddf-56fc-bb07-e5c5a4dcc1b8", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2427", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Colonel CoOp Campaign", "review_title": "NEED CO-OP CAMPAIGN!!!", "review_description": "WHY NO CO-OP CAMPAIGN???", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2433", "name": "MXGP 3: The Official Motocross Videogame - Nintendo Switch", "brand": "Square Enix", "sku": "158344", "reviewer_name": "R 3 4 P 3 R 26", "review_title": "Maybe for someone else", "review_description": "Can't honestly say if this is a great game or a bad game. Bought it for my 4 year old. Tired to help him learn how to play but it was rather difficult though. Me and him play several other racing games together but couldn't get into this one.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "3.1212", "reviews_count": "33", "comment_id": "137020523", "uniq_id": "d4d9bd59-29ef-5b5b-a0a6-0ae5fca2b630", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2434", "name": "MXGP 3: The Official Motocross Videogame - Nintendo Switch", "brand": "Square Enix", "sku": "158344", "reviewer_name": "Deerstanddave", "review_title": "Worth the money", "review_description": "This game is quite fun to play. Definitely very challenging and fast pace. This has got to be my favorite dirt bike game on the market right now. I grew  up playing the mx unleashed series, and while this game is fun to play it definitely has got nothing on mx unleashed but is in my opinion a lot better than monster energy sx and moto racer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "3.1212", "reviews_count": "33", "comment_id": "125601051", "uniq_id": "3ed92e41-059c-50a3-ab6c-a4e21e7e3c5f", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2437", "name": "MXGP 3: The Official Motocross Videogame - Nintendo Switch", "brand": "Square Enix", "sku": "158344", "reviewer_name": "Braaap42", "review_title": "The best of the three !!", "review_description": "I have this game for my PS4 from the first one to the third. This is by far the best of the three ! Tracks are laid out more realistic the customization is great from the gear to the bikes... Freaking killer graphics my daughter could even tell the difference in a muddy or dry track... Next thing they need is to give a free ride option !", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "9", "not_helpful_count": "1", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "3.1212", "reviews_count": "33", "comment_id": "108196865", "uniq_id": "190d69ee-ea91-501a-a476-cb4ebab0935b", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2438", "name": "MXGP 3: The Official Motocross Videogame - Nintendo Switch", "brand": "Square Enix", "sku": "158344", "reviewer_name": "Katerina", "review_title": "Horrible graphics and game control", "review_description": "Do not buy this game if you are looking for quality! My ten year old saved all his money to buy this game on its release date. He has been talking about it every day for weeks. He even woke up two hours early to play it before school. He played it for less than a minute and immediately noticed the poor quality of the game. I immediately called nintendo and asked for a refund which we might see in 5 business days. Extremely disappointed. We are huge motocross fans and riders, I really wish they didn't give us such a let down.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "9", "not_helpful_count": "14", "reviewed_at": "4 years ago", "rating": "1", "average_rating": "3.1212", "reviews_count": "33", "comment_id": "108168411", "uniq_id": "696dec38-d086-5db0-954d-31399d01b704", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2442", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Icedragonenigma", "review_title": null, "review_description": "It's great. Allot more options on match types. Most of the nxt guys are in game.. Some animations are funky", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "123738346", "uniq_id": "b64a73f2-2897-519b-a7d6-3afecdd572ab", "scraped_at": "16/01/2022 16:18:59"}, {"index": "IM REALLY EXCITED  SOON THE SEGA GENESIS WILL ARRIVE AND WILL BE GAMING TO REMEMBE MY  CHILD THROWBACK MEMORIES\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "5", "recommended_review": "4.1605", "verifed_purchaser": "81", "helpful_count": "212228908", "not_helpful_count": "1dc922c3-884a-59f7-af42-993737467508", "reviewed_at": "16/01/2022 16:19:00", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2463", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "drhunz", "review_title": "Excellent as always", "review_description": "[This review was collected as part of a promotion.] It's hard to know what to say except, Energizer makes awesome batteries. The only thing wrong with Energizer batteries is that they last so long that I am not sure how the company makes any money waiting for people to replace them.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231493660", "uniq_id": "3795cb9e-7a6c-5949-b64c-65b03ea18d60", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2477", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Autobotleo", "review_title": "Doom is a blast.", "review_description": "Fantastic game filled with lots of action and tons of nods to the original series of games", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "142931558", "uniq_id": "305d5bc1-f6eb-51f5-ac54-598cc7437f60", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2481", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Erickus", "review_title": "Great game", "review_description": "Excelente game. A bit disappointed on the port, still fluent though. The game itself is superb.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "141857413", "uniq_id": "dea8c346-f705-5dbb-8061-310bb0ca00f7", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2482", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Lotuspod13", "review_title": "Doom", "review_description": "I have been playing the doom series since 93 when it came out on pc I was 3 at that time slaying demons on my dads lap and I have to say it never disappoints (except for the movie adaptations -_-)", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "141566122", "uniq_id": "3022a654-1aca-5e38-8fdb-997e30bcbacc", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2485", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "almathewj", "review_title": "GREAT JOB NINTENDO!", "review_description": "Pokemon is back in another installment in the series, pokemon black and white in the Unova region. when i started this game i imediately noticed how the characters are very pixelated. i think nintendo spent so much time on the region that they slightly neglected that actual people along with the pokemon.after all the people are what we are really going to be looking at. even if you've never played a pokemon game before, you will love this game. Also, for any returning fans, BUY IT! no matter what type of games you like this game is a must buy! 10 out of 10 stars!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "18222902", "uniq_id": "0cebf3b6-cf00-550e-9a64-1fe3b1e81249", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2522", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Monniemommy", "review_title": "Our go to battery", "review_description": "[This review was collected as part of a promotion.] We have three kids under 10 and go through many batteries throughout the year.  Energizer is the only brand that seems to be worth its salt.  We will always purchase this product, don't be fooled by the discount off brands, it's not worth it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231326382", "uniq_id": "4316e20b-5432-50c0-9429-d98165f8683d", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2526", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Rmh00", "review_title": "Never Disappointed", "review_description": "[This review was collected as part of a promotion.] As a family we have always used Energizer batteries and they have never let us down obviously good quality long lasting expiration dates and who doesn't love the Energizer Bunny. After trying the Energizer Max batteries we definitely will be buying these they seem to give a little bit more power and definitely last longer. We will continue to be an Energizer battery family M will definitely recommend these to our friends", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231299380", "uniq_id": "14cfbe38-c4d1-5e06-a24c-437ad4a39b65", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2528", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Billy Bob Thorton", "review_title": "Doom on the go!", "review_description": "Its amazing what doom accomplished on the go. Granted it wasn't the best game graphically but I have doom in the palm of my hands now. Something the PS4, Xbox and the PS Vita could never do.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "141389571", "uniq_id": "c18e0891-a46a-5975-8964-72ec2bd775b8", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2541", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Drifttttttttt", "review_title": "Not what I expected", "review_description": "I got pokemon Black with a good impression that it was going to be awesome and epic just like all the others. I was sadly mistaken. The pokemon are ugly and not cool, the old ones are way better. They are obviously in it for the money now and have no compassion towards it. 3D imaging is just lame to me, I dont care about the graphics, I just care if i can see what im doing while having fun. Pesonally Ive been playing pokemon since FireRed, and Black and White versions are just not worth it to me.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "10", "reviewed_at": "10 years ago", "rating": "2", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17929549", "uniq_id": "ed3e50e5-11e3-525c-be56-bcc67e588011", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2545", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "POKEPHSYCO", "review_title": "BEST GAME EVER", "review_description": "Pokemo black is a great game but the cries arent theyre names like the show. The graphics need improvement bu the story line is great. The starers are as always water,grass and of course fire.but why cant u catch botgh legends tell me.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17907206", "uniq_id": "cec260d7-8b48-5b28-9e4c-e16d36ad2dcc", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2546", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "dagugtggggggggg", "review_title": "Pokemon Down Grade", "review_description": "They took out many things and I hate the lack of graphics plus they took out many other Pokemon including legendaries.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "51", "reviewed_at": "10 years ago", "rating": "1", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17898386", "uniq_id": "1be05a57-1551-578c-8ada-efa2dffb06b7", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2555", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "badbart", "review_title": "A ton of new and old school wrestlers", "review_description": "I bought this on sale at Gamestop and I really like it. I haven't bought a wrestling game in a long time but I am glad I got this one! Great graphics, the moves are easy to pull off, even for me. Get it you will like it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122724026", "uniq_id": "dfb5b137-510e-5588-a02e-8299fb3c8c01", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2569", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Hsayy", "review_title": "Great!", "review_description": "[This review was collected as part of a promotion.] I have an old school flashlight that takes 2 D cell batteries, and these are fantastic! The bulbs are incandescent so they use a lot of energy in a short amount of time. It's an old clunker of a flashlight, but it's been my workhorse for decades. Glad to know I can keep using it even longer with better and better battery technology these days.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231259045", "uniq_id": "d6a2df04-861c-5482-8369-3f01779d50fb", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2579", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Christopher Hess", "review_title": "Great Game with Great Software", "review_description": "Honestly it's a great game. I really haven't had any bugs or errors. Campain and multiplayer make it worth it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "136355821", "uniq_id": "c377a9b3-47b8-51ac-9890-d5562a89d16d", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2592", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "shadowman95", "review_title": "Pokemon Black summary", "review_description": "I love this game it is what it was suppossed to be i have no regrets, this is just as good as yellow version.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17775354", "uniq_id": "91bacf9d-cc9b-59c4-99f1-992096da6679", "scraped_at": "16/01/2022 16:19:01"}, {"index": " the repair facility in new jersey is another joke.  they will waste your time and sell you garbage.\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "1", "recommended_review": "4.1605", "verifed_purchaser": "81", "helpful_count": "199197236", "not_helpful_count": "b6a3a5ff-fb8a-594f-8b5e-113882c41b6e", "reviewed_at": "16/01/2022 16:19:02", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2612", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "MK19", "review_title": "Great monitor", "review_description": "i'm leaving a 5 star review because this monitor rocks for the price. also, someone left a review for not being able to mount the monitor...that person must not have known what they were doing...easy to mount just use spacers to clear the shroud, not very hard unless you make it hard.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "199087810", "uniq_id": "70a0179d-36ad-5597-987a-205bb42581a2", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2616", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Anonymous", "review_title": "2 Week old", "review_description": "it has been two week since i purchase and the button power/menu button started to have issue. g-sync is it working? don't know cause i still see break in the image where g-sync suppose to smooth it out. the menu sometime can't be read. turning it off is sometime a pain.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "198013487", "uniq_id": "51e1b50b-d95d-5e68-961d-974d2499c139", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2617", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "zeron2", "review_title": "This is listed as G-Sync Monitor - But Ghosting", "review_description": "Hi.  I purchased this monitor specifically because it is listed as Gsync Compatible, and it is verfied by Nvidia as Gsync Compatible.  Its great when its close to the refresh rate.  However, some games that when the Frame Rates go below 100, or even 120 - 144hz, there is terrible ghosting and blurriness when Gsync is on.  Why is this?  If its officially Gsync Compatible, then there should be no ghosting as according to Gsync Compatibiltiy, Gsync should work 1-240 Hz on this.    Perfect example:  In Overwatch, during the menu screen, Blizzard caps it at 60FPS.  There you can see terible purple ghosting on the characters or letters on the menu when they move, when they are on a darker background.  Otherwise during game when you reach high refresh rate to 240hz, its fine.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2620", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Bella125", "review_title": "Great value", "review_description": "[This review was collected as part of a promotion.] It's Energizer, not much more to say!  Always reliable and last a long time for me.  This is the first time I have tried the Energizer Max and so far, so good.  I'm expecting great results as with other Energizer products.  Can't go wrong with this brand!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231198339", "uniq_id": "54cb9d30-f7bf-597e-9c31-ae798aaa18e2", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2671", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "MontanaMustang", "review_title": "Powerful batteries", "review_description": "[This review was collected as part of a promotion.] I put the Energizer MAX Alkaline D Batteries in my flashlight and the light beam is strong and powerful. I expect these batteries will last longer than most batteries and I like that because I use my flashlight on a daily basis and need it to be reliable. I have always trusted the Energizer brand and it has never let me down.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231133143", "uniq_id": "72d7becf-e0ad-5d62-bafc-7925205ff8db", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2672", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Anna s", "review_title": "Long lasting", "review_description": "[This review was collected as part of a promotion.] I love the energizer brand. Their batteries always outlast any other brand that I buy. I use them in many things around my house and they have worked far longer than anything else. They work in everything from kids toys, to smoke alarms.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231129734", "uniq_id": "32699f30-3af3-5e7e-b5b3-490bdb3e7fe7", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2678", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "bRADfromMalibu", "review_title": "great price, would allow greater than 85hz", "review_description": "great price and great design but did not display 144hz without problems, tried several different displayport cables with a gtx 1070 that was not overclocked. could not push past 85hz settings on PC without red flickering pixels and artifact. RMA submitted.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "196601558", "uniq_id": "65cb8572-be3c-5959-ae2b-8fcb84b386be", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2681", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Adnls", "review_title": "Long life", "review_description": "[This review was collected as part of a promotion.] I got the Energizer MAX Alkaline D Batteries, 2 Pack and they are great. The life of them is awesome and I would definitely recommend it to family and friends and I would purchase again for sure in the future.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231092717", "uniq_id": "a043695e-72ea-59da-b731-792616b6d1f0", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2682", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Wolfy", "review_title": "Dont buy for gsync", "review_description": "Overall performance is fine; but horrible overshoot with freesync, gsync.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "While the colors are fantastic (purple is the best example of rich color on this display)", "name": " the refresh rate makes great use of my high end video card", "brand": " and the curve is set to the exact distance for optimal viewing", "sku": " and the contrast is sharp as a knife", "reviewer_name": " the ghosting was so bad while gaming and watching movies the monitor was nearly unusable for anything that has high contrast smooth motion.  Scrolling on web pages showed little to no signs of ghosting at all. But", "review_title": " motion in gaming was deeply \"\"haunted\"\".\"", "review_description": "No: I don\u2019t recommend this product", "recommended_review": null, "verifed_purchaser": "0", "helpful_count": "0", "not_helpful_count": "1 year ago", "reviewed_at": "1", "rating": "4.1605", "average_rating": "81", "reviews_count": "193524000", "comment_id": "71e5712a-62de-5b14-a654-db0340faa21d", "uniq_id": "16/01/2022 16:19:02", "scraped_at": null}, {"index": "2690", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "LaPlant", "review_title": "Good graphics n game play", "review_description": "Bought it about a month ago. Very good game. Better than last year's. That's all us fans of the game can ask for, is that every year it gets better. N thank you for that.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122668881", "uniq_id": "630d4950-a05e-53e2-bff5-2f5f31d2eec5", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2692", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Firedoglb", "review_title": "Great action!!", "review_description": "Great game.  Much high flying action.  My 13 year old cannot put it down.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122392007", "uniq_id": "f63fe09f-9c30-50f3-b8ae-998aadf08f34", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2694", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Otawo99", "review_title": "Previous WWE games were better", "review_description": "It\u2019s not a horrible game, but it\u2019s not great either.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Be refurbished but it was severely scratched and very poorly packaged. It is obviously a used product.\"", "name": "No: I don\u2019t recommend this product", "brand": "Verified Purchaser", "sku": "12", "reviewer_name": "4", "review_title": "1 month ago", "review_description": "1", "recommended_review": "3.8558", "verifed_purchaser": "104", "helpful_count": "191712728", "not_helpful_count": "7f8df1b9-8c51-59f6-85b2-4623a0c65259", "reviewed_at": "16/01/2022 16:19:03", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2729", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Trixiesue", "review_title": "The best", "review_description": "[This review was collected as part of a promotion.] I think that these Energizer MAX batteries are the best. They last longer than most batteries do. They work great and the flashlight I put them in is bright, so I know they are doing their job! I will be buying them again.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231053539", "uniq_id": "4807da67-c6ce-5995-947a-057d227f7e57", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2739", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Retriever222", "review_title": "Stands out from the rest", "review_description": "It is a great game, don't get me wrong. The Pokemon in this game is really childish, since the Pokemon don't look as good as the other ones. Also the starter Pokemon are the worst i have seen out of all the other games. The 3 on 3 Pokemon battle just ruins it, because you can just gang up on one opponent and knock him out, which ruins it. Other then that it is a good game.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "6", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17506451", "uniq_id": "970129dd-7a5d-5d8a-98eb-c74812c5a183", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2741", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "AgentOrangeTV", "review_title": "Eh....", "review_description": "Aside from the controversial multiplayer that is a mix of Halo and Call of Duty with the loadouts, which is new to the Doom series (Yes I am old school purist when it comes to the old school Doom multiplayer) but while it is quite convenient to just have DOOM on your switch on the go, the game does have to suffer a bit in the technical department so You won't get those sweet 60 frames per second which is crucial because you got alot of demons to kill and you can't have less than 60 due to all the things go on.   Also, same as the other xbox, ps4 and pc platforms, the game play is too restricting in my opinion.  also, there is no snapmap mode so you can forget about creating maps.   and lastly, the multiplayer is, again just a mix of Halo and Cod, riddled with loadouts because it's too difficult for millennial to actually find weapons on the map and the demon runes are truly unnecessary and all it is just a crutch to help a losing team win.   back in the old school days, all you had on you was a pistol and 50 rounds for it, so you'd either find weapons, armor and whatnot or else you were a dead man.  other than all that, it's an okay game on the switch.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "7", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "126981703", "uniq_id": "55ed5ec0-31ab-54f7-a314-06e951e202dd", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2746", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "TMAC412", "review_title": "DOOM DELIVERS", "review_description": "DOOM is easy to play and lots of fun. One of the better games I\u2019ve purchased for the switch...", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "125973481", "uniq_id": "831bc2b2-ecd4-58a0-96c9-1f863b7cc529", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2757", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "BostonBadBoy417", "review_title": "Best game of the 2k series by far", "review_description": "I bought this two weeks ago and I am very impressed. I am enjoying the myplayer mode immensely as well as the universe mode", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "121176247", "uniq_id": "7bd29635-6731-56c1-8dd0-01abf8d8e765", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2763", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Nurse Gina", "review_title": "Very pleased..", "review_description": "The pgone was exactly what my daughter wanted. It was in like new condition. She is very pleased with the purchase.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "5", "not_helpful_count": "3", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "191198503", "uniq_id": "9aebd358-a081-5538-8463-7e81b756bb0d", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2772", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Kellie B", "review_title": "iPhone 12 Pro 512GB", "review_description": "I received this phone refurbished and it looked brand new even though the rating was good not excellent. It has performed beautifully with no issues whatsoever. Would definitely buy another product from GameStop.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "8", "not_helpful_count": "1", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "190336482", "uniq_id": "6fc9cec8-cc30-57f8-a5d1-6ebd514cf379", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2775", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Glaredad", "review_title": "Dark Pictures game trilogy is amazing.", "review_description": "Phenomenal gameplay and story with multiple endings.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "4 months ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "187006002", "uniq_id": "32743c06-fd8d-551b-bace-e08796e0d5c4", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2786", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Jealee101", "review_title": "Works well", "review_description": "[This review was collected as part of a promotion.] Once I received these I immediately put them into a game we have that requires this size battery. We played all night 2 nights in a row and they held up pretty well! They haven't died yet, but the power doesn't seem to have went down at all and no skipping in power which sometimes happens with batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231039162", "uniq_id": "d390c864-d4fc-5ae9-8008-2c19876c152e", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2796", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "haloreachgamer", "review_title": "best game ever", "review_description": "if you like the ds than this is the right game for you", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "3", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17488293", "uniq_id": "dd0ea573-b9e6-5ec3-ba45-66ee0b58d211", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2820", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Kleptobang500", "review_title": "Awesome features", "review_description": "This title is very good  better than 2k18 bringing back the limbs system great ( don\u2019t know why he took it out to begin with ) good fun with friends and online is way fun I say way better then last year game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120827055", "uniq_id": "06b2fcb0-8d98-52fc-af63-4a11e49bc35b", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2828", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Huebsch", "review_title": "Choices", "review_description": "This game really does let you change the game based on your choices. Ran thru it in about 4 hours but a good play", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "147829164", "uniq_id": "393628c0-98b2-51fe-8d04-625a4b6f3000", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2854", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Expensiveretard", "review_title": "Great", "review_description": "I have played many pokemon games and I think this is the best yet! This game has the best graphics in pokemon ever (compared to the past pokemon games)! I have played this game every day since it came out and I think you could pick this game up and love playing this game every single day!!! If you don't believe me the buy a copy for yourself!!! \ue405", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17401309", "uniq_id": "60a161c4-45fa-57d0-90af-80265495a360", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2857", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "SilverSoul88", "review_title": "Good, but Definitely Not Great", "review_description": "Story: Right from the start, the big cinematic/anime intro is based on a character that isn't you. Yep, and the story is pretty slow at the beginning. Team Plasma is closely related to the Pokemon version of PETA: only they still use Pokemon to battle with. One thing that is new is that your rivals are actually involved throughout the game and not just in certain parts. Overall, okay, but not great. Gameplay: Pretty much another Pokemon game, w/o new Pokeballs. You've got 150+ brand new Pokemon and that's it so a big throwback to the Kanto region. I did find some of the new attacks and abilities interesting, but that's a given with any new generation. The XP system is different, too: instead of fixed amounts, Pokemon level up depending on the level gap between other Pokemon. This makes it a bit more challenging and is one of its strongest points. Miss the touch interface emphasis from HG/SS, but it's still present. The C-Gear is cool and other goodies make it stand out from the previous versions. Graphics: Many Pokemon are not very appealing or original, and the few that are can be a lot of fun to use. There is a lot more 3D influence in this game and the various camera angles and field designs are really impressive. This is another one of the game's strongest points. I wish they didn't trade so much clarity of the Pokemon designs for movement; they looked really good in HG/SS. Sound: It's an okay score, not bad or great. Some tunes are catchy, but overall okay. Interesting how certain elements in the game cause changes to the soundtrack. Lasting Appeal: Was pleasantly surprised at the quality of the game, but not blown away. Definitely a must for Pokemon fans, but a little sketchy for little kids. Though the battle system is relatively the same, leveling up isn't. I doubt that they will get through the game easily with just a Lv. 70 Emboar.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17397619", "uniq_id": "640c638b-a270-53e9-8bae-c74ca4446f7d", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2860", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "rockophilla1", "review_title": "Same game, new characters, better story line.", "review_description": "\"Every year WWE 2k premieres it's new game. \"\"New\"\" game! Only thing that changes are some characters", "recommended_review": " add a few moves and new my career story. This year's is no different. I like the story mode starting off in the Indy circuit", "verifed_purchaser": " but you really have no control over your character and life", "helpful_count": " like last years my career. And I wish they would let you customize your character from top to bottom. What's with the name Buzz and you can't create your character to match the name!!!\"", "not_helpful_count": "No: I don\u2019t recommend this product", "reviewed_at": "Verified Purchaser", "rating": "0", "average_rating": "0", "reviews_count": "3 years ago", "comment_id": "3", "uniq_id": "4.2351", "scraped_at": "1195"}, {"index": "2861", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "2amNoTouchy", "review_title": "Great game, but intense and graphic", "review_description": "Great game, but I'm probably too old to really get into it. I played a fair amount of the original PC game and I'm sure this one would grow on me since the graphics are pretty amazing and the game play is intense. But it was a bit too gory to have around my kids so I returned it and got Zelda BOTW and SMK8. If you're into fast-paced, intense shooters then this won't disappoint!!! I have to admit, my eyes just aren't what they used to be and it was tough (for me) to play on the tiny Switch screen. I can't really rate how a major gamer would see this one, but for what it's worth it was one of the best games I've ever played for what my expectations were before I bought it. I think maybe someday I'd like to buy it again, but for now it was a bit much. I'm not a huge video game player and you would need to immerse yourself in it to get the full experience. I've just got too much adulting to deal with. I can't knock the game for anything. I would highly recommend it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "124577928", "uniq_id": "92f3785b-cfad-5702-a97f-7acbc1a67972", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2877", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "dfiles88", "review_title": "DOOM is great", "review_description": "I like DOOM. If you don't like DOOM, I don't like you.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "123258546", "uniq_id": "d8c4d5aa-1212-5981-9752-2fd9f3b2baa7", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2890", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Snowdog75", "review_title": "A lot of fun!", "review_description": "Really enjoyed Until Dawn and thought this looked to be a very similar experience.  Though the storytelling wasn't quite as good as Until Dawn, it was still quite enjoyable nonetheless.  Quite spooky!  Definitely recommend a play through.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "142135317", "uniq_id": "fe240ab6-89ac-5aaf-9d54-3b22d9978c37", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2892", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "MARVEL4U2C", "review_title": "Cinematic Horror at Its Best", "review_description": "I've been craving to play another game as gripping as Until Dawn, and the Man of Medan does just that. This game is the best of gameplay and suspenseful movie wrapped into one and I cannot wait to play the next game in the Dark Anthology series", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "141636541", "uniq_id": "85a2b82a-b8fb-5697-aa6c-c4767f397d0a", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2897", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "GameGenie78", "review_title": "Man of Medan", "review_description": "Loved it!  Watching a movie where your decisions keep everyone alive, or kill some, or maybe them all.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "141157796", "uniq_id": "eb995c7c-9e5b-55f5-ae28-1dc9bf14a42e", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2907", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "kobryant3", "review_title": "Good product", "review_description": "[This review was collected as part of a promotion.] I loved using these D batteries because they last longer. I would recommend it to my family and friends. I used mine in my lantern and it runs very good. The light is bright and stays lit for longer times.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230968407", "uniq_id": "a1a90d84-c878-5ed2-96cf-181c6d4d71bd", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2909", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Cheezhead", "review_title": "pretty good but...", "review_description": "I think that its a good game but the old pokemon games are more fun. Also this is really short for a pokemon game i beat it in 3 days.i mean it was fun but too short and really easy also get white its better dont make the mistake i did", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17395969", "uniq_id": "21050925-aed4-5554-a5b2-d9a57c174573", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2911", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "palestunna", "review_title": "Cool", "review_description": "By far the best pokemon game ever. The graphics are amazing! 3-D citys are just cool.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17377625", "uniq_id": "1c6bc91d-6ccc-5caa-98ee-eabe97c7ed21", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2922", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Vanhala69", "review_title": "Very intense!", "review_description": "I bought the game a week ago and have completed the Campaign along with trying out the some of the other options. This game is very good, and keeps you on your toes throughout the whole Campaign. I wouldn\u2019t suggest if you suffer from high levels of anxiety and paranoia. Aside from that, it\u2019s a great title that really knows how to keep things interesting.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "121323698", "uniq_id": "9964746a-e85d-5df0-8a04-09f729f5477f", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2923", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "asexton2011", "review_title": "Not worth it", "review_description": "We got this game a couple of weeks ago. This game glitches so much. There are times where the superstars are wrestling and then all of a sudden, one guy is standing in the corner and the other guy is standing near by but nothing is happening. They won't move for a bit.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120290549", "uniq_id": "2e7ee69d-a28c-5582-9a29-573d012aed9a", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2950", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "HottMorgan", "review_title": "Fallout, the 4th one...", "review_description": "Fun and a good Fallout game. Could have a little better graphics...", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "155467746", "uniq_id": "6b0db150-a945-5e70-93aa-5914fd54bb23", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2952", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Forte Kosakku", "review_title": "Fallout 4 Shoots to Kill", "review_description": "Its the fallout engine and world you know so well but with a focus on building little fortified communes for people to live in which makes all that scavenging that is so addictive, worth something. Anything you can store in inventory can be used to build something however, if you have an internet connection, you can access mods for free and just have toolboxs of unlimted materials waiting at each location. Its hard to resist that and if you do that , youll sorta negate the reason for collecting anything other than ammo, weapons, armor, clothes and whatever you like to display in your home and camps. The beauty of that was that for me, it didnt ruin the game , being a god right off the bat with all my goodies was just awesome. Im here to explore and do whatever i want since the world ended. The game is a blast and its funny and smart but the characters could have been more original like in Fallout 2 or 3. Even new vegas had great npcs and this one does too just not as many. The graphics on the Pro i use are just awesome. The colors in the game are vibrant its defiantly the best fallout game in the 3d universe made so far. Worth it. Gun physics are better and the way eneimes react to gettin hit by each shot after a certain perk is got adds fantastic realism. Shooting living things never felt so satisfying.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "155037582", "uniq_id": "ebc5af7e-d2b2-5065-a71f-e74e79a04be0", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2954", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "ADadinIowa", "review_title": "Fallout 4.", "review_description": "Fallout is always a fun game and this one does not disappoint at all.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "151986812", "uniq_id": "78b8cd63-ee72-57ec-99f1-2ac4c50a110e", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2957", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Topher42", "review_title": "Fallout 4", "review_description": "Loved it. It very fun and you have options to use mods and the fact that you can have a dov is awesome", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "143989046", "uniq_id": "66982a01-bc22-5f3c-a666-e8d3c1f9b82e", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2961", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "dhall1984", "review_title": "Amazing game", "review_description": "I loved this game. Way better than Until Dawn. A must have for anyone who loves decision making movie games.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "140693974", "uniq_id": "cfeaf824-22e8-5199-a28f-88cd3b12f6ab", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2971", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Jack888888888888888", "review_title": "It doom!!!", "review_description": "It doom, you buy this to play a run and gun with chainsaws and BFG ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2976", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "RighteousRed96", "review_title": "Great gameplay!!!", "review_description": "My fianc\u00e9 and I bought a nintendo switch and bought Doom for it. The graphic and gameplay are amazing. And excellent revamp to the old styles.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "119235168", "uniq_id": "3328c629-a75c-51b7-9fcb-f9b54d65b874", "scraped_at": "16/01/2022 16:19:06"}, {"index": "2979", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "IDB207", "review_title": "Fantastic", "review_description": "Thought it would be absolute trash, being that it was for a Nintendo console, and also that it was for the switch. But it\u2019s absolutlely fantastic. It performs just as it would perform on any other console, with the PC Master Race being the exception. I actually quite enjoy playing DOOM on the switch, more than I had enjoyed playing on my PS4/XB1 12/10 would recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "118516588", "uniq_id": "da7ae1c1-8b44-524b-8046-ab51257c29b7", "scraped_at": "16/01/2022 16:19:06"}, {"index": "2982", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Josh8024", "review_title": null, "review_description": "It could improve. Its the same every year. They need to bring back create a story mode.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120095714", "uniq_id": "7f55e48d-1b41-5b97-944d-8ee63ce12e65", "scraped_at": "16/01/2022 16:19:06"}, {"index": "the annoying thing is the faint intermittent \"\"crack\"\" coming out of the left & right speaker alternatingly.  i wouldn't care because i have a 5.1 sound system", "name": " but it unmutes itself  and begins to crack again.  thought it might be the firmware & driver", "brand": " so i updated the firmware and installed the driver and it still does it.", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "and gaming!  just awesome to have such a huge view.  from fps to driving to rts", "name": " it is amazing how much i can see.  i highly recommend having a beefy gpu to run it at anything above 120hz and ultra settings", "brand": " like a rtx3090.  if you can afford it", "sku": " get this monitor.  you won't regret it!\"", "reviewer_name": "yes: I recommend this product", "review_title": null, "review_description": "0", "recommended_review": "0", "verifed_purchaser": "5 days ago", "helpful_count": "5", "not_helpful_count": "4.5319", "reviewed_at": "643", "rating": "213917867", "average_rating": "543cd2f0-adf4-53cc-95ea-62754c1b0b0c", "reviews_count": "16/01/2022 16:19:06", "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "in the image you can see i'm using pbp mode to have a beautiful bezel-less experience to have work & home up at the same time.  note", "name": " i am using a usb switch for keyboard & mouse to switch between the two computer sources.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "on the ~50% of the time where it worked as intended", "name": " hdr performance was abysmal due 10 zone edge lit dimming creating huge vertical bright spots.\"", "brand": "No: I don\u2019t recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "20 days ago", "recommended_review": "1", "verifed_purchaser": "4.5319", "helpful_count": "643", "not_helpful_count": "213293004", "reviewed_at": "9771a3b8-700d-5611-9d43-678b87d215f8", "rating": "16/01/2022 16:19:06", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3013", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Nari", "review_title": "Best Pokemon Game To Date!!!", "review_description": "When I first heard they were producing another Pokemon game, I will admit I was more than a bit....... unsure. At first glance of the new Pokemon, I actually laughed, and said this was going to be the worst game, and they should really give up on Pokemon if this is what they've got. I WAS WRONG. While some of the Pokemon are still unsatisfying compared to past Pokemon, I have truly fallen in love with this game. The graphics are impeccable, and Castelia City is the most incredible work of art and amazing graphics I've ever seen on a Nintendo DS. The only complaint I have is that the menu should be on the touch screen like it was in Heart Gold and Soul Silver, instead of the C Gear..... but I love the C gear as well so it's hard to decide how I really feel about the set up. Although, like I said, I'm sill iffy on the Pokemon, but I understand how they came to be so, since the game is largely focused on industry, the Pokemon reflect that. Trubbish and Garbodor are the only two I still really don't like. But again, Best Pokemon game to date. I'm truly in love!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17344936", "uniq_id": "8e112777-7ea8-5ffe-b0db-ebbeebade8cd", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3014", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "POKEMON GAMERS UNITE TO FOR 1 ENTITY", "review_description": "amazeing game with great graphics i love it so much it deffinetly great if your new to pokemon like i always say in with the new out with the old and so on platinum was great soul silver was amazeing and i deffinetly cant wait to get this game its been anticipated for a year now and i will be getting it some time in the next few weeks so yeah :D must have for pokemon gamers POKEMON GAMERS UNITE!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17344836", "uniq_id": "b65318f8-e2d5-5c89-832b-4458652d549e", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3024", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "JAK0", "review_title": "Length of game play", "review_description": "Wish the story line was longer, bit over all an enjoyable game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "137418430", "uniq_id": "faf32838-5bed-5e03-8944-d4360355bfba", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3025", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Nathaniel Gross", "review_title": "Still haven\u2019t finished it but it\u2019s great.", "review_description": "As you can probably tell by the review title I\u2019m still working on beating the game at the moment. While the characters in this aren\u2019t as likable in Until Dawn. This one is a lot harsher on QTE\u2019s (Quick Time Events) than Until Dawn. That said it\u2019s somewhat more intense than Until Dawn but not quite as intense as the VR Prequel to Until Dawn \u201cThe Inpatient\u201d but it\u2019s still just as unsettling as the both games. While I may have yet to have beaten the VR game and Man Of Medan all three games are great scary games in their own way.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "137214497", "uniq_id": "543f144e-33bc-58e6-bbe1-d3f53a3f0f7c", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3030", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Sluger17", "review_title": "Fun for Hours!!", "review_description": "Played the old Fallout titles and this one stepped it up a notch. Graphics are great, gameplay is great, the crafting system is awesome. There is a ton to explore.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "141964800", "uniq_id": "df6636d7-ab7a-5538-9f10-921d23cb91d5", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3037", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "JAHood", "review_title": "Fallout 4", "review_description": "Good story, very bloody, too much cussing for my taste, but overall very satisfying to play.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "141042890", "uniq_id": "82e62021-80c8-5975-8cf5-fa967b02df04", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3068", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Jmiller", "review_title": "Makes my flashlight brighter", "review_description": "[This review was collected as part of a promotion.] I had just replaced the batteries in my flashlight with an off brand and wasn\u2019t thrilled with the light I was getting so I replaced the batteries with these Energizers. What a difference. Much more light output from these batteries. I will be sticking with these for my flashlight from now on.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230912794", "uniq_id": "4ab31aee-ee2b-53f2-8b43-dbb7a1c3abf7", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3071", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "RatchetFan7", "review_title": "The best pokemon game by far", "review_description": "Pokemon black is the best pokemon game made so far. I like how the graphics are new and everything seems better than the last games before this one. I also like how there are new pokemon I have not yet seen before. I liked how they mixed things up a bit because usually the first gym is always a rock type gym, but they changed it to a battle between the type you picked (grass, fire, or water) and what it's weak against. I would recommened this game to any pokemon fans out there and even people who may not like pokemon that much.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "21", "not_helpful_count": "11", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17322510", "uniq_id": "85221023-c01b-583b-82ab-fa2191479584", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3093", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Lmjason2", "review_title": "Very good game.", "review_description": "Fallout is my favorite series. Fallout 4 is not as good as new Vegas or 3, but it\u2019s still very good.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "140277917", "uniq_id": "bf71351b-692e-5ece-8a6d-eceaa1421fbd", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3103", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "SYMPATHY 4NO1", "review_title": null, "review_description": "I love this game.Straight to the point,shoot and destroy everything! !ANARCHY", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "115632335", "uniq_id": "da9f805b-79e7-591f-93b0-f90a3949bb31", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3112", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Jose", "review_title": "I'm still in awe every time I turn it on!", "review_description": "[This review was collected as part of a promotion.] I love this monitor! I bought it for working from home and it's great being able to have email, work apps and a chat app all up on the same screen. While I'm not working I use it for gaming and the immersion in the game is awesome with all the real estate.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "28 days ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "213028357", "uniq_id": "efc8cc04-1307-5b82-86c1-c13a7331e77e", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3121", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Brookkynn610", "review_title": "Go to brand", "review_description": "[This review was collected as part of a promotion.] Energizer is my go to brand for batteries. They never let me down. Long lasting battery life for every day products. My automatic garbage can used D size batteries and they last months with multiple uses a day! Very impressed!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230907469", "uniq_id": "69543750-d48a-50f0-9141-1d76dc3f3c91", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3136", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Wpowopo", "review_title": "It was ok", "review_description": "Look, I bought this game in Japanese, and it just was ok, I played it alot because i wanted to playthrough the game just for fun. The graphics were great and there wasn't alot of challenge to the game. I mean come on, I Caught the legendary on the box in a pokeball on my first try. this game was not hard but fun altogether. I liked the basics that it had in all of the other games but it's just all the same. I will do a speed run of the game when it comes out so i might put that up on my youtube page but i just don't think it's any different than any other pokemon game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "7", "not_helpful_count": "12", "reviewed_at": "11 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16466841", "uniq_id": "9bd4b7ea-1988-5270-93c7-dbf32d544a56", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3143", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Alek Cramer", "review_title": "A game", "review_description": "A very strong play through and pretty scary be careful of what you choose cause people will die good luck", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "136269872", "uniq_id": "3f8dc42b-a045-584b-a20b-fd78c07c01bb", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3148", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Sar A", "review_title": "Great but wish there was more", "review_description": "Great game. I love the graphics. It has a nice historical theme. I always enjoy a game that gives you options that can make a difference in the outcome. The characters have very distinctive personalities. There is also a cool feature that allows you to play the game with up to five people. Each player plays one character and each character has their own episode. I just did not like that the game was so short and it is obvious what is happening from the beginning. There was not much mystery.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "136176406", "uniq_id": "54c239a8-808f-5789-8587-67ad69f318c4", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3149", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "megasnorlax", "review_title": "Excellent Port", "review_description": "Great fps game for all Switch owners. Panic Button did an excellent job on porting this game to the Nintendo Switch. As a Nintendo fan, it's great seeing a high-end game like this on the Switch, as it proves what the system could do. If you're a Switch owner looking for an action-packed shooter, look no further.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "115351693", "uniq_id": "9b954fd4-6018-56b6-86f3-7e5e6a2cc119", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3170", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Suli", "review_title": "Great, with headphones!!", "review_description": "\"[This review was collected as part of a promotion.] Xmas present from my pops, love it!! It blows my old \"\"tv\"\" out of the water. Perfect for playing my games on. Only complaint I have with my monitor", "recommended_review": " I have to use my headphones. Without headphones", "verifed_purchaser": " I get no sound.\"", "helpful_count": "No: I don\u2019t recommend this product", "not_helpful_count": null, "reviewed_at": "0", "rating": "0", "average_rating": "29 days ago", "reviews_count": "3", "comment_id": "4.5319", "uniq_id": "643", "scraped_at": "213010990"}, {"index": "3174", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Slas", "review_title": "This product is amazing , fantastic", "review_description": "[This review was collected as part of a promotion.] Using it often on my relaxing time, playing game filling myself into the action., beautiful specs colors , very attractive. Will spent my day playing and enjoying it.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3176", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Shaky", "review_title": "This product is great for my games", "review_description": "[This review was collected as part of a promotion.] This monitor is great for gaming really like to curve. Helps keep everything in visual site.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "29 days ago", "rating": "4", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212987386", "uniq_id": "4394929d-68eb-59be-8e2b-a4593ab1d5a2", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3182", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "anne117352", "review_title": "Great", "review_description": "[This review was collected as part of a promotion.] These batteries are huge and the only thing that I really use them for now for my heavy-duty flashlight. These batteries are really great, and they have a great  battery life. It is also very powerful and has yet to run out of charge.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230881266", "uniq_id": "5e1a6953-cf95-5bcd-97e7-6c51c27b50b0", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3187", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Warrent23", "review_title": "Very long lasting", "review_description": "[This review was collected as part of a promotion.] These energizer Max alkaline batteries last a super long time. We are using them in one of our kids toys that never gets turned off and they just keep going and they work as good as they did on day one. No problem with corrosion at all either.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230869585", "uniq_id": "be914f52-55fc-568f-9387-3a0a1da1f160", "scraped_at": "16/01/2022 16:19:08"}, {"index": "We always keep extra batteries around.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3190", "name": "Not Fast, Not Furious T-Shirt", "brand": "Geeknet", "sku": "222575", "reviewer_name": "Mac sauce dirty", "review_title": "All the right things", "review_description": "Got a compliment at the grocery store, truly a magnificent shirt!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 months ago", "rating": "5", "average_rating": "4.56", "reviews_count": "25", "comment_id": "184873545", "uniq_id": "d6fd8f22-d2dd-5152-b157-de7111c595c5", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3195", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "thegamingmaster101", "review_title": "Best Pokemon Game Yet", "review_description": "This game is going to be amazing! I played the Japan game version and it is amzing!! I heard this game is coming out in America in eather march or april! Can't wait!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16398098", "uniq_id": "5233350a-11c2-5afd-bccc-880192f070e7", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3207", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Icypyro1997", "review_title": "Amazing game", "review_description": "Definitely a scary game with lots of jump scares. Love that my choices are like a butterfly effect for the whole game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "136146232", "uniq_id": "7a30ab2e-288b-50f6-8283-0fdce0c74799", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3218", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Brittcwood89", "review_title": "Has awesome features great picture", "review_description": "[This review was collected as part of a promotion.] I watch alot of movies ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3222", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "jstancil", "review_title": "10-Nov", "review_description": "Classic. So much content and so little time to do it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "136941650", "uniq_id": "1b9e44f2-358a-5c25-a3b8-2e2854d2975a", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3228", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Vanguardprime", "review_title": "Invested", "review_description": "It\u2019s a game you don\u2019t want to put down. I was skeptical because I don\u2019t usually go for survival games but this one has enough plot that keeps me invested for 100+ hours.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "131935591", "uniq_id": "e9a28f27-3f5d-55fd-97c3-96762b81598e", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3231", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Skull roc", "review_title": "Great game!must have for switch!", "review_description": "Doom ! Awesome just like the old one 're done revamped and perfect for the switch !", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "114320641", "uniq_id": "02c09c44-eec8-5c12-90d8-33cc9f7ab433", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3233", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Gunloon", "review_title": "The best feature of doom is the multiplayer", "review_description": "I bought doom about a month ago and have been loving the multiplayer. Fast pace arena style gameplay actually having  to find armor and health is a challenge forcing you to use different tactics when engaging enemy players. One well armored player can easily overcome the odd of fight two opposing players if they didn't take the time to grab armor. Another fun challenge is to fight for survival just to grab one of the power weapons when eryone knows the location and when it is going to spawn.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "114241531", "uniq_id": "316e66f3-01fa-5606-8728-15c3a3a7edae", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3237", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "SuzDragon", "review_title": "Best Creature Game out there", "review_description": "Great game! Glad it came to the Switch w/ excellent content & graphics!! So glad I purchased this for my son!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "6", "not_helpful_count": "0", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "109685670", "uniq_id": "d128ef1d-ff19-5a79-bd62-3abd198e82d8", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3255", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "zekrom", "review_title": "CAN NOT WAIT!", "review_description": "I already reserved both black/white and i cant wait!!!! now there is 649 pokemon!!!!! that is too much but i dont care. i love pokemon! its coming out march 20! 4 months to go.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "3", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16296132", "uniq_id": "a84fa6a5-1290-579e-9fad-964c045d485d", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3256", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "new pokemon", "review_description": "theres millions of new pokemon in pokemon black . i like feraligatr", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "4", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16295162", "uniq_id": "309210e2-fdfb-59c9-b51f-1750d012d41d", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3261", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Mike", "review_title": "Huge", "review_description": "pros:", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "* my eyes no longer need to re-focus to switch monitors", "name": " i've got one giant continuous screen that acts like 3 monitors", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3267", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Camper48", "review_title": "Amazing Tv", "review_description": "[This review was collected as part of a promotion.] I use this monitor to play my video games all night before bed let me tell you this is honestly one of the best monitors I've used you could never go wrong with Samsung I have a whole line of Samsung products the best.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212904968", "uniq_id": "ebac0536-0890-521b-b5a4-f7c33a84b8ea", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3290", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "SoggyBananaPeel", "review_title": "Didn't disappoint!", "review_description": "Very nice game that you can play with other people!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "135826036", "uniq_id": "d38376a1-2aa7-5d80-ad83-b62848522f1f", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3299", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "mskitty", "review_title": "Powerful", "review_description": "[This review was collected as part of a promotion.] We go through batteries in our home like water. I have the Energizer Max D-2 pack and boy did I need them. We keep flashlights in every bedroom plus under the sink for emergencies. During a recent storm, my flashlight died and of course no spare batteries for it. Hence, the Energizer D size are now in my flashlight. Powerful bright light and they have a 10 yr. shelf life. Energizer is the ONLY brand we use so having a durable, strong, long lasting battery is a necessity. Thank you Energizer, the name alone means quality products. Will be stocking up on more of all sizes!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230843356", "uniq_id": "ad4d17bd-ac23-5658-8f92-77fb31b6172a", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3326", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Aj808", "review_title": "Great resolution", "review_description": "[This review was collected as part of a promotion.] It appears to be up to par with the best gaming monitors available.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212876145", "uniq_id": "ac3e6d2f-4b9a-5085-a9d3-cea7db1cf530", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3329", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "ljandy21", "review_title": "For the younger folks", "review_description": "My grandkids enjoy this more than I. My reflexes are not what it takes to play this game. I just plug away at it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "130669315", "uniq_id": "91f47a74-073b-5e60-9c27-b150849ed59d", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3350", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "KatarinaT", "review_title": "Great Batteries!", "review_description": "[This review was collected as part of a promotion.] I love the Energizer MAX Alkaline D Batteries.  They are long lasting.  I am glad they come in a 2 pack because its rare for me to need D batteries.  When I do need D batteries, I usually only need 2 at a time so this is a perfect pack for me.  I love Energizer batteries.  I highly recommend these.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230806566", "uniq_id": "cf14f174-fb97-5102-a7fe-ea2ac9e3ed5a", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3358", "name": "Spirit of the North - PlayStation 5", "brand": "Merge Games", "sku": "232541", "reviewer_name": "Noiser", "review_title": "Boring game. Sold it a day later.", "review_description": "Weak game. Graphics weren\u2019t even that spectacular, and the gameplay was weak af. No clue what the objective was, had to go wandering around for more time than I would have liked to get to the next stage, which never feels like a good enough payoff for the time invested. Terrible game, sold it after 1 day.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "12", "reviewed_at": "2 months ago", "rating": "1", "average_rating": "2.8", "reviews_count": "5", "comment_id": "190699599", "uniq_id": "46c4d72d-a760-52fa-a8de-edbf5f965255", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3375", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "LetsGetIt", "review_title": "Colors and performance", "review_description": "[This review was collected as part of a promotion.] Mostly for gaming, wide be angle, colors are even better then most monitors.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212860414", "uniq_id": "dad20334-033d-5731-9514-36e1065e9423", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3408", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Joshua D", "review_title": "Scratches that Nostalgic itch.", "review_description": "Fantastic quality. It is a perfect recreation of the classic Xbox controller (with some improvements) The triggers feel more modern, the thumb sticks are grippier, the shoulder buttons feel as good as they could. It's silly but the home button screen animation is very satisfying to watch every time you press the button. Even though I have small hands I really love this controller. I can't explain it. It's just comfortable.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "129464194", "uniq_id": "c9d64583-5ddf-588e-b84d-6e39002f01a1", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3412", "name": "Microsoft Flight Simulator", "brand": "Microsoft", "sku": "220054", "reviewer_name": "See you on the moon", "review_title": "Fun flying game", "review_description": "So realistic I didn\u2019t know the what the controls were for my joystick and I crashed 5 stars!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "5", "not_helpful_count": "3", "reviewed_at": "4 months ago", "rating": "5", "average_rating": "2.4", "reviews_count": "15", "comment_id": "186993855", "uniq_id": "5fff6e9e-ae59-5158-a0f4-451bbb23a7b7", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3427", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Ashe B", "review_title": "Decent start to new series", "review_description": "Littles short and clunky but entertaining none the less.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "133769640", "uniq_id": "a7f53f0c-c0c2-579b-bcbd-50e7acfbac13", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3430", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Customer of gamestop 4 li", "review_title": "I Love this game", "review_description": "Great game..great story highly recomend it to any one who loved until dawn..clunky controls but you will get used to them..multiple ways to play..bought for my daughter and she got scared by it 5 out of 5", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "133104472", "uniq_id": "5ca67199-ffd6-594e-a474-7f1cdb8a70e0", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3447", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Joe h44", "review_title": "Good game", "review_description": "Very fun game, plot is very good, no complaints at all.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "127664043", "uniq_id": "b227c817-cadd-5ed3-9ccb-489439342828", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3457", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Slimdtylz", "review_title": "TBT 360", "review_description": "Awesome.feel. cant stoo using it over my wireless.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "127411070", "uniq_id": "5e29d020-2e16-5ea9-bba8-948d1d14dbb0", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3459", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Halo gamer", "review_title": "Its ok", "review_description": "Bumper buttons are to far apart from triggers makes for difficult gaming", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "5", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "126755095", "uniq_id": "05bad6e3-ff07-5d74-9d89-8aadbc391fdf", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3499", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "ElJefeHiro", "review_title": "Its Fallout", "review_description": "Love the game. Everything about it is good. would have given it 5 stars but didnt rlly like the building aspect.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "126486648", "uniq_id": "6adc59ea-b4d1-5240-a9e3-a91226f96ca9", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3500", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "lucruss23", "review_title": "Disappointing", "review_description": "It's a fine enough game, but without mods it's very bare-boned. Bethesda could've done a lot more with it, in my opinion, as it's definitely the most aesthetically-pleasing Fallout. Unfortunately, it's also really boring after a couple of playthroughs. It's an important game to me and my teen years, but I'm afraid I have to give it a three out of five.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "126413722", "uniq_id": "0369cc1c-8fbd-5cb6-b703-9331d49535f1", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3502", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Twimms", "review_title": "Hours of fun !!", "review_description": "It was good but I\u2019m still a obsidian fallout fan but was still very fun", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "126192989", "uniq_id": "f027d68a-1b2f-5bd7-aded-cbb0a29344b8", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3514", "name": "SnipperClips Cut Out Upgrade", "brand": "Nintendo", "sku": "159078", "reviewer_name": "Mansonr84", "review_title": "Great New Features", "review_description": "I had some money left on my eshop and I decided to purchase the update with it. It turn out to be pretty cool.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "8", "not_helpful_count": "3", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "5", "reviews_count": "1", "comment_id": "112964957", "uniq_id": "9eabf8d4-019e-5031-a352-3bb5a5ea0307", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3516", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Barb65", "review_title": "Great Batteries!", "review_description": "[This review was collected as part of a promotion.] I finally found batteries that last for a long time.  I used them for camping and for electricity outage.  They are still working great and the light is much brighter.  I will be using this brand from now on. Will recommend these  to all my family and friends.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222839493", "uniq_id": "cac1eb22-89a2-5f2a-8bbd-35cbc22e4922", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3517", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "ktracer68", "review_title": "Long Lasting for SURE", "review_description": "[This review was collected as part of a promotion.] When I received the 2 pack of the Energizer Max Alkaline D Batteries we getting ready for a week long camping trip. Grabbed the small portable radio an put these batteries in. The radio played 24 hours daily for the week an are still going strong. Energizer wasn't my go to battery. These put other batteries to shame! Energizer batteries are now my GO BATTERIES.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222833332", "uniq_id": "18d8f1f3-6c24-58b3-b3a2-2ea56549d60b", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3521", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Bargain_mom_3", "review_title": "Long lasting", "review_description": "[This review was collected as part of a promotion.] The batteries are great. Love Energizer batteries. They are long lasting. I put them in my small water fountain outside a month ago and they are still working. Great product. I would not use any other batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222832804", "uniq_id": "89c93722-06eb-5b6e-92f7-1624cece9307", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3529", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Mohamed", "review_title": "Great monitor", "review_description": "[This review was collected as part of a promotion.] This monitor is perfect in every aspect, it has a great color accuracy, high refresh rate for gamers, and aslo very wide for multitasking", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212797744", "uniq_id": "8dfcbad1-0294-5aff-9eb2-bcfe82e82d58", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3539", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Dethklau", "review_title": "fallout 4 review", "review_description": "Fallout 4 has great graphics. It also has an interesting story line. The best part about it is the customization available for weapons, armor, power armor, and bases.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "125804528", "uniq_id": "ed6cb487-5745-50be-9068-ea0065250d6a", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3548", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Mgraham5", "review_title": "Long lasting", "review_description": "[This review was collected as part of a promotion.] I have an old emergency light that requires D batteries. I had a bad thunderstorm and our power went out. I used these batteries and Wow, this light worked great for hours and is still strong when I shut it off.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222799714", "uniq_id": "d14cb4fb-b5f7-5747-95a0-a7ea24a6a6b0", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3549", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Big Bill", "review_title": "Good quality", "review_description": "[This review was collected as part of a promotion.] Seems to be good battery put in my flash light I use around the house have not had them long enough to see what kind of life that they have but so far my light seems as bright as when first installed time will tell", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222795434", "uniq_id": "0b1e0de9-8a5a-58c8-8dd3-de913a9086f8", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3556", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Imperatritsa", "review_title": "This is an amazing Monitor!!!", "review_description": "[This review was collected as part of a promotion.] I use this monitor for work and streaming movies and my children use it for streaming movies, playing games and school work. This Monitor is insane! I am so happy with my purchase. Just make sure you have all the necessary cords i.e 4k. I tried to use 1080p and the quality was good but when I upgraded to the correct equipment Wow the difference. Overall installation was easy. I am so glad I went with the Samsung for overall quality and price you can not beat this Monitor. I have had it for about 2 months and I have not found a better deal. I have never been so sure about a purchase and glad I didn't search and wait for something else. Right now the Monitor is in my bedroom but I'm thinking about moving it to the Family Room and getting a second one for my bedroom. Thank you Samsung for providing quality at a price my family can afford.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212781704", "uniq_id": "7cbcd65c-5706-5a6f-abc9-5a8dba6979fe", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3600", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "YungSweet", "review_title": "Best I ever used", "review_description": "[This review was collected as part of a promotion.] I used the monitor for gaming and it have excellent pixle frame quality 10\\10", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212720369", "uniq_id": "6edcc1e7-fcd1-5ee6-a424-cb938cb162ba", "scraped_at": "16/01/2022 16:19:13"}, {"index": "The curve edge display is two perfection\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "5", "recommended_review": "4.5319", "verifed_purchaser": "643", "helpful_count": "212719409", "not_helpful_count": "0ff305cd-8d20-50a0-9014-7da961c3786e", "reviewed_at": "16/01/2022 16:19:13", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3605", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Oregomcj2", "review_title": "The best monitor.", "review_description": "[This review was collected as part of a promotion.] Gaming and Streaming, The best monitor of all The only thing is the price, but it is worth every dollar.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212715277", "uniq_id": "20f0757b-bc9a-5672-9238-35451556baa5", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3612", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Vlov", "review_title": "Great Collectible", "review_description": "This is my favorite version of the duke controller! I have 2 black ones and thought this version was only limited to the people that developed it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "117936679", "uniq_id": "722d4d2a-6e1b-5622-b6e6-67c437759049", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3614", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "TestudoENumen", "review_title": "Blast from the Past", "review_description": "I looooove this controller. Granted, I might be biased, as this is my favorite controller of all time. This recreation is so great. I especially love that the black and white buttons are still here, and they are extra buttons for functions.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "117848281", "uniq_id": "35cd04d5-d837-57ac-878e-c3fc38ea2963", "scraped_at": "16/01/2022 16:19:13"}, {"index": "Not for people with small hands ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3616", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Valkron1", "review_title": "Just got my green Duke!", "review_description": "I just received my green Duke controller today. My first game loaded up was Halo: Combat Anniversary. Ahhh, the memories! This is how this game was meant to be played if you have big hands. I love it and highly recommend it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "117163901", "uniq_id": "4e631204-df48-5880-ba83-d22e51a4e5d1", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3652", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "BK_VA", "review_title": "Even more of what. I enjoy!", "review_description": "I am a Fallout fan and when I comleted the last two entries, I was hungry for more. Fallout 4 provides a familiar feel to its predecessors, but it is all new locations tied to a compelling narrative. I play on a standard PS4 and the graphics are wonderful, the controls are smooth, and sound is engaging.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3656", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Jdixon92", "review_title": "Refreshing", "review_description": "After going a long time without a system, I needed a game to reintroduce me to quality gaming and this was it", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "123439844", "uniq_id": "7dffca28-ea04-5af0-b865-f4eb2be74f0d", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3671", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Lovebird", "review_title": "Great", "review_description": "[This review was collected as part of a promotion.] I have have no issues with the batterys . . .  Chanfed out some generic batteries on my flashlight and these are going strong as expected.   I expect these batteries to continue to work and outlast out perform the generics", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222655454", "uniq_id": "9d6b852c-e286-5497-b0f0-97b115cacaf3", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3689", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Older than 30", "review_title": "Dungeons and Dragons maxed out.", "review_description": "I just started playing a month ago, and at this point I hate having to tend to settlements. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Confusing right?  ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3702", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "deene", "review_title": "Battery", "review_description": "[This review was collected as part of a promotion.] I really enjoyed getting these batteries, they are a reliable product. I always buy this brand. They last along time and are very dependable. I use them in my flashlight and I can always count on my flashlight to be working when I need it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222649605", "uniq_id": "ccbf9524-8156-5d1d-a8b1-43ad5fa87baf", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3712", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Sonni", "review_title": "Great product", "review_description": "[This review was collected as part of a promotion.] I was worried in the beginning but it turns out to be a great monitor.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212663925", "uniq_id": "343895d8-69ed-588c-9c50-e7a5c0d373fb", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3734", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Courdles", "review_title": "Stronger than ever", "review_description": "[This review was collected as part of a promotion.] I got to try these Energizer Max Alkaline D batteries and they work really well.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3749", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "SamsungGuy520", "review_title": "Awesome display!", "review_description": "[This review was collected as part of a promotion.] This monitor is the best gaming monitor I have ever used! The quality of it is so insane, I feel like I'm five years (or 10 years) into the future! This is a must buy!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212627401", "uniq_id": "bc117efc-97c9-5273-8ff8-995885b33672", "scraped_at": "16/01/2022 16:19:16"}, {"index": "3805", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Timbojack", "review_title": "A good battery", "review_description": "[This review was collected as part of a promotion.] I use these for my mag light, especially when we go camping.  Honestly, I haven't noticed that the brightness has dimmed at all after several hours/days of use.  Usually after a few weekends of camping, it time to replace the batteries.  So far so good.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222608623", "uniq_id": "2b5415fc-9637-54b6-b5f6-0ce3d4ccc264", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3829", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Nmeats", "review_title": "Sicc", "review_description": "Bought about 2 weeks ago. My first shot at the fallout series, have loved every second of it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "118558358", "uniq_id": "7ea85f26-d3c0-52c3-9008-19381574c50a", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3833", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "LaLady", "review_title": "To the Max!!", "review_description": "[This review was collected as part of a promotion.] I love these batteries to the max! The long lasting feature of these batteries is the best.  I live in hurricane central and also the power outage capital, I can't ever be caught without some of the max alkaline batteries on hand. I use these in my flashlights, boombox and other portable devices. Energizer MAX batteries are the powerhouse for your battery needs. Don't be caught without them!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "221944936", "uniq_id": "e0eda68a-e635-510f-b525-aeb7206be826", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3841", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "icyblue357", "review_title": "Long Lasting", "review_description": "[This review was collected as part of a promotion.] I got my Energizer Max D Cell batteries, and used them in my flashlight. I had to change an electrical light socket, as it had a pull chain that broke, on off. I use the flashlight with the Energizer Max D Cell batteries, and dismantled and reinstalled a new socket in 20 minutes. I used the batteries the whole time without the light dimming or the batteries running down. I use a flashlight a lot and really think these batteries will last through the year.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "221846145", "uniq_id": "e3ec6e35-8454-5645-b6d3-85d839b6bb9e", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3845", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Toya22980", "review_title": "Dope and fire n awesome.", "review_description": "[This review was collected as part of a promotion.] Home and do my own fun gamer hook up any game hook.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212556431", "uniq_id": "04c04e94-ba6c-55eb-a9bf-09c89657e950", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3847", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Devinguy84", "review_title": "Extremely impressive and unique", "review_description": "[This review was collected as part of a promotion.] I use my monitor for gaming. And i have to say that i am absolutely impressed. Especially how it works around you and makes you feel as if you are part of the game. A truly unique feeling to say the least.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212549369", "uniq_id": "2d8935b3-91ff-5589-aa91-1e3e3659c688", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3851", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "chicken", "review_title": "great but some issues", "review_description": "[This review was collected as part of a promotion.] it is a good monitor and its big. But it doesn't fit most apps so there's no point.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212536817", "uniq_id": "844bc3f6-11bd-525d-be2e-126dd7a7c152", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3852", "name": "NBA Boston Celtics Larry Bird Plush 10 in", "brand": "Uncanny Brands", "sku": "224841", "reviewer_name": "Mike R13", "review_title": "Larry Legend", "review_description": "Bought this as a dog toy. If GameStop sold pet supplies, I would definitely buy them. Until then, I'll just repurpose human toys.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 months ago", "rating": "5", "average_rating": "5", "reviews_count": "2", "comment_id": "187546025", "uniq_id": "308023c3-a981-5d14-b5db-2b16ec6d57ea", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3857", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "wastadave", "review_title": "super fun for everyone", "review_description": "my 13 year old daughter has been playing it after we re-purchased it from when my 2 boys finished it several times.  She loves it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "118292355", "uniq_id": "33e84761-f4da-5c8c-ad17-2aa9f72a4242", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3866", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Melanie", "review_title": "Energizing", "review_description": "[This review was collected as part of a promotion.] These batteries are long lasting. I have a flashlight that I use them in. The light is very    bright and it lasts quite awhile. As usual they are a bit heavier than the A or AA's. But for what I need them for it's worth it.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3871", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Hello24", "review_title": "Essential!", "review_description": "[This review was collected as part of a promotion.] It's always a pain running out of batteries, especially the ones that drain so fast. These last a long time. Very happy with it. I do prefer the rechargeable ones though, wish they made them in this size. I'm all about sustainability right now.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "220150320", "uniq_id": "38764733-8ec2-5125-aa57-a7c38a8119b2", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3873", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "MissPyggy", "review_title": "Works as expected!", "review_description": "[This review was collected as part of a promotion.] It's hard to write a review on batteries that aren't used a lot.  I got these batteries for a flashlight.  We don't use the flashlight very often, but so far, these batteries are working great, as I expected and the light is nice and bright.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "218914050", "uniq_id": "0d30a8a6-dbae-5cd2-925b-4dabc957ad4b", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3891", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Mol1119", "review_title": "Great overall", "review_description": "The Fallout series is one that takes you into a world of a post-nuclear apocolypse where you fught to stay alive in an unfprgiving world. Every choice you make determines do many factors in the game. You can be good or evil. You can have companions that you can romance; each with their own well written tragic backstory(my personal favorite being hancock and Nick Valentine).In fallout 4 you are pre war and you fight to find your missing son, stole from you while you were unable to do anything.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117842732", "uniq_id": "9b184fe5-bbec-5a36-a696-db57957f9fe3", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3892", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Steven AH", "review_title": "Amazing!!!!!", "review_description": "Bought this at the Kirby Dr. Location and the manager was very helpful on how to play. His name was Adam or Josh? He had long hair. He is awesome and made this purchase awesome.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117733504", "uniq_id": "cfba0894-bcab-591c-b932-fe9c3ee1eb60", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3897", "name": "PlayStation X Like It's 94 T-Shirt", "brand": "Geeknet", "sku": "211057", "reviewer_name": "LadyOozaru", "review_title": "Comfy", "review_description": "Shirt is grey not black but I like it. I got it several sizes too big, so I can sleep in it. It's very comfy.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 months ago", "rating": "5", "average_rating": "4.614", "reviews_count": "57", "comment_id": "187554126", "uniq_id": "b5530656-fa7b-543d-b212-5d15ba2ae7a8", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3898", "name": "PlayStation X Like It's 94 T-Shirt", "brand": "Geeknet", "sku": "211057", "reviewer_name": "Hirioki", "review_title": "Lies and deceit.", "review_description": "I\u2019ve been notified that my package was \u201cdelivered\u201d. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3901", "name": "PlayStation X Like It's 94 T-Shirt", "brand": "Geeknet", "sku": "211057", "reviewer_name": "Nelly91", "review_title": "Nice shirt overall good deal", "review_description": "Nice shirt my fiance and brothers liked it, wrong color", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.614", "reviews_count": "57", "comment_id": "181628270", "uniq_id": "d68eb50c-2fb5-529f-8b57-f89285c4e14a", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3909", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Margo", "review_title": "Work great", "review_description": "[This review was collected as part of a promotion.] These batteries work great so far. I go through a lot of D batteries for my bubblers for bait buckets. I find that the name brand last longer than the cheaper ones. Hopefully I\u2019ll get a good long use out of these MAX batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "218148078", "uniq_id": "602c164e-e334-57b0-9f85-2956a9f3acbe", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3911", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Mar-75", "review_title": "Awesome brand", "review_description": "[This review was collected as part of a promotion.] What can I say that hasn\u2019t already been said about this awesome brand. This is by far my favorite brand of batteries. Whatever I use them in they last a long time. My flashlight are always super bright with these batteries. I rarely have to change my batteries and always shocked at how long they actually last. This will continue to be my favorite brand. I recommend them whenever I can.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "218093776", "uniq_id": "2e22d178-e540-58be-9492-a2b7f78cb1c2", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3926", "name": "PlayStation X Like It's 94 T-Shirt", "brand": "Geeknet", "sku": "211057", "reviewer_name": "Anonymous", "review_title": "Playstation Nostalgia", "review_description": "Just like the picture, brings back the nostalgia feel if the 90's. Size was exact", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.614", "reviews_count": "57", "comment_id": "163738447", "uniq_id": "a573791a-efed-5ca4-847f-bd69c76129e5", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3932", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Thewitchdoctor", "review_title": "Amazing game", "review_description": "I'm extremely satisfied with this game. I recently got a ps4 so after playing fallout 3, and new vegas for the past many years my experience with this new game and console is mind blowing", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117069152", "uniq_id": "fb22b464-a876-57d3-aaee-a894ba7c1365", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3935", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "SiR_PANDA82", "review_title": "Great game", "review_description": "This game hasn't came out my console at all. Very good game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117024576", "uniq_id": "c9421411-9583-5079-a5c5-4f42c6f25d84", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3942", "name": "Funko POP! Games: Halo Infinite Master Chief", "brand": "Funko", "sku": "216351", "reviewer_name": "Sch3p", "review_title": "Poor shipping packaging", "review_description": "Recieved the pop in very poor condition. Gamestoo did not do a good job at all with packaging. No bubble wrap or foam wrapping what so ever to help protect it during shipping.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "4", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.4096", "reviews_count": "83", "comment_id": "171393426", "uniq_id": "c61865b2-d8e3-54ff-940d-d4b3dbf7ba24", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3958", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Dilla", "review_title": "Great game.", "review_description": "This game does not quite stand up to 3 or NV, but it is a great game in it's own respect.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "116714731", "uniq_id": "8cbc5f78-99ec-52da-bc4c-9974c109fe76", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3968", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "lynellc", "review_title": "Lasts long time", "review_description": "[This review was collected as part of a promotion.] I have one of those big, heavy mag lites that take so many batteries that its almost not even worth it. But using Energizer MAX, they last a bit longer than all the others, and it doesnt cost a fortune to replace any batteries, no matter the size.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217924590", "uniq_id": "a6d76c00-1983-5557-adc0-9bf60c228b30", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3976", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Creator300", "review_title": "Detail is crazy good", "review_description": "I have never played fall out and I rented it fell in love had to buy it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "115588315", "uniq_id": "c261d4a5-fc4a-53a3-8fc7-b4fa7f8efd59", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3978", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Jbo89", "review_title": "Great fun can play it for days!", "review_description": "I had this game before traded it in too soon and had to get it back so I would be ready for the new fallout 76 great buy.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "115540019", "uniq_id": "c7c2436e-eff0-5b01-a6de-1b56c7ec15e5", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3979", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Big Daddy T", "review_title": "The Fallout series", "review_description": "Literally some of the best games I have ever played..", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "115531075", "uniq_id": "2170c6f7-9c56-52fc-baa2-93d7097e4b03", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3986", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "DebbieC8118", "review_title": "Long Lasting", "review_description": "[This review was collected as part of a promotion.] Batteries are a staple in my household.  Having a toddler son requires many batteries for many toys.  Regular batteries run out way to quickly.  These alkaline batteries have lasted twice as long so far and are still going.  I will not purchase another brand/style battery again after using the Energizer Max Alkaline.  The absolutely longest lasting battery I've ever used.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217868849", "uniq_id": "aad9d90b-0579-5a59-acfa-a593d4d16c9e", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3989", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "The Greg", "review_title": "Long shelf life", "review_description": "[This review was collected as part of a promotion.] So my fianc\u00e9 is notorious for buying things before we need them. I would buy batteries when the other batteries died. So to have these when I needed them was great. I was impressed that the date on them was almost ten years. I put them in my flashlight and I should be good to go for a few years with normal use. We have several flashlights, and will replace with the energizer max when the time comes.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217852061", "uniq_id": "5dce9946-accb-57c5-adef-de57414cc58a", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3991", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Beth80", "review_title": "Still going", "review_description": "[This review was collected as part of a promotion.] We used these in our light all weekend while camping and left them on all night. The batteries are just as strong as when we first put them in. I will definitely ne buying more of these batteries really soon for our other flashlights", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217839129", "uniq_id": "b8f92298-a357-5454-b462-ce0c04c9d648", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3999", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Ish28", "review_title": "This is amazing monitor has great features", "review_description": "[This review was collected as part of a promotion.] This monitor is amazing especially if you like to multitask I recommend anyone this monitor if you like to Stream, for Work, School, Gaming or for personal use has amazing feature to do everything in one monitor", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212470298", "uniq_id": "79937712-2ef6-5047-801c-25a525d90402", "scraped_at": "16/01/2022 16:19:20"}, {"index": " TRUE hdr", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "4008", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Sfcdaman", "review_title": "Excellent Game Play", "review_description": "This game is so awesome with a wide world to explore and you decide if you want to do the story line or branch off and explore.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "115347650", "uniq_id": "41d81055-d3e3-5fa6-97ec-338755b36390", "scraped_at": "16/01/2022 16:19:20"}, {"index": "4015", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Jon1225", "review_title": "Great", "review_description": "[This review was collected as part of a promotion.] These are some great brand batteries. I really needed these anyway because it was time to get new batteries for my baby girl swing and these are just the right fit for it . I love this brand of batteries anyway they are long lasting and don\u2019t have to worry about corruption or anything.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217808119", "uniq_id": "bb36ada7-133b-5749-ab80-3263689fe3d2", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4020", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Srm277", "review_title": "Trusted", "review_description": "[This review was collected as part of a promotion.] I bought these batteries to go with my \u201cout of power\u201d lights. Since these batteries last so long, I can trust that they will be ready to use if the power does go out giving us light to be able to see. I will definitely be buying more of these batteries for my power outage kit again.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217782827", "uniq_id": "6ed688b8-5c27-59ea-924b-1cd03c9b4c02", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4027", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Aust", "review_title": "Wow", "review_description": "[This review was collected as part of a promotion.] Wowfguvcy 9gi 8f8vu uv t 7f. R. T99t  9t r Today r it and t. T8 Today t 9t 9t of 9g 9t to", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212460315", "uniq_id": "e06f6485-53cc-534e-8a76-25e9df752b3f", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4031", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Moses0183", "review_title": "Greatest monitor of all time.", "review_description": "[This review was collected as part of a promotion.] Gaming on this monitor is a whole new experience. Great graphics and very smooth gam play.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212448092", "uniq_id": "70af7dd5-dd3d-5b92-83c2-bdb2c9d9c045", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4044", "name": "Angry Birds: Star Wars - Xbox One", "brand": "Activision", "sku": "954016", "reviewer_name": "Paul Rushing", "review_title": "It's Fun For All Ages.. even at 60 years old.", "review_description": "I'm 60years old and watched my grandson of age 6 play on his tablet. we loved taking turns. I wanted to be able to play my own as a player #2... went to look for this game as it was a 2 player up to a 4 player. gam estop made it easy by looking and finding is wasn't in their store. ordered and it in came and in time for Christmas.. we play and I able able to enjoy this game Angry Birds Star Wars with ease.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2941", "reviews_count": "17", "comment_id": "140542146", "uniq_id": "24f9aa82-3379-5165-912e-35d67995b744", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4050", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Catmom50", "review_title": "Simply the best battery for every day use", "review_description": "[This review was collected as part of a promotion.] If you're like me you've always thought batteries are batteries and paid no mind to brand....wrong...and I've found out the hard way. I've had batteries that didn't fit securely because of a smaller than standard size, some that didn't last more than a few days in a low drain device, and some that leaked into the device after just a few months.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "4060", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "cesarxp2", "review_title": "Beautiful Monitor and Gorgeous Display", "review_description": "[This review was collected as part of a promotion.] I use my monitor for both gaming and work. I love the default options the monitor comes with, as well as, the ability to split into two screens. Sometimes I'll work extra just to spend more time with the monitor lol. 10/10.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212444728", "uniq_id": "7803e2ed-99c4-5e64-9fa5-56af0c45bc65", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4061", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Doooodg", "review_title": "It's for me and work.", "review_description": "[This review was collected as part of a promotion.] I do not a Monitor but I really need one for work and. And the Monitor is the perfect size for me.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212444233", "uniq_id": "10868040-6a3f-5742-b397-c8e02b505834", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4069", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "The_Fat_Savage95", "review_title": "Great graphics great story great features", "review_description": "I just bought the ps4 n fallout 4 was one of the games I was looking forward to glad I got it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "114328702", "uniq_id": "9370f8d8-3408-56f8-9b1d-ae61c6c5a7cb", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4074", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Westsrt44", "review_title": "The story", "review_description": "I glad I bought this because I played fall out 3 and enjoyed the whole open world aspect of it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "114296758", "uniq_id": "ffd74613-da84-5a16-bbee-2f830c89d6ad", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4085", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Iamtracy35", "review_title": "Long Lasting!", "review_description": "[This review was collected as part of a promotion.] I generally use another battery brand but decided to try Energizer this time...I\u2019m glad I did. They have lasted longer and I think give a better charge. I\u2019m glad I picked these batteries ...they are my new favorite brand. I\u2019m going to change out all by batteries in my electronics today!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217718153", "uniq_id": "92b7e16b-792e-54ae-b3e1-aa028ed691d8", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4093", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "MrsZirkle1", "review_title": "Amazing", "review_description": "[This review was collected as part of a promotion.] I use my monitor for many different things but I love it for my work.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212430255", "uniq_id": "f90fe813-d893-52ee-91d6-652e76c6016f", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4097", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "MoneyMike", "review_title": "Monitor and feels like looking at the real world", "review_description": "[This review was collected as part of a promotion.] I love how everything i need and could use in a TV and monitor is in one. Well put together with solid craftsmanship so I know it will last a long time.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212420458", "uniq_id": "0b3d55d3-0e6a-5aae-a4a2-d9b208fcde73", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4104", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Shadowwoman94", "review_title": null, "review_description": "great graphics love how its setup and it's a lot better than Fallout 3", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "114005732", "uniq_id": "008af4aa-cd81-5842-babf-cd26afa78f76", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4113", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Dawsonsmommy", "review_title": "Love the brand", "review_description": "[This review was collected as part of a promotion.] I have always used this brand of batteries. They have a long shelf life and keep my things going for awhile. I\u2019ve never had an issue with these batteries. I have told many of my friends and family about them.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217713636", "uniq_id": "f0065927-1437-5b33-b08c-3d5983b402f8", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4141", "name": "KidKraft Modern Table and 2 Chair Set White", "brand": "KidKraft", "sku": "318647", "reviewer_name": "Joan E G", "review_title": "Great table / chair set", "review_description": "Just what I needed for my little grandson.  Perfect size and nice clean look.  Chairs are sturdy, never tipped over.  This is my second purchase. Granddaughter is still enjoying her table set, in use for 3 years.  It has held up very well with daily use!  A great selection at a reasonable price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.7", "reviews_count": "10", "comment_id": "226166118", "uniq_id": "c5c0fbc4-5ee2-5447-b462-53b659aa5c8f", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4151", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Krista87", "review_title": "Long lasting", "review_description": "[This review was collected as part of a promotion.] We have a huge need for batteries in our house between a toddler and baby and these don\u2019t disappoint. We are using them in our baby\u2019s swing and use the swing for hours a day and they\u2019ve been working great!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217678113", "uniq_id": "46b2971d-f809-5009-992f-62de21cfac87", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4167", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "JoeAndu", "review_title": "Love this game to death", "review_description": "There is actually no limit to what you can do unlike most games every building is explorable along with a huge maps and items that keep you questing/exploring to recieve them", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "10", "not_helpful_count": "3", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "95305631", "uniq_id": "9ae110a8-d0d5-5fa6-bead-f1852dfa2a57", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4169", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Ryu 2039", "review_title": "Amazing!!!", "review_description": "This has to be the best of the fallout series. I've played New Vegas and 3 and those were good, but this game was fantastic.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "7", "not_helpful_count": "2", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "94497450", "uniq_id": "61ef165b-73e2-53a7-81d4-dccd894ef4f8", "scraped_at": "16/01/2022 16:19:23"}, {"index": "Also", "name": " they are Energiser Max", "brand": " so that hopefully means it will last a while.\"", "sku": "yes: I recommend this product", "reviewer_name": null, "review_title": "0", "review_description": "0", "recommended_review": "1 year ago", "verifed_purchaser": "5", "helpful_count": "4.9175", "not_helpful_count": "424", "reviewed_at": "217585949", "rating": "6f9dac00-8c69-5c4d-9a2b-fc8b8da8fb99", "average_rating": "16/01/2022 16:19:24", "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "i'm continually blown away by the image quality and immersion every time i boot up. from a three 27\"\" monitors 1080p setup to this single qhd 49\"\" monitor", "name": " takes my gaming to a whole new level.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "i highly recommend the neo g9 to anyone serious about image quality and gaming response. take the time to set it up correctly and use care in handling it", "name": " and you'll have none of the issues some other folks on here have experienced.\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "1 month ago", "recommended_review": "5", "verifed_purchaser": "4.5319", "helpful_count": "643", "not_helpful_count": "212404276", "reviewed_at": "ca10085c-8f13-5678-94b4-713f2b126fb0", "rating": "16/01/2022 16:19:24", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "4192", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Queenrod71", "review_title": "This product has fantastic viewing settings", "review_description": "[This review was collected as part of a promotion.] I use the monitor for surveillance in my home. It has picture perfect quality. I loved the price and the voice control. Hands free always work for me. I would recommend this product by Samsung! A very exciting experience.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212403931", "uniq_id": "5f2c5749-2756-5496-a45a-f3e97817c54f", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4199", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Redd47", "review_title": "Fallout 4 and its intensity", "review_description": "Gaming is an art and some consider it a sport. The game Fallout 4 was intense, challenging and hard to conquer. The vocabulary alone that is asked before you begin the game is high level. I thought the game kept me on my toes and forced me to think during each battle. The journey that is taken with the exploration was exciting. Creating the characters prior to the game play was also something I genuinely enjoyed doing. The possibility of surviving the ride is, however, not promise to any gamer when playing. ~Red", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "69419213", "uniq_id": "7c7ae707-80a1-54db-9963-e6c3a6333a5e", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4222", "name": "Create-a-Space Storage Center 10 Piece Set", "brand": "Learning Resources", "sku": "294796", "reviewer_name": "EMILY", "review_title": "Efficient for both mom and child", "review_description": "\"I use this on my \"\"craft center\"\" right by the kitchen table", "recommended_review": " which ends up being the \"\"craft\"\" table as well. Very helpful for easy grabbing and quick clean up for a four year old. I like the lightness of the containers and the colors are fun. They are low profile", "verifed_purchaser": " which makes it difficult for markers or pens to stand up in. It would be great to have different heights", "helpful_count": " with some sort of Sliced effect to have the tall containers in the back. Overall", "not_helpful_count": " does it's job effectively", "reviewed_at": " organizes", "rating": " quick to get supplies and quick to clean up. Happy with it!\"", "average_rating": "No: I don\u2019t recommend this product", "reviews_count": "Verified Purchaser", "comment_id": "0", "uniq_id": "0", "scraped_at": "3 years ago"}, {"index": "4226", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "tmshears61", "review_title": "Happy Nana", "review_description": "[This review was collected as part of a promotion.] Energizer MAX Alkaline D Batteries 2 Pack is something I always need in my home because we go thew tons of battires. I also like that these will last much longer than a lot of others I have used with all the grandbabies toys and not having to go threw as many will help save alot of money in my pocket. One happy Nana here with Energizer MAX Alkaline D Batteries 2 Pack.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217557762", "uniq_id": "5b1be007-1e0f-59bc-84ba-98d1cbcf37f2", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4230", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Slimeball730", "review_title": "It's amazing, I have to repair", "review_description": "[This review was collected as part of a promotion.] Gaming and I love the wide screen display.  Gaming on it feels like your there.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212399707", "uniq_id": "fdd1b1ba-1af1-5754-a9a0-18b3b0779af2", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4252", "name": "Mass Effect 3", "brand": "Electronic Arts", "sku": "106427", "reviewer_name": "kingdawg", "review_title": "Good besides Ending", "review_description": "\"Game was overall amazing like all the Mass Effect's. The multiplayer gets really boring and is repetitive. The ending is horrible for singleplayer. Rumors are saying that Bioware is releasing the real ending thats a DLC called \"\"Truth\"\" it takes place on the last collector ship and in multiplayer you will be able to play as a Geth", "recommended_review": " Bataron", "verifed_purchaser": "\ufeff and Prothen.\"", "helpful_count": "yes: I recommend this product", "not_helpful_count": null, "reviewed_at": "0", "rating": "2", "average_rating": "9 years ago", "reviews_count": "4", "comment_id": "3.6667", "uniq_id": "18", "scraped_at": "22757834"}, {"index": "I can't even bring myself to try to play and enjoy the MP aspects of it anymore", "name": " there's just no point. I know the ending. I know my choices don't matter and in a fit of intellectual laziness", "brand": " the devs have sauntered off to collect my money.", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "4273", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Dawn", "review_title": "Great monitor", "review_description": "[This review was collected as part of a promotion.] Love the monitor  works great and colors are vivid.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212363568", "uniq_id": "66af1e92-d3dd-5b68-8c49-d2c798d64437", "scraped_at": "16/01/2022 16:19:25"}], "stage_runningstate": "executed", "datacache": 0, "originalcount": 5321, "samplecount": 546, "samplefile": "/FileStore/platform/sampleData/678c3d1a820abd653b9b85be/part-00000-63ae79d1-6839-4975-8817-215afb701a8c-c000.csv", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": "{}"}}, {"_id": "678c3d1a820abd653b9b85bf", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/gamestop_reviews.csv", "in": ["678c3d1a820abd653b9b85be"], "out": ["678c3d1a820abd653b9b85c0"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "Recommended_AutoFE", "dataPercentage": "10", "comment": "", "pipeline_id": "678c3d1a820abd653b9b85bb", "sub_type": "Feature", "stage_type": "transformation", "stage_attributes": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10", "sampledata": [{"index": "0", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Leeford", "review_title": "look out gamerz, here comez awsome", "review_description": "My new OLED is a upgrade and it's great!  This is my third Vizio TV to replace my first one that went blank after 12 years of stellar service. (I'm even thinking of getting it repaired if possible for the great grand kids.)   I have always liked the picture quality and the price of Vizio's. You cant go wrong.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229196240", "uniq_id": "d749678d-aeba-5a6b-b8e2-8d2121463672", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 352.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 286.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 374.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 35.0, "uniq_id_stringindexer_transform": 350.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "1", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "DJM7", "review_title": "Great looking screen!", "review_description": "Rating is really a 4.5 but that's unavailable. The unit looks great both in and off. It is short on physical features (Bluetooth and whatnot) but I use both external sound and media units. This is a great OLED to buy if you want a great TV at a reasonable price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229179703", "uniq_id": "9f20312c-1047-5824-97d2-d5563b8fd046", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 273.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 105.0, "review_title_stringindexer_transform": 346.0, "review_description_stringindexer_transform": 218.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 25.0, "uniq_id_stringindexer_transform": 149.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "2", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "EC82", "review_title": "Quality", "review_description": "I\u2019m quite pleased with the entire product as a whole. The quality of picture and sound really speaks for itself when in use.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229174444", "uniq_id": "178b3b03-2c56-5abc-a016-c74c2633c9c2", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 369.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 198.0, "review_title_stringindexer_transform": 198.0, "review_description_stringindexer_transform": 381.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 77.0, "uniq_id_stringindexer_transform": 282.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "3", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Weeto", "review_title": "Unbelievable picture quality!", "review_description": "I\u2019ve only had my new Visio OLED65 mounted and operating for 3 days now and I\u2019m like a kid who after Christmas can\u2019t get enough of his favorite gift. The brightness and clarity of the picture is another huge by step forward in the evolution of  the television. I find myself seeking out programming that will showcase the quality of the picture regardless of the genre or intended audience. Some of the newer, computer generated cartoons, lack any redeemable qualities (imho) save for the incredible graphics, which are stunningly colorful, bright, and almost as vivid as real life. Nature documentaries and shows involving space, especially when shot in 4K are almost mesmerizing. When I bought my 65\u201d HD tv about 10 years ago I thought I was witnessing the best quality picture that could be produced by anything this side of a mirror. I was wrong, and happily so. If you\u2019re on the fence, like I was, about whether to replace a broken or outdated television with another of similar HD quality, that is to say \u201cstandard high definition\u201d...don\u2019t even waste your time. It\u2019s increasingly difficult to find as 4K is becoming ubiquitous, so that is pretty much a given. On the subject of spending your hard earned money on the more expensive OLED technology....if you have the means, or can somehow figure out how to acquire the means...my advice is definitely do so. Whether you\u2019re into movies, sports, gaming, or even nature/space shows, you will be amazed at the latest leap in picture quality and brightness. And VIZIO offers all the quality at a substantial savings. Putting the absolute best technology within the reach of those of us for whom the strength of the stock market makes absolutely no difference to our bottom line. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 456.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 328.0, "review_title_stringindexer_transform": 203.0, "review_description_stringindexer_transform": 246.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "FYI...the 65\u201d HD television I had to replace was a Samsung that was about 4 or 5 years old that stopped working after some loud cracking and popping noises that sounded like the transformer on an overhead power line blowing out. However", "name": " my 42\u201d VIZIO that I bought in \u201808 doesn\u2019t even have a single bad pixel. Food for thought.\"", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "0", "review_title": "0", "review_description": "10 months ago", "recommended_review": "2", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "229167959", "reviewed_at": "16e925e3-1e59-537e-aa67-1675b613d351", "rating": "16/01/2022 16:17:56", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 480.0, "name_stringindexer_transform": 19.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 7.0, "recommended_review_stringindexer_transform": 13.0, "verifed_purchaser_stringindexer_transform": 4.0, "helpful_count_stringindexer_transform": 4.0, "not_helpful_count_stringindexer_transform": 22.0, "reviewed_at_stringindexer_transform": 28.0, "rating_stringindexer_transform": 7.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "4", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "LexusSC400", "review_title": "Vizio OLED", "review_description": "The picture is very crisp and the blacks very dark.  Beautiful color.  The Vizio SmartCast app is fantastic.  The response from selections is much faster than the traditional supplied remote.  They update it from time to time with most recent voice search function", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229131414", "uniq_id": "bc017585-3bc1-5a37-9e58-f0bed6de9a72", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 64.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 45.0, "review_title_stringindexer_transform": 58.0, "review_description_stringindexer_transform": 322.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 96.0, "uniq_id_stringindexer_transform": 211.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "5", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ninjaafro", "review_title": "Bugs", "review_description": "Picture quality is amazing, however within a week from purchasing the tv will not turn on unless I unplug and plug it back in.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229087196", "uniq_id": "4167ea1c-87b6-5dbd-a04b-56fc7d1948e9", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 185.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 356.0, "review_title_stringindexer_transform": 210.0, "review_description_stringindexer_transform": 70.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 364.0, "uniq_id_stringindexer_transform": 369.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "6", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "von R", "review_title": "Glass like screen", "review_description": "Image is so clear I feel like I\u2019m on the set of the shows.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229080154", "uniq_id": "b4c20627-111c-5ad9-809f-11d6a82c675d", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 266.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 119.0, "review_title_stringindexer_transform": 293.0, "review_description_stringindexer_transform": 408.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 334.0, "uniq_id_stringindexer_transform": 87.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "7", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ohio Erik", "review_title": "Amazing 4k picture", "review_description": "I purchased this TV about 2 weeks ago and am blown away by the crisp, 4k picture.  I would definitely recommend this TV to someone considering an upgrade.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229044038", "uniq_id": "ea9ef1ba-d537-5b73-ab71-790616ef3258", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 424.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 40.0, "review_title_stringindexer_transform": 246.0, "review_description_stringindexer_transform": 311.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 1.0, "uniq_id_stringindexer_transform": 55.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "8", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "jonck", "review_title": "Great features", "review_description": "I got this today 2/25 for my birthday present from my son as a surprise gift, without any prior guess or information at all. My previous one in my master bed room was quite old Samsung 50\u201d PD TV, which was ok but heavy and bulky compared to this. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 39.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 395.0, "review_title_stringindexer_transform": 353.0, "review_description_stringindexer_transform": 143.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "I am so happy to have this wonderful big one for my first OLED TV", "name": " of which screen is fantastic and very light compared to my previous one indeed.\"", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "0", "review_title": "0", "review_description": "10 months ago", "recommended_review": "4", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "228991912", "reviewed_at": "7f69bc6a-f89c-53d4-a52a-39a8b8512c54", "rating": "16/01/2022 16:17:56", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 348.0, "name_stringindexer_transform": 36.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 7.0, "recommended_review_stringindexer_transform": 5.0, "verifed_purchaser_stringindexer_transform": 4.0, "helpful_count_stringindexer_transform": 4.0, "not_helpful_count_stringindexer_transform": 16.0, "reviewed_at_stringindexer_transform": 29.0, "rating_stringindexer_transform": 7.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "9", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bob279", "review_title": "Great picture and a good price", "review_description": "Best price on an OLED tv. Has a great picture and is easy to navigate the menus and connect via apple or Android devices. I always bought LG OLED tvs because I liked their quality and features. But so far, Vizio is just as good and a better price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228960695", "uniq_id": "3e14ceea-0717-51ac-9edf-6b0d17b9f978", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 88.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 143.0, "review_title_stringindexer_transform": 333.0, "review_description_stringindexer_transform": 98.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 250.0, "uniq_id_stringindexer_transform": 104.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "10", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "NuggetsOne", "review_title": "Awesomeness!", "review_description": "Just like the elite controller v2 but halo edition one of the best controllers out there if you do not have one elite\u2019s controller\u2019s are must have.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "16 hours ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "198688597", "uniq_id": "3bdf13c6-ed6c-5df7-a7cb-f87507d4b133", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 193.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 107.0, "review_title_stringindexer_transform": 266.0, "review_description_stringindexer_transform": 392.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 31.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 306.0, "uniq_id_stringindexer_transform": 17.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "11", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "AJ V", "review_title": "Fantastic product", "review_description": "First foray with the elite controller. Nothing but impressed. The weight in the hand, the grip, the buttons, and changeable joysticks are all amazing. Even better is the Masterchief finish. If you can't find the halo edition I'd recommend trying the regular elite series 2, I'll never use a different Xbox controller again.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 day ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "198672375", "uniq_id": "92688319-f675-53b8-9468-2e7b1ea9bbc4", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 84.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 18.0, "review_title_stringindexer_transform": 321.0, "review_description_stringindexer_transform": 247.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 41.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 292.0, "uniq_id_stringindexer_transform": 40.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "12", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Always a fool", "review_title": "Not all as it seems", "review_description": "Really bought this for the blue mode leds, just to find out they are still white leds with a blue coating on them and not that bright. All in all still an elite controller.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "7 days ago", "rating": "4", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "196827630", "uniq_id": "ff2acd3f-f96f-5935-bdfc-8e29e518fb60", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 28.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 304.0, "review_title_stringindexer_transform": 158.0, "review_description_stringindexer_transform": 27.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 21.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 139.0, "uniq_id_stringindexer_transform": 43.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "13", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "RootM0d", "review_title": "Beautiful design - Awesome feel - Must get one!", "review_description": "At first I was asking myself why spend the crazy money on a controller!  I too am now a believer.  From the case to cable to finally making its way to the actual controller - it is special in every way.  There is so much detail to this controller.  Lets not forget it is a limited edition and carries a beautiful Halo design.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "7 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "196827194", "uniq_id": "a3a3d750-800d-5eef-a917-fd5b00598f06", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 151.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 235.0, "review_title_stringindexer_transform": 142.0, "review_description_stringindexer_transform": 229.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 21.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 186.0, "uniq_id_stringindexer_transform": 94.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "14", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Ozlas", "review_title": "Simply amazing", "review_description": "The build of this controller is perfect and the details are amazing.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "9 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "196230804", "uniq_id": "ebae6bfc-540e-5f39-9ce2-2d46db50b49a", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 296.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 296.0, "review_title_stringindexer_transform": 278.0, "review_description_stringindexer_transform": 58.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 36.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 302.0, "uniq_id_stringindexer_transform": 274.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "15", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Odium Prius", "review_title": "Limited Edition Halo Controller", "review_description": "Cortana herself lives within this controller. I am one with Halo", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "195216162", "uniq_id": "78865f85-196f-515f-90ed-a8dad95d9065", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 82.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 10.0, "review_title_stringindexer_transform": 315.0, "review_description_stringindexer_transform": 204.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 18.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 387.0, "uniq_id_stringindexer_transform": 336.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "16", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Ryan CIN3MATIX", "review_title": "Beautiful Elite Series 2", "review_description": "This controller has always been great but this one is a work of art.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "195708350", "uniq_id": "89ac96f3-a6a7-5f6e-ac22-302869e30bc7", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 172.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 163.0, "review_title_stringindexer_transform": 91.0, "review_description_stringindexer_transform": 49.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 18.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 92.0, "uniq_id_stringindexer_transform": 50.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "17", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Punkwaste", "review_title": "Firing on all cylinders.", "review_description": "Even lighter than my previously owned Elite Series 2, thought it would be heavier. The buttons, the triggers, the analogue sticks, everything operates better than the original Elite Series 2 at launch. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 285.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 338.0, "review_title_stringindexer_transform": 344.0, "review_description_stringindexer_transform": 179.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "This thing is only $20 more than the ES2", "name": " and you know they could\u2019ve easier made it $100 more and still sold out. Amazing.\"", "brand": "yes: I recommend this product", "sku": "Verified Purchaser", "reviewer_name": "0", "review_title": "0", "review_description": "14 days ago", "recommended_review": "5", "verifed_purchaser": "4.6993", "helpful_count": "306", "not_helpful_count": "194520876", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "16/01/2022 16:17:57", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 276.0, "name_stringindexer_transform": 24.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 9.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 240.0, "recommended_review_stringindexer_transform": 4.0, "verifed_purchaser_stringindexer_transform": 11.0, "helpful_count_stringindexer_transform": 20.0, "not_helpful_count_stringindexer_transform": 28.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 8.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "18", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "CosmicOwl", "review_title": "Rad sauce", "review_description": "These controllers I think are worth the money. One of my favorite things is that I no longer need double A batteries. It comes with a charging port. And how I can customize the buttons is rad", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "17 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "194329916", "uniq_id": "65c38814-b259-591c-ae59-a3f0fbae81d0", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 407.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 309.0, "review_title_stringindexer_transform": 167.0, "review_description_stringindexer_transform": 330.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 24.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 324.0, "uniq_id_stringindexer_transform": 356.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "19", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Skyturtle97", "review_title": "Excellent purchase.", "review_description": "Love the controller use it everytime I play. The remote plays excellent. Be carefull of the back buttons though do to being removable I feel like they will wear out faster than most.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "18 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "194187129", "uniq_id": "902d7992-f6fd-55bd-b5d7-408db5a49648", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 53.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 271.0, "review_title_stringindexer_transform": 247.0, "review_description_stringindexer_transform": 151.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 45.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 346.0, "uniq_id_stringindexer_transform": 258.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "20", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Pitbull91101", "review_title": "Yoshi switch game", "review_description": "Yoshi game was awesome and still playing it thank u sooo much GameStop :))", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127432481", "uniq_id": "540015d7-27e3-50f6-b66b-8646416c0cfb", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 355.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 36.0, "review_title_stringindexer_transform": 211.0, "review_description_stringindexer_transform": 425.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 307.0, "uniq_id_stringindexer_transform": 339.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "21", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Mykd", "review_title": "Awesome game if you like the Mario brothers games.", "review_description": "Great game. You will enjoy it. Good price worth it I Always have enjoyed the super Mario series since Mario brothers in the arcade", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127430959", "uniq_id": "00bd1c61-b1e9-5996-9cb2-68f647941463", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 217.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 261.0, "review_title_stringindexer_transform": 42.0, "review_description_stringindexer_transform": 431.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 244.0, "uniq_id_stringindexer_transform": 177.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "22", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Chigg", "review_title": "Awsome game...", "review_description": "My son loves to play this game, he's been playing it every day since he got it... Great Job!!!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127420280", "uniq_id": "5cf58f8e-75b2-555b-b9ac-0edb49219337", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 121.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 116.0, "review_title_stringindexer_transform": 305.0, "review_description_stringindexer_transform": 281.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 132.0, "uniq_id_stringindexer_transform": 131.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "23", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Prieto56", "review_title": "Awesome Game for Children!", "review_description": "The game is great for a family and younger children. My 4 year old wnjoys the game.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127414142", "uniq_id": "992506c3-cb1d-5a05-afc6-cce6a4a437fd", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 58.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 318.0, "review_title_stringindexer_transform": 363.0, "review_description_stringindexer_transform": 17.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 269.0, "uniq_id_stringindexer_transform": 68.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "24", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Iz B", "review_title": "Poochy", "review_description": "It would be better if Poochy was in all of the levels.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127414207", "uniq_id": "70c3cefe-763a-5aca-9b7d-5bd2b36c5595", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 160.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 194.0, "review_title_stringindexer_transform": 161.0, "review_description_stringindexer_transform": 194.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 63.0, "uniq_id_stringindexer_transform": 276.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "25", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Angel Marred", "review_title": "Not bad", "review_description": "It's cute and fun, but feels a little lacking in fulfilling its potential.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127411122", "uniq_id": "c1aea343-68b1-58fa-8a7d-07f265e664cb", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 291.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 97.0, "review_title_stringindexer_transform": 12.0, "review_description_stringindexer_transform": 424.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 195.0, "uniq_id_stringindexer_transform": 251.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "26", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Derrick Evans", "review_title": "Opinion on Yoshi Crafted World", "review_description": "Good game including game play and music also music", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127409004", "uniq_id": "fec5af3e-7f63-5e5d-9649-1b81750f3e24", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 128.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 294.0, "review_title_stringindexer_transform": 99.0, "review_description_stringindexer_transform": 295.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 124.0, "uniq_id_stringindexer_transform": 374.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "27", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jeremy Green", "review_title": "Another Win-tendo Jewel!!", "review_description": "The quirky style that shined in Yoshi\u2019s Wooly World has gotten a serious upgrade in this new gem from Nintendo.  Like all it\u2019s first-party titles, this game is nearly flawless.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 362.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 66.0, "review_title_stringindexer_transform": 192.0, "review_description_stringindexer_transform": 428.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The \u201ccrafted world\u201d is exceptionally detailed", "name": " with cardboard cutouts", "brand": " Pinterest worth constructions", "sku": " and vibrant colors that pop on everything from the tiny Switch screen to a 70\u201d flatscreen TV.", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 36.0, "name_stringindexer_transform": 15.0, "brand_stringindexer_transform": 17.0, "sku_stringindexer_transform": 16.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The gameplay is tight", "name": " with seamless reaction times and plenty of opportunities to save yourself from mistakes.  Easy enough for kids to pick up", "brand": " but easily enjoyed by gamers of all ages", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 92.0, "name_stringindexer_transform": 20.0, "brand_stringindexer_transform": 18.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Most importantly", "name": " this game is fun!\"", "brand": "No: I don\u2019t recommend this product", "sku": "Verified Purchaser", "reviewer_name": "1", "review_title": "0", "review_description": "2 years ago", "recommended_review": "5", "verifed_purchaser": "4.6556", "helpful_count": "2390", "not_helpful_count": "127408484", "reviewed_at": "7ed32763-a3be-57d4-a35e-a166b90de2ee", "rating": "16/01/2022 16:17:57", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 388.0, "name_stringindexer_transform": 14.0, "brand_stringindexer_transform": 9.0, "sku_stringindexer_transform": 9.0, "reviewer_name_stringindexer_transform": 4.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 5.0, "recommended_review_stringindexer_transform": 4.0, "verifed_purchaser_stringindexer_transform": 5.0, "helpful_count_stringindexer_transform": 8.0, "not_helpful_count_stringindexer_transform": 12.0, "reviewed_at_stringindexer_transform": 27.0, "rating_stringindexer_transform": 8.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "28", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Carl78", "review_title": "Good game", "review_description": "She loves it good game. It easy to play and addicting.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127407425", "uniq_id": "bc585083-82d6-5cb5-af8a-7f19120e6f3a", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 487.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 206.0, "review_title_stringindexer_transform": 47.0, "review_description_stringindexer_transform": 299.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 319.0, "uniq_id_stringindexer_transform": 47.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "29", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Alejandro Rivera", "review_title": "Best Nintendo game I ever played!", "review_description": "Yoshi\u2018s crafted world is the best Nintendo game I ever played since Yoshi\u2018s woolly world! Lots of hard challenges to complete and it\u2019s so much fun! I love this game!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127405746", "uniq_id": "d92ea3bf-7fab-56df-802f-973a7be01387", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 440.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 175.0, "review_title_stringindexer_transform": 80.0, "review_description_stringindexer_transform": 294.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 72.0, "uniq_id_stringindexer_transform": 63.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "30", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Pixle101", "review_title": "Brilliant picture", "review_description": "I recently bought this TV and was blown as easy with the picture quality. I never want not to go back to LED.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228929144", "uniq_id": "4eeca482-acc8-54f0-bf9c-1552ad6304c3", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 423.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 405.0, "review_title_stringindexer_transform": 53.0, "review_description_stringindexer_transform": 265.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 32.0, "uniq_id_stringindexer_transform": 227.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "31", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Sillypajamas", "review_title": "Absolutely amazing picture quality", "review_description": "I went from an old LCD TV to this Ola TV and the picture quality is amazing this TV has a deep as blocks of ever seen the sound quality is fantastic I could not be happier!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228928290", "uniq_id": "b6503cc7-6b14-5ea4-ae9e-5e984741ae65", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 306.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 155.0, "review_title_stringindexer_transform": 166.0, "review_description_stringindexer_transform": 314.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 191.0, "uniq_id_stringindexer_transform": 387.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "32", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "John4", "review_title": "This tv is vibrant", "review_description": "Bought this yesterday and I am really excited. I saw how clear the picture was and had to have it. Won out over my husband who wanted the Sony.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 250.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 85.0, "review_title_stringindexer_transform": 228.0, "review_description_stringindexer_transform": 175.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "He agreed this morning while watching NASCAR that I was right. Yeah for me.\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "10 months ago", "review_description": "5", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "228881042", "not_helpful_count": "2a736f40-6b79-5c49-b539-5eae6b06fe94", "reviewed_at": "16/01/2022 16:17:57", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 4.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 365.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 13.0, "not_helpful_count_stringindexer_transform": 42.0, "reviewed_at_stringindexer_transform": 23.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "33", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Mike1921", "review_title": "Great picture, confusing to turn on", "review_description": "I've had this TV for 3 weeks now, so far I really like the picture. it's hooked up to a vizio 2.1 sound bar. it is confusing when I 1st turn the TV on,  I get the Vizio sign on the screen, a few moments later the picture comes on with the TV speakers, then the tv shuts off, a few seconds pass and he comes back on with the sidebar act of and everything is OK then don't understand why it goes off comes on goes off and comes back on", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228863224", "uniq_id": "4840bb9f-8063-54f1-aafd-dc779ba006b8", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 99.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 157.0, "review_title_stringindexer_transform": 317.0, "review_description_stringindexer_transform": 347.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 127.0, "uniq_id_stringindexer_transform": 193.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "34", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bmitch20", "review_title": "Nice tv", "review_description": "Great TV at at a reasonable price.  Happy so far with purchase", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228776856", "uniq_id": "5dfb09b5-3b7b-5c92-8d69-2e487ee55948", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 8.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 273.0, "review_title_stringindexer_transform": 355.0, "review_description_stringindexer_transform": 398.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 341.0, "uniq_id_stringindexer_transform": 119.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "35", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "karena", "review_title": "Gorgeous picture!", "review_description": "I love that I found an OLED that did not break the bank. The picture quality is amazing and VCast is great! The only downside is the sound and it\u2019s only a small complaint on the quality.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228759010", "uniq_id": "58e11806-69db-59a1-bf1b-1931387149b4", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 168.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 61.0, "review_title_stringindexer_transform": 292.0, "review_description_stringindexer_transform": 223.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 316.0, "uniq_id_stringindexer_transform": 214.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "36", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Babes70", "review_title": "Love this TV!!", "review_description": "Easy setup and there you go...I love VIZIO TV. I will continue to buy VIZIO TV's !", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228750584", "uniq_id": "1b36ae98-a3b9-586b-b75c-92d0b0a64fbe", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 271.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 19.0, "review_title_stringindexer_transform": 244.0, "review_description_stringindexer_transform": 393.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 230.0, "uniq_id_stringindexer_transform": 286.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "37", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Koky87", "review_title": "Great tv for value", "review_description": "Very good image quality, beautiful design on a affordable price", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228749581", "uniq_id": "ce1ab1c3-34c5-5b21-90d3-be7a37b215d1", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 140.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 44.0, "review_title_stringindexer_transform": 85.0, "review_description_stringindexer_transform": 136.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 85.0, "uniq_id_stringindexer_transform": 277.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "38", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Dcm388", "review_title": "Best tv for the price", "review_description": "Oled is king I\u2019ll never go back to traditional led TVs again it\u2019s just not even in the same ballpark you can\u2019t beat the picture quality of and oled", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228724687", "uniq_id": "926fe7c6-6345-529c-91bc-35736576d50f", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 373.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 350.0, "review_title_stringindexer_transform": 303.0, "review_description_stringindexer_transform": 263.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 283.0, "uniq_id_stringindexer_transform": 209.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "39", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "SunnyS", "review_title": "TV is awesome!!", "review_description": "\"I'm a true fan of vizio. My old 36\"\" Vizio lasted me a very long time and that's the reason why I decided to stick with vizio. Visuals are amazing on this OLED. There are some bugs but they can be repaired by software update patches released by vizio. I also bought the Vizio Atmos soundbar and its absolutely freegin awesome. Only issue I've experienced is the sound bar doesnt activate on its own and I usually have to cycle through the settings to reactivate through HDMI-ARC. Im.sure theres a fix for it. Overall I'm happy with it and still feel vizio makes great products.\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228722869", "uniq_id": "b74cf53c-979d-5157-b1b1-28572636ecef", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 278.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 92.0, "review_title_stringindexer_transform": 149.0, "review_description_stringindexer_transform": 108.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 168.0, "uniq_id_stringindexer_transform": 123.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "40", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Spenceleoz", "review_title": "Xbox Elite Controller 2 - Halo Edition", "review_description": "It\u2019s amazing! Works perfect, just as an elite controller should. The best part is the paint job! 10/10 recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "21 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "194027229", "uniq_id": "f6a47493-63ec-510b-aba2-8a68eff9bc34", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 72.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 88.0, "review_title_stringindexer_transform": 249.0, "review_description_stringindexer_transform": 8.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 22.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 288.0, "uniq_id_stringindexer_transform": 328.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "41", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Rich190", "review_title": "Premium Halo Xbox Elite Controller", "review_description": "This controller provides excellent fine motor control with adjustable thumbstick tension, and removable back peddles.  It works great especially for a first person shooting game like Halo infinite.  It\u2019s on the pricey side, but you know this is a premium product for serious gamers.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "2", "reviewed_at": "21 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "194017047", "uniq_id": "9699ef26-f730-5927-bf3e-7cdf8ecbb2a5", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 443.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 412.0, "review_title_stringindexer_transform": 379.0, "review_description_stringindexer_transform": 99.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 22.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 322.0, "uniq_id_stringindexer_transform": 33.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "42", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "DrKillem", "review_title": "Amazing!", "review_description": "Best Xbox controller I've owned. Worth every penny. Owned for a month with no issues. Only con is I wish there were replacement joysticks, I love these but i know I'm going to wear them out, and I won't have Master Cheif green ones to replace :/", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192503208", "uniq_id": "3de73f9b-98c9-56e2-805a-e539ab1e5e33", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 339.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 411.0, "review_title_stringindexer_transform": 7.0, "review_description_stringindexer_transform": 126.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 326.0, "uniq_id_stringindexer_transform": 352.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "43", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Areria", "review_title": "Great controller but late shipping", "review_description": "Great controller. Purchase was definitely worth it. The only problem was the finalizing my payment and the late shipment through GameStop.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "7", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192137369", "uniq_id": "a2bc0bcb-0540-5dca-b1c2-06430afdd624", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 233.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 231.0, "review_title_stringindexer_transform": 97.0, "review_description_stringindexer_transform": 127.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 5.0, "not_helpful_count_stringindexer_transform": 10.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 26.0, "uniq_id_stringindexer_transform": 80.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "44", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "eyesayahh", "review_title": "Best Controller", "review_description": "This controller is incredibly responsive. It\u2019s fully customizable with lots of additional features & settings that can be adjusted to your preferences. I was skeptical at first due to the price but after a fair amount of use I wouldn\u2019t game with anything else", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "4", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192087597", "uniq_id": "8c024bd3-193e-5631-802c-3a989f6d4f73", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 95.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 267.0, "review_title_stringindexer_transform": 11.0, "review_description_stringindexer_transform": 166.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 5.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 160.0, "uniq_id_stringindexer_transform": 114.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "45", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Animehipster", "review_title": "Great controller", "review_description": "Love the controller no probs with it the first one was lost but customer service made sure I got another one and in a timely manner", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192080051", "uniq_id": "1a337911-6166-5983-b5cf-944db19384c8", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 2.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 317.0, "review_title_stringindexer_transform": 4.0, "review_description_stringindexer_transform": 163.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 274.0, "uniq_id_stringindexer_transform": 165.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "46", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Moi93", "review_title": "Halo Elite Series 2 Controller", "review_description": "SO BEAUTIFUL! Great addition to my Halo collection. The detail is just amazing. Performs like any other elite series 2 but that color scheme is just phenomenal.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "8", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192046520", "uniq_id": "8c51c627-f616-5bdf-aeff-d93bf787994c", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 152.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 90.0, "review_title_stringindexer_transform": 172.0, "review_description_stringindexer_transform": 259.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 8.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 273.0, "uniq_id_stringindexer_transform": 109.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "47", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Geo R", "review_title": "Buy one if you can find it!", "review_description": "great controller, beautiful design, ultimate customization", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "6", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192045625", "uniq_id": "dfa3ef96-f70e-5e78-9ee8-8d0c57f017c2", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 298.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 346.0, "review_title_stringindexer_transform": 25.0, "review_description_stringindexer_transform": 209.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 4.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 4.0, "uniq_id_stringindexer_transform": 2.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "48", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "JohnHalo117", "review_title": "Halo Infinite Controller:)", "review_description": "Doesn\u2019t even feel like an elite controller. But it does feel like an advance one with the grips and joystick converters. Not really worth the money but the design is amazing and there is no battery pack in the back, it\u2019s all built in, like a phone. Over all I love it! I\u2019m such a Halo fan it was a no brainer not to get.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192042914", "uniq_id": "8c35296d-ba41-5598-a513-740f8566113e", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 213.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 204.0, "review_title_stringindexer_transform": 343.0, "review_description_stringindexer_transform": 404.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 121.0, "uniq_id_stringindexer_transform": 327.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "49", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "GrabAzzery", "review_title": "A High Quality Masterpiece", "review_description": "It feels great, it enhances gameplay thanks to the paddles and customizability, and it looks absolutely beautiful.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "5", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192041796", "uniq_id": "6ebdfa30-4058-5fa6-b76a-d8bc6977e810", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 265.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 165.0, "review_title_stringindexer_transform": 215.0, "review_description_stringindexer_transform": 250.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 6.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 253.0, "uniq_id_stringindexer_transform": 77.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "50", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Chaz54", "review_title": "Yoshi party", "review_description": "Tons of fun to play with my kids! They love the look and ease of play!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127405362", "uniq_id": "960cbf7c-2354-567a-ba9c-537f3e63810f", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 133.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 82.0, "review_title_stringindexer_transform": 250.0, "review_description_stringindexer_transform": 203.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 249.0, "uniq_id_stringindexer_transform": 389.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "51", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jukeman79", "review_title": "BUY IT", "review_description": "Awsome title. Loads of fun! My kids and I love it!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127405229", "uniq_id": "69500d83-dab7-5078-9aa1-5e2200736382", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 34.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 60.0, "review_title_stringindexer_transform": 128.0, "review_description_stringindexer_transform": 430.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 350.0, "uniq_id_stringindexer_transform": 106.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "52", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "dfint", "review_title": "Amazing!", "review_description": "This game is amazing! Almost had given up on the Switch, but this game saved that from happening! It's a great game for people of all ages!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127404696", "uniq_id": "d361c95b-fd18-5024-a6fe-f997562e2d3b", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 468.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 221.0, "review_title_stringindexer_transform": 7.0, "review_description_stringindexer_transform": 382.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 388.0, "uniq_id_stringindexer_transform": 37.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "53", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "SamuraiMatt", "review_title": "Tank Yoshi and the layered egg aiming", "review_description": "Fun and cute, but some of the mechanics don't work that well (Tank Yoshi and the mutil-layer egg aiming). Still fun, but needs improvement in the mentioned areas. See Caddicarus' analysis.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127396175", "uniq_id": "c74037cf-5c28-5aa1-894a-c9abd50cdc79", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 334.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 197.0, "review_title_stringindexer_transform": 81.0, "review_description_stringindexer_transform": 228.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 207.0, "uniq_id_stringindexer_transform": 288.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "54", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "DKCBatch", "review_title": "Yoshi's Crafted World", "review_description": "It's awesome! The graphics make everything look like cardboard!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127396143", "uniq_id": "ab03b0d3-cc3b-5cf9-9894-200631099bb4", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 228.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 334.0, "review_title_stringindexer_transform": 6.0, "review_description_stringindexer_transform": 207.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 221.0, "uniq_id_stringindexer_transform": 275.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "55", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "VileMKII", "review_title": "Good", "review_description": "Fun title that is a good installment to the series. A little bit easy to beat, but has plenty of extras to keep entertained while going for that 100%", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127359093", "uniq_id": "296f57cd-b10f-5bd0-8dd9-78048b7c2e37", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 124.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 158.0, "review_title_stringindexer_transform": 13.0, "review_description_stringindexer_transform": 128.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 104.0, "uniq_id_stringindexer_transform": 330.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "56", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "LRoberto", "review_title": "Super awesome", "review_description": "This game was fir my youngest, he picked it out from good reviews online.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127348302", "uniq_id": "667613eb-326c-5e9c-a48d-bdd2461a770c", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 122.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 349.0, "review_title_stringindexer_transform": 314.0, "review_description_stringindexer_transform": 267.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 133.0, "uniq_id_stringindexer_transform": 218.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "57", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Philliptate7", "review_title": "1 or 2 player fun!", "review_description": "It can be 1 or 2 players. It\u2019s pretty simple mechanics, but there are so many creative was to use them. And there is a lot of replay ability. Me and wife have a blast.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127348104", "uniq_id": "603d6f26-ffc4-5059-8cd8-ed6ddd671e63", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 240.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 75.0, "review_title_stringindexer_transform": 35.0, "review_description_stringindexer_transform": 335.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 12.0, "uniq_id_stringindexer_transform": 100.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "58", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Toxicbug", "review_title": "Game play", "review_description": "It\u2019s a game that\u2019s for kids and for adults to enjoy", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127347414", "uniq_id": "7e989ba1-5dbc-561a-b719-01ed3cda849b", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 321.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 274.0, "review_title_stringindexer_transform": 248.0, "review_description_stringindexer_transform": 124.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 257.0, "uniq_id_stringindexer_transform": 57.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "59", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bardot", "review_title": "Love It", "review_description": "Purchased this TV a couple of weeks ago as my existing TV was 10+ years old and needed an upgrade.  Had a salesman take the time to show me the differences between an OLED and other projection systems.  Couldn't be happier with the picture that I am not experiencing.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228719614", "uniq_id": "4f131751-4d8a-5bfd-af50-9d2ce3dd046a", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 200.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 170.0, "review_title_stringindexer_transform": 209.0, "review_description_stringindexer_transform": 384.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 173.0, "uniq_id_stringindexer_transform": 268.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "60", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "tackomoto", "review_title": "Fun repeat play factor", "review_description": "My wife loves it. She even lets me play the co-op mode with her sometimes. I\u2019m not that into gaming, but this game is really fun!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127345863", "uniq_id": "8cbb57c6-0882-59dd-af92-73b57a213812", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 292.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 211.0, "review_title_stringindexer_transform": 254.0, "review_description_stringindexer_transform": 325.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 172.0, "uniq_id_stringindexer_transform": 299.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "61", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bob81", "review_title": "Outstanding!", "review_description": "This OLED is Excellent, Very Easy to Operate. I imagine that Someone may Complain but I am certain that it will be a Tribal thing.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228712408", "uniq_id": "86570fa2-2141-573f-93ea-6368fedc9d0d", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 145.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 224.0, "review_title_stringindexer_transform": 37.0, "review_description_stringindexer_transform": 161.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 208.0, "uniq_id_stringindexer_transform": 15.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "62", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Porkchop76", "review_title": "Deep blacks", "review_description": "Great tv. I like the vizio apps.the sound is nothing special but if you are buying an OLED you probably have another option. The best part is the deep true black. The colors are very vibrant. I am very satisfied.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228703343", "uniq_id": "a3955d77-2dea-561b-823c-41bc60377780", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 59.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 186.0, "review_title_stringindexer_transform": 155.0, "review_description_stringindexer_transform": 51.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 200.0, "uniq_id_stringindexer_transform": 163.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "63", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bino7899", "review_title": "Great TV for the price", "review_description": "Has some bugs and I know Vizio will work on them a little faster. Especially with the new Xbox series x and ps5. Other than that can\u2019t beat the price for an Oled TV. Great picture. Now Vizio please get the VRR @ 4K120 to work and give us the option to change all picture setting in game mode. No settings should be blanked out.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228692495", "uniq_id": "9e0d282d-056f-55c9-a62d-13e79bbb844c", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 450.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 342.0, "review_title_stringindexer_transform": 330.0, "review_description_stringindexer_transform": 134.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 332.0, "uniq_id_stringindexer_transform": 368.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "64", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Doblado98", "review_title": "Amazing tv", "review_description": "I bought this for my birthday and it has been amazing!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 330.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 404.0, "review_title_stringindexer_transform": 143.0, "review_description_stringindexer_transform": 366.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Wonderful OLED TV\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "11 months ago", "review_description": "5", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "228691813", "not_helpful_count": "865fb1f7-9fbc-5ec8-89fb-868f67495019", "reviewed_at": "16/01/2022 16:17:57", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 141.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 9.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 31.0, "not_helpful_count_stringindexer_transform": 43.0, "reviewed_at_stringindexer_transform": 23.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "65", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Super Awesome!", "review_title": "Great features!", "review_description": "I love the tv and everything about it. I am a big fan of Vizio TVs, except for the sound, you will need a soundbar.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228632763", "uniq_id": "ee801ec0-c5cf-5655-8498-a9770f1a6921", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 238.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 263.0, "review_title_stringindexer_transform": 206.0, "review_description_stringindexer_transform": 97.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 295.0, "uniq_id_stringindexer_transform": 75.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "66", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "jpc3", "review_title": "Great price, Vizio is a reliable brand", "review_description": "All my Vizio TVs have held up under use. Hoping the new OLEDs will get firmware updates and continue to make this TV great now and in the future", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228622725", "uniq_id": "4ef37b88-1ab9-5d98-adfd-5a7790b9cdfc", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 30.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 373.0, "review_title_stringindexer_transform": 57.0, "review_description_stringindexer_transform": 319.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 175.0, "uniq_id_stringindexer_transform": 156.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "67", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Terry T.", "review_title": "Good TV for the Price but has some issues", "review_description": "Very good OLED tv for the price but it does have some issues with powering on.  If you leave it idle for too long it will \u201cgo to sleep\u201d and the only way to cut it back on is to power cycle.  Other than that I love it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228576384", "uniq_id": "232f5009-6c44-540a-9e7a-040e815522eb", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 10.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 400.0, "review_title_stringindexer_transform": 60.0, "review_description_stringindexer_transform": 359.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 392.0, "uniq_id_stringindexer_transform": 303.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "68", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Canothegreat", "review_title": "Beautiful oled screen", "review_description": "Beautiful screen! Awesome price but full of bugs. On my set had to constantly unplug my tv from the  power supply to get it to come on. Worked well with my xbox series x just a few glitches here and there. No 4k 120 for the ps5 so I had to use the 4k 60 hdmi slot. I feel this tv is still in beta and needs alot of firmware updates to address system performance issues.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "2", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228545194", "uniq_id": "bb5c5e36-48cd-533e-8b32-ac1840944224", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 142.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 102.0, "review_title_stringindexer_transform": 24.0, "review_description_stringindexer_transform": 232.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 248.0, "uniq_id_stringindexer_transform": 13.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "69", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "shane19", "review_title": "Looks great!", "review_description": "I bought this tv because I wanted to try out OLED for the first time. I\u2019m glad I bought it. The colors and contrast are on point. The price compared to the competition in the same category can\u2019t be beat. Super happy.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228523449", "uniq_id": "ce94d9a4-0183-5315-8521-941c99a5aa68", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 308.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 5.0, "review_title_stringindexer_transform": 385.0, "review_description_stringindexer_transform": 372.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 296.0, "uniq_id_stringindexer_transform": 371.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "70", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "R Robles", "review_title": "Best Controller!", "review_description": "Everything I wanted from a controller, in an amazing custom paint job!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192040841", "uniq_id": "0fcf6665-8e4c-55e5-8723-8ea686ad425a", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 365.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 160.0, "review_title_stringindexer_transform": 98.0, "review_description_stringindexer_transform": 415.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 333.0, "uniq_id_stringindexer_transform": 266.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "71", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "IanMan141", "review_title": "Elite  Series 2 Halo Wireless Controller", "review_description": "The design is very remarkable great addition to the collection of Halo Series X Console Bundle it a must have.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192039616", "uniq_id": "524f0643-9cda-5306-81ab-277f533b47da", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 239.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 401.0, "review_title_stringindexer_transform": 63.0, "review_description_stringindexer_transform": 416.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 336.0, "uniq_id_stringindexer_transform": 310.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "72", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Best Controller", "review_description": "I love the pro controller and this one is absolutely beautiful. Must buy", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192038437", "uniq_id": "fd3b358c-a67f-5475-a1cd-04c862f97b4e", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 189.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 11.0, "review_description_stringindexer_transform": 414.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 291.0, "uniq_id_stringindexer_transform": 297.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "73", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Gaming reviews6", "review_title": "Amazing", "review_description": "Works good its perfect for people who game hard-core because it don't ware out as fast and last a long time cheaply priced perfect for your gaming set up!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "1", "not_helpful_count": "6", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191969147", "uniq_id": "aed215bd-32e5-5577-be72-8fe1a4273d12", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 41.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 397.0, "review_title_stringindexer_transform": 21.0, "review_description_stringindexer_transform": 423.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 4.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 315.0, "uniq_id_stringindexer_transform": 388.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "74", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "twojoesf", "review_title": "Great looking controller!", "review_description": "I love the classic colors of master Chief! Looks great with my Halo Theme Xbox!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "5", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191868187", "uniq_id": "87901149-9f7d-5db6-9c6b-7f516bda5b83", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 461.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 283.0, "review_title_stringindexer_transform": 285.0, "review_description_stringindexer_transform": 104.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 14.0, "not_helpful_count_stringindexer_transform": 6.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 91.0, "uniq_id_stringindexer_transform": 59.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "75", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Marco AP", "review_title": "Buttons don\u2019t register", "review_description": "AXYB buttons do no register unless they are 100% fully pressed in. Annoying there is no pressure sensitivity!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "18", "reviewed_at": "1 month ago", "rating": "1", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191531039", "uniq_id": "db0b55df-7fd4-5d5c-90d3-eac2b049be4c", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 340.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 152.0, "review_title_stringindexer_transform": 312.0, "review_description_stringindexer_transform": 85.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 5.0, "not_helpful_count_stringindexer_transform": 41.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 128.0, "uniq_id_stringindexer_transform": 16.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "76", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "I own this", "review_title": "Excellent controller", "review_description": "This no longer available item is excellent and you should buy one, but you can\u2019t.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "41", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191517192", "uniq_id": "c026bcd2-f440-5b87-95d0-a9dbdd87d4fe", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 220.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 72.0, "review_title_stringindexer_transform": 168.0, "review_description_stringindexer_transform": 286.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 44.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 280.0, "uniq_id_stringindexer_transform": 348.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "77", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Fa crediblenick", "review_title": "Awesome controller", "review_description": "Great controller love the way it feels and all the little halo touches it has.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "4", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191510980", "uniq_id": "0d5805fa-77a0-581e-9f6a-b5441020925d", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 70.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 352.0, "review_title_stringindexer_transform": 205.0, "review_description_stringindexer_transform": 255.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 5.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 340.0, "uniq_id_stringindexer_transform": 229.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "78", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "516", "review_title": "Solid controller", "review_description": "So far I love the feel and look of this controller. Need to wait and see how the grips hold up to give it a 5 star rating.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "4", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191473354", "uniq_id": "20b6e8de-5239-5339-97cd-f4a96cf19873", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 49.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 127.0, "review_title_stringindexer_transform": 75.0, "review_description_stringindexer_transform": 208.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 5.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 9.0, "uniq_id_stringindexer_transform": 215.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "79", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "M4lmx81", "review_title": "This is awesome design", "review_description": "I was lucky to cop a limited edition elite controller  waiting for halo campaign to used", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "3", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191467877", "uniq_id": "d7a8c6c4-234e-5c12-a8d0-af859409bd8a", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 175.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 39.0, "review_title_stringindexer_transform": 306.0, "review_description_stringindexer_transform": 53.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 7.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 237.0, "uniq_id_stringindexer_transform": 172.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "80", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "NicoleD90", "review_title": "Awesome!", "review_description": "This game has amazing graphics and amazing levels.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127345574", "uniq_id": "09c6537e-9796-5aca-a264-354c489b7706", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 254.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 205.0, "review_title_stringindexer_transform": 18.0, "review_description_stringindexer_transform": 42.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 358.0, "uniq_id_stringindexer_transform": 173.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "81", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "MDB3", "review_title": "Family time", "review_description": "It fun for your family and if you have kids they will enjoy hours of fun", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127333838", "uniq_id": "b6dae06e-562f-5f67-b905-6a267a1b3147", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 376.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 208.0, "review_title_stringindexer_transform": 183.0, "review_description_stringindexer_transform": 24.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 299.0, "uniq_id_stringindexer_transform": 31.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "82", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Bigbadbarry", "review_title": "Yoshi Fun!", "review_description": "I loved the Yoshi yarn game on the 3DS & I love the New Yoshi Yarn game on the switch.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 264.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 365.0, "review_title_stringindexer_transform": 194.0, "review_description_stringindexer_transform": 344.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "More color Yoshi\u2019s to choose from and a forward and backwards game in every course. It\u2019s a lovable game to play!\"", "name": "No: I don\u2019t recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "127332001", "not_helpful_count": "0a5b2e83-abcb-5537-a109-15a4b8c4f86d", "reviewed_at": "16/01/2022 16:17:58", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 382.0, "name_stringindexer_transform": 8.0, "brand_stringindexer_transform": 8.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 2.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 3.0, "verifed_purchaser_stringindexer_transform": 3.0, "helpful_count_stringindexer_transform": 30.0, "not_helpful_count_stringindexer_transform": 30.0, "reviewed_at_stringindexer_transform": 10.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "83", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Scott79rod", "review_title": "Awesome", "review_description": "Great game love every minute of it fun and entertaining", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127321759", "uniq_id": "6ff43da6-1ce0-54d4-9080-221feba20bd8", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 166.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 14.0, "review_title_stringindexer_transform": 8.0, "review_description_stringindexer_transform": 400.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 93.0, "uniq_id_stringindexer_transform": 250.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "84", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "BubbaHero4All", "review_title": "Great game!", "review_description": "Excellent condition. Awesome game. My fiance is enjoying it a lot.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127320268", "uniq_id": "9dc8e634-e9bc-584c-b64b-bb39c8f54fce", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 38.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 183.0, "review_title_stringindexer_transform": 334.0, "review_description_stringindexer_transform": 182.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 222.0, "uniq_id_stringindexer_transform": 323.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "85", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Diana finley", "review_title": "Yoshi's crafted world", "review_description": "One of the best games I've played in a while absolutely beautiful \u2764\ufe0f", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127319595", "uniq_id": "3025b560-5f5b-560b-9b15-d3c2ed1468b0", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 469.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 181.0, "review_title_stringindexer_transform": 14.0, "review_description_stringindexer_transform": 308.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 310.0, "uniq_id_stringindexer_transform": 326.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "86", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "HeliosExe", "review_title": "gud", "review_description": "10/10, it is a very creative, thinking out of the box game, it might be a bit easy, but it is fun to and I will 100% it even if it's the last thing I do.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127299640", "uniq_id": "2dee6b9f-1dd6-500a-9518-e48555992512", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 371.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 166.0, "review_title_stringindexer_transform": 277.0, "review_description_stringindexer_transform": 332.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 110.0, "uniq_id_stringindexer_transform": 83.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "87", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "platygirl", "review_title": "Yoshi's Crafted World... Buy it TODAY", "review_description": "OMG, this is the ultimate of fun, silly, fantasy escapism. Sit back, relax, and give yourself an hour to let Yoshi explore the hand-made world of tape, cardboard, and pipe cleaners", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127295961", "uniq_id": "348d2ec6-347b-50e5-9fe8-388a58176915", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 203.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 122.0, "review_title_stringindexer_transform": 327.0, "review_description_stringindexer_transform": 363.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 383.0, "uniq_id_stringindexer_transform": 120.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "88", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "2-Apr", "review_title": "Classic", "review_description": "Takes me back to the 90's. Thank you Nintendo! and thank you GameStop for always having great prices and what I want in stock!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127293457", "uniq_id": "de401188-0285-5ddd-93d8-f84f18f155e2", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 68.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 144.0, "review_title_stringindexer_transform": 357.0, "review_description_stringindexer_transform": 231.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 74.0, "uniq_id_stringindexer_transform": 366.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "89", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Candice S", "review_title": "Yoshi's crafted world is fun", "review_description": "really cute game and its pretty easy for the non gamer . its great to have a son who can help you too", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127293081", "uniq_id": "6879d252-929f-560d-a2f6-c29114a460cf", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 32.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 230.0, "review_title_stringindexer_transform": 237.0, "review_description_stringindexer_transform": 268.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 231.0, "uniq_id_stringindexer_transform": 135.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "90", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Woodbine23", "review_title": "Excellent product", "review_description": "I purchased several television and soundbars from Vizio from the M series and the SB38", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228523275", "uniq_id": "065df515-c00f-5674-8005-0e71aac9b6cc", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 87.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 128.0, "review_title_stringindexer_transform": 20.0, "review_description_stringindexer_transform": 190.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 267.0, "uniq_id_stringindexer_transform": 21.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "91", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Maximus", "review_title": "Awesome Features!", "review_description": "I purchased this OLED over a week ago along with the Vizio Elevate Soundbar for my new Xbox Series X. I truly appreciate the picture quality experience that this TV can offer. The performance of this TV and Soundbar surely surpass its price point. I strongly recommend this TV for anyone that wants the best performance for the money. I will dare to say that based on my research, this TV will absolutely rival other brands at much more expensive price points.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228509090", "uniq_id": "7b762f11-3f30-5648-898e-b365a7eaedd8", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 467.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 362.0, "review_title_stringindexer_transform": 61.0, "review_description_stringindexer_transform": 338.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 304.0, "uniq_id_stringindexer_transform": 316.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "92", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Pat23", "review_title": "Buggy like no tomorrow", "review_description": "I had purchased this knowing it was going to not be perfect but omg. I had to go in and change my ps4 setting for video to even use the menu settings at all. I also cannot use netflix, it won't open from smartcast but when I press the button on the remote it freezes the whole tv on a black screen. This is a serious deal breaking bug.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228499139", "uniq_id": "df5e5870-c422-5585-9dbd-2f01e48ee872", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 404.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 129.0, "review_title_stringindexer_transform": 176.0, "review_description_stringindexer_transform": 283.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 260.0, "uniq_id_stringindexer_transform": 86.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "93", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "woodbine23", "review_title": "Excellent product", "review_description": "I purchased this a week ago and so far so good it's to early to make a define decision.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228478134", "uniq_id": "b9a43399-3aea-58dc-b1c2-96e5bab6e7f4", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 20.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 195.0, "review_title_stringindexer_transform": 20.0, "review_description_stringindexer_transform": 224.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 318.0, "uniq_id_stringindexer_transform": 22.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "94", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Rajib", "review_title": "Almost but not quite", "review_description": "I wanted to buy this for long but I am a bit disappointed. I guess my expectations were high but not really sky high.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 165.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 15.0, "review_title_stringindexer_transform": 290.0, "review_description_stringindexer_transform": 76.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Pros:", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 363.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "1. The picture is absolutely gorgeous and you can tune it further to your choice.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 309.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "2. The Smartcast interface is decent.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 332.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "3. The remote is also not bad at all.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 158.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "4. Very quick to connect apple play. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 364.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "5. There are ample connection options for my bedroom", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 204.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Cons:", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 107.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "1. Cast is buggy. I can never get it to run first time. This is where I would focus most of the development time if I were Vizio.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 181.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "2. Smart Cast does not have a browser app that is accessible easily.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 119.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "3. There is no easy way to add more apps that are not already in the Vizio library.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 195.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "4. The detail picture quality will not go up to the level you get out of a top line OLED. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 420.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "5. The bezel is still not near zero bezel size. It is sizable to be noticeable.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 3.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Overall", "name": " for the price it is a good deal.\"", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "0", "review_title": "0", "review_description": "11 months ago", "recommended_review": "4", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "228476168", "reviewed_at": "cec7afe6-497f-5ac5-a9c8-b1ca19d4a4b0", "rating": "16/01/2022 16:17:58", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 0.0, "name_stringindexer_transform": 25.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 226.0, "recommended_review_stringindexer_transform": 5.0, "verifed_purchaser_stringindexer_transform": 4.0, "helpful_count_stringindexer_transform": 4.0, "not_helpful_count_stringindexer_transform": 26.0, "reviewed_at_stringindexer_transform": 43.0, "rating_stringindexer_transform": 12.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "95", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "zachR", "review_title": "Great Clarity, Very Very buggy software.", "review_description": "The Best: The TV offers great contrast and clarity. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 317.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 123.0, "review_description_stringindexer_transform": 388.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The Good: Smart casting features. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 5.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The Bad: Pre-calibrations could improve", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 305.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "THE UGLY: Very Very buggy software. Doesn't start a lot of times and have to re-plug many times. Brings me Anxiety.\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "11 months ago", "review_description": "4", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "228459804", "not_helpful_count": "c0fef563-2deb-5c01-acc6-9db6c6fa8368", "reviewed_at": "16/01/2022 16:17:58", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 295.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 9.0, "review_description_stringindexer_transform": 2.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 12.0, "not_helpful_count_stringindexer_transform": 14.0, "reviewed_at_stringindexer_transform": 10.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "96", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "KristovM", "review_title": "Gorgeous screen with a few quirks", "review_description": "This screen is a beauty. Very sharp, good colors and decent brightness. I hook it up to my PC for gaming and occasionally have some quirks. In the middle of a game it says no signal detected and shuts off. Sometimes it isn't detected by the PC. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 307.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 153.0, "review_title_stringindexer_transform": 296.0, "review_description_stringindexer_transform": 367.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "A few quirks with the PS5 too. Sometimes when I power on the TV it also turns on the PS5. Sometimes when I power on the PS5 the TV turns on too. Neither seems to be consistent. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 248.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Needs and HBO Max app. Also needs to be able to disable inputs from the list like in previous Vizio models. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 63.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "All minor issues and possibly handled via software or firmware updates. The hardware is solid though.\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "11 months ago", "review_description": "4", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "228397838", "not_helpful_count": "15bc27e2-a5ad-5a18-b47e-5f4cd100907c", "reviewed_at": "16/01/2022 16:17:58", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 212.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 9.0, "review_description_stringindexer_transform": 2.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 19.0, "not_helpful_count_stringindexer_transform": 17.0, "reviewed_at_stringindexer_transform": 10.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "97", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "goobs150", "review_title": "Vizio OLED TV", "review_description": "I bought this 2 weeks ago and has a great picture. It is good for gaming on the xbox series one. The only issue is the VRR does not work and has a distorted picture when I enable it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228397787", "uniq_id": "e3d25147-7e31-5ade-b955-8c6c07276063", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 427.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 180.0, "review_title_stringindexer_transform": 136.0, "review_description_stringindexer_transform": 107.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 109.0, "uniq_id_stringindexer_transform": 222.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "98", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "sftaylor614", "review_title": "Love / Hate Relationship", "review_description": "I love the pristine picture, with saturated accurate colors. However, I absolutely hate not being able to turn off the fluctuating luminance. The only thing that spoils a great review is the brightness that changes with how dark the screen is to increase contrast. The TV does not need it, and if I knew who the engineer was that omitted the off selection for this annoyance, I would offer him a Vizio necklace.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228341387", "uniq_id": "37ab8cbb-cbe6-5514-bb5a-3223ae898d16", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 6.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 220.0, "review_title_stringindexer_transform": 174.0, "review_description_stringindexer_transform": 239.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 347.0, "uniq_id_stringindexer_transform": 259.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "99", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Johnboi781", "review_title": "Excellent tv great picture", "review_description": "The only issue I have is. I own both ps5 and xbox series x and if I use hdmi ports 2 and 3 4k 120hz I have to unplug the tv every time I turn the tv on I worked around this by using ports 1 and 4 so I'm stuck at 4k 60hz on both consoles unless I want to constantly unplug the tv for it to work but over all I love the oled tv and you have to get a polarized power cable because vizio gives you a non polarized power cable that does not fit the TV power port", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228321620", "uniq_id": "156a2f4b-a3ee-5a50-8bf2-f2311c908491", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 157.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 179.0, "review_title_stringindexer_transform": 173.0, "review_description_stringindexer_transform": 413.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 384.0, "uniq_id_stringindexer_transform": 130.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "100", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Harbinger86", "review_title": "Love it", "review_description": "Great item and excellent condition. Works awesome!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191464723", "uniq_id": "3da6f23f-4693-549c-9b9f-0faa66b56124", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 57.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 293.0, "review_title_stringindexer_transform": 28.0, "review_description_stringindexer_transform": 14.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 352.0, "uniq_id_stringindexer_transform": 301.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "101", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Incredible controller!", "review_description": "Very cool design, feels great and comfortable in my hands.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191463669", "uniq_id": "66f84845-97c8-5cca-8bf1-4cc4cdfceead", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 412.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 226.0, "review_description_stringindexer_transform": 78.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 345.0, "uniq_id_stringindexer_transform": 140.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "102", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Halo Infinite Elite Series 2 Controller", "review_description": "This Halo Infinite Elite Series 2 controller is so awesome with the Halo theme on it, it's beautiful.  Being able to customize the controller to my liking ranging from the controller sticks, d-pad, and how short you want your trigger throw is freaking amazing compared to a normal controller.  Only con is that it's expensive, but once you open up the whole package and unboxing experience it is well worth the price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "28", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191462968", "uniq_id": "8a38edf4-1d13-54d2-a32c-f98303cbd0ac", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 304.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 140.0, "review_description_stringindexer_transform": 379.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 32.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 353.0, "uniq_id_stringindexer_transform": 334.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "103", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "King TJ 09", "review_title": "Halo lovers & competitive players dream", "review_description": "Packaging was 5 stars alone but the feel and customizability of the control and the design made it over the top and it came with the full game download", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191459315", "uniq_id": "b25ea776-319f-5907-bb36-8330e0b9e736", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 187.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 25.0, "review_title_stringindexer_transform": 370.0, "review_description_stringindexer_transform": 59.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 279.0, "uniq_id_stringindexer_transform": 345.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "104", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Biobroly24", "review_title": "Xbox elite series 2", "review_description": "Love this controller glad GameStop pro was lookin out and it came in a decent time", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191448343", "uniq_id": "b7379f49-dc90-56f4-8823-769c4832168b", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 85.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 250.0, "review_title_stringindexer_transform": 139.0, "review_description_stringindexer_transform": 16.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 79.0, "uniq_id_stringindexer_transform": 333.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "105", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Microsoft Elite 2 Pro Controller Halo Edition", "review_description": "The Microsoft Elite 2 Pro Controller is perfect for the console gamer of any level. The fact that it\u2019s the Halo Edition makes it that much better! I love the controller and I\u2019m glad they came out with this limited edition.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191443448", "uniq_id": "92468c29-d5fb-59dc-a142-1e67d15d1ee1", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 449.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 147.0, "review_description_stringindexer_transform": 313.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 259.0, "uniq_id_stringindexer_transform": 199.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "106", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Beautiful controller", "review_description": "This is a piece of art, amazing!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191440654", "uniq_id": "81bfcb3b-43a9-55da-84ca-2712183f9869", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 258.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 153.0, "review_description_stringindexer_transform": 113.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 155.0, "uniq_id_stringindexer_transform": 200.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "107", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Killerxxx08", "review_title": "Amazing!", "review_description": "Very well design and heavy feeling, it truly makes you feel like you have a better-quality controller compared to the regular Xbox Series X controller. Would recommend to any gamer specially Halo fan!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439900", "uniq_id": "77925e75-8d4b-5970-9020-ddd3517955c7", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 146.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 174.0, "review_title_stringindexer_transform": 7.0, "review_description_stringindexer_transform": 309.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 75.0, "uniq_id_stringindexer_transform": 148.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "108", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Parker86", "review_title": "Worth every penny.", "review_description": "This was my first elite controller and I love it, it\u2019s definitely a game changer and looks beautiful.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439828", "uniq_id": "22f370a8-e30f-5cea-9d38-0d7b9da2fd0b", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 244.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 371.0, "review_title_stringindexer_transform": 260.0, "review_description_stringindexer_transform": 371.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 327.0, "uniq_id_stringindexer_transform": 195.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "109", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "It's alright", "review_description": "The controller is great but I am experiencing stick drift just two days after receiving it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439957", "uniq_id": "3c5e7a8f-7138-5143-a3dd-81d9f2bf87e6", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 350.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 51.0, "review_description_stringindexer_transform": 230.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 379.0, "uniq_id_stringindexer_transform": 292.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "110", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "PUGLOVERRG", "review_title": "Yoshi's Crafted World", "review_description": "Awesome, love this character! Love the whole game!!!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127291762", "uniq_id": "77005922-343e-5afd-8604-de6116cb0a81", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 77.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 253.0, "review_title_stringindexer_transform": 6.0, "review_description_stringindexer_transform": 254.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 177.0, "uniq_id_stringindexer_transform": 241.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "111", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Kamna", "review_title": "Easy to pick up, hard to master", "review_description": "Excellent for a relaxing time. Can be challenging if you want to %100 every level.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127286343", "uniq_id": "ead016dd-471c-550c-8335-e80ade7ecbb9", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 303.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 398.0, "review_title_stringindexer_transform": 108.0, "review_description_stringindexer_transform": 165.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 134.0, "uniq_id_stringindexer_transform": 318.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "112", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Natees", "review_title": "Fun new twist on a Yoshi", "review_description": "Fun and exciting game if you like Yoshi and his classic games", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127272761", "uniq_id": "3f2ea70f-6737-57b4-bbff-c6b5af771f90", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 188.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 289.0, "review_title_stringindexer_transform": 252.0, "review_description_stringindexer_transform": 82.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 66.0, "uniq_id_stringindexer_transform": 78.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "113", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Nate Corneliusen", "review_title": "Yoshi's Crafted World", "review_description": "The game is adorable, the music isn't ear-splitting, and the levels themselves are fun. However, it ends up becoming a chore if you intend to 100% the game with multiple scavenger hunts per stage with a flip-side that is dedicated to finding three dogs under a certain amount of time for the full reward. Ultimately, it's cute and full of heart, but is not recommended to just sit down and 100% in one sitting. It's quick, easy fun enjoyable in small bursts either alone or with a friend.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127262343", "uniq_id": "14829c73-4cad-510d-9d51-01ef577acadf", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 7.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 213.0, "review_title_stringindexer_transform": 6.0, "review_description_stringindexer_transform": 111.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 82.0, "uniq_id_stringindexer_transform": 144.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "114", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Racheljay11", "review_title": "It\u2019s okay", "review_description": "I\u2019m not a big gamer. I was so excited when this came out I had to get it. I guess I just expected more", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127260250", "uniq_id": "fe7a0330-a5dd-530e-9497-80d37d07253b", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 432.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 207.0, "review_title_stringindexer_transform": 133.0, "review_description_stringindexer_transform": 368.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 370.0, "uniq_id_stringindexer_transform": 155.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "115", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "D3vonator", "review_title": "A Unique 3D Adventure that's hard to resist", "review_description": "Nostalgically entertaining and unique 3D adventure that will make it hard for you to put the controller down", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127259475", "uniq_id": "e59c376b-a912-50c5-9d04-8f7f3e7a6d45", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 342.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 252.0, "review_title_stringindexer_transform": 335.0, "review_description_stringindexer_transform": 343.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 193.0, "uniq_id_stringindexer_transform": 54.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "116", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Vegas momma", "review_title": "Cute Yoshi game", "review_description": "Bought this game for my 12 yr old's birthday.  He really likes to play in multiplayer mode with me.  Definitely fun bonding time!  So far it has been fairly easy to finish each section, without being too easy (working together helps).  I do hope it gets a little harder as we get a little further in.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127254841", "uniq_id": "5104f652-46d7-5b1e-bdf2-55b7f55d4b22", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 218.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 137.0, "review_title_stringindexer_transform": 300.0, "review_description_stringindexer_transform": 210.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 213.0, "uniq_id_stringindexer_transform": 76.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "117", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Henrio", "review_title": "Not bad", "review_description": "Good to see Yoshi on the switch, but it is a slight step down from Yoshi\u2018s woolly world", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127250995", "uniq_id": "780060a5-4afc-5712-9c61-66c3df2f51ff", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 100.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 11.0, "review_title_stringindexer_transform": 12.0, "review_description_stringindexer_transform": 79.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 268.0, "uniq_id_stringindexer_transform": 101.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "118", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jeefly", "review_title": "A wonderful game", "review_description": "Truly amazing. The art style is unique and the gameplay is equally fun as it is relaxing and rewarding.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127250993", "uniq_id": "333d879a-9b72-50d3-a5d7-faa0961846ca", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 396.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 193.0, "review_title_stringindexer_transform": 298.0, "review_description_stringindexer_transform": 41.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 192.0, "uniq_id_stringindexer_transform": 160.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "119", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "BoJackson87", "review_title": "Yoshi", "review_description": "I got this game so me and my gf can play together. Its fun and quirky but gets challenging", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127250112", "uniq_id": "41044c39-03df-5ca0-b0da-9219160fa67b", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 489.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 270.0, "review_title_stringindexer_transform": 15.0, "review_description_stringindexer_transform": 84.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 196.0, "uniq_id_stringindexer_transform": 126.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "120", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "tankgod1", "review_title": "Great Game!", "review_description": "Some folks didn't like this game....thought it didn't measure up to the original or Forged Alliance. Boy, are they wrong! I thought this game was great! Maybe the tech tree is a tiny bit smaller, but the game more than makes up for it with new, cool units, great graphics and effects, and awesome explosions. In fairness, I was a little perturbed that that more than one engineer cannot build on the same structure, as in the previous games, but then again, the structures go up pretty quick. Happy hunting!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "4", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "38246272", "uniq_id": "c64a9e38-39cc-50ef-9d30-1eed268a4a24", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 14.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 383.0, "review_title_stringindexer_transform": 16.0, "review_description_stringindexer_transform": 212.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 39.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 368.0, "uniq_id_stringindexer_transform": 376.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "121", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "16nflp", "review_title": "Great game.", "review_description": "Great game. Nothing bad about it. It has many great features and story mode is cool. I think it is awesome.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "23501684", "uniq_id": "8e31a70f-17f9-53d5-9f0f-3b578d7433e8", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 65.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 67.0, "review_title_stringindexer_transform": 318.0, "review_description_stringindexer_transform": 162.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 16.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 359.0, "uniq_id_stringindexer_transform": 145.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "122", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Joey3245", "review_title": "Not as good as it looks", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "5", "reviewed_at": "9 years ago", "rating": "2", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "23367706", "uniq_id": "42674a2c-bab8-5cd9-b2f4-a5b33733beb4", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 300.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 333.0, "review_title_stringindexer_transform": 302.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 6.0, "reviewed_at_stringindexer_transform": 16.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 6.0, "uniq_id_stringindexer_transform": 11.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "123", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "chiknwingding", "review_title": "I don't see how people can't like it", "review_description": "This game, in my opinion, is WAAY better than C&C and is very good in gameplay and everything else. Some people say that he storyline is horrible, but that doesn't really effect me since I just play on the skirmish and online. The story line isn't really a big concern. I just play it when I'm bored.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "5", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "19236943", "uniq_id": "322502c8-f81a-51b5-b3bf-e6e61a83b045", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 134.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 125.0, "review_title_stringindexer_transform": 345.0, "review_description_stringindexer_transform": 375.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 6.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 9.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 52.0, "uniq_id_stringindexer_transform": 62.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "124", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "GeneralM99", "review_title": "Great...but...", "review_description": "The story is extremely slow and confusing until you get later into it. It forces you to play as a certain faction first, then another and end with the Cybrans. You should definitely try out the originals, they are ten times better then this. Overall, the gameplay is about the same as the last game, the graphics are much better and the sound and music is again amazing. However, the story development needs more work.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "19088941", "uniq_id": "c397a7c1-d874-554e-9004-4d7a2422f5d3", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 37.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 372.0, "review_title_stringindexer_transform": 73.0, "review_description_stringindexer_transform": 71.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 9.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 337.0, "uniq_id_stringindexer_transform": 102.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "125", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "fiddlegammer11", "review_title": "look out gamerz, here comez awsome", "review_description": "alright here comes the best game eva, anyway herz a shout out to all of the peeps that think this game is the best eva u rock 4 ur good reviews. anyway the graphics might not be as good as the first but the graphics to me doesn't matter at all since the campaign is awsome and a good storyline. along with the campaign the units and multiplayer maps and experimentals and ect. but i honestly i think the unit count is very low there should be a higher unit count because people have things to do units to make and probably alot of them too and places 4 them to go like in others bases and stuff.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "19030618", "uniq_id": "8e0bfb12-1204-59aa-ae95-fc75ec400ba0", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 406.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 139.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 155.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 9.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 286.0, "uniq_id_stringindexer_transform": 138.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "126", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Commando38", "review_title": "Best RTS game made so far", "review_description": "This game is the absolute best RTS game you can play. And I have played alot of RTS games, so I know what I'm talking about. This game has very good graphics, and they will be even more enjoyable the more you paly the game, considering that you notice things like shadows cast by the terrain, and details such as distortion coming out of a walkers exhaust pipes. This game also has an amazing command system. There are more controls and options you can use to make your army do anything imaginable. This game also includes extra experimental weapons, which they balanced much better than on the first one, and actually have a general purpose rather than to walk into the enemies base and kill. And most people have heard that the nukes on the second ones are pitiful compared to the first. The difference is that on the first one, it was a bright light and smoke covering a large area of the map. On this one, it might be only a little bit smaller, but it is insanely detailed, in the fact that an extremely large portion of the map gets lit up in red, and things are actually moving with the explosion as they would in real life. When it touches water it makes steam and jets it into the air, so nukes on this one are much more enjoyable to watch, regardless of what you've heard. All in all, 10 stars.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "6", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250428", "uniq_id": "c0b37854-ae65-508d-a8d8-05183e6ca822", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 268.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 377.0, "review_title_stringindexer_transform": 36.0, "review_description_stringindexer_transform": 168.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 7.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 365.0, "uniq_id_stringindexer_transform": 219.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "127", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "CoD4 Veteran 13", "review_title": "Awesome", "review_description": "I don't know why people don't like this game, because if you like real-time strategy or RTS, this is the game to get.                                                                                                                                                                                                      I usually only play online and play skirmishes to get better or if no one is as good as me because I can destroy anyone.                                                                                                                                                                                                  I am a veteran at Call of Duty Modern Warfare 1 and 2 so don't try and kill me or fight me.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "2", "not_helpful_count": "11", "reviewed_at": "11 years ago", "rating": "4", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250438", "uniq_id": "8af5ed1a-cca6-5a39-bcf8-bb9c25ec7806", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 235.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 370.0, "review_title_stringindexer_transform": 8.0, "review_description_stringindexer_transform": 407.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 20.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 53.0, "uniq_id_stringindexer_transform": 278.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "128", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "TheGamerGalore", "review_title": "good, but a little disappointed", "review_description": "What Gas Powered Games have done here is amazing, this game is packed with more units, new features, less glitches, and a lot more excitment. what i was really taken with is that there is no +mass or -mass anymore, its all based on real numbers. the tech tree feature is amazing, allowing you to upgrade old units to make them more lethal later in the game. a lot of the good things are still their like the cybran ships being able to crawl onto land. however, the story is disappointing, character extremely lack any sort of personality and emotions. also, for high end computers, this game has surprising lower graphics, units like the UEF titan look a little bit more like legos, even though some units have good deatil, others are flat out bad, although you have to appreciate that they are trying to let computers with lower hardware able to run this game. online play and skirmish mode are fun.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "11 years ago", "rating": "4", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250426", "uniq_id": "c5dd07cc-ca1f-52d8-82df-d13c4e129265", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 62.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 3.0, "review_title_stringindexer_transform": 214.0, "review_description_stringindexer_transform": 159.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 227.0, "uniq_id_stringindexer_transform": 191.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "129", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "agent00aa", "review_title": "SC2? or sometihng completely  different?", "review_description": "\"Supreme Commander 2 is different than it's \"\"predecessors\"\"", "recommended_review": " i say it should just have a completely different name slapped onto it. Then i would of not had any quarrels with it", "verifed_purchaser": " because i wouldn't be expecting something so different than what i knew. Now i own both of the \"\"previous\"\" games and they are both excellent", "helpful_count": " and so when i found out about this \"\"sequel\"\" i ran out and bought it with out much looking into it", "not_helpful_count": " i knew it had a different maker but i figured how bad could they have possibly made it... i mean it's Square Enix! Now don't get me wrong it is a good game", "reviewed_at": " but i was expecting to buy SC2... Not SC2 revamped... i couldn't just jump into it", "rating": " i had to learn the new feel to the game. In SC2 you now get to your good units by having to research most of them", "average_rating": " and experimental units are really not that great", "reviews_count": " yea they are all based of the old games models but i think that most kinda suck comparatively... like the experimental units", "comment_id": " for so called \"\"game breakers\"\" as they were know for in the old games", "uniq_id": " u can make them with very little ease and there not nearly as effective as they use to be.... which i guess is the trade off for it", "scraped_at": " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "index_stringindexer_transform": 439.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 13.0, "review_title_stringindexer_transform": 217.0, "review_description_stringindexer_transform": 45.0, "recommended_review_stringindexer_transform": 17.0, "verifed_purchaser_stringindexer_transform": 12.0, "helpful_count_stringindexer_transform": 16.0, "not_helpful_count_stringindexer_transform": 40.0, "reviewed_at_stringindexer_transform": 38.0, "rating_stringindexer_transform": 10.0, "average_rating_stringindexer_transform": 9.0, "reviews_count_stringindexer_transform": 8.0, "comment_id_stringindexer_transform": 331.0, "uniq_id_stringindexer_transform": 386.0, "scraped_at_stringindexer_transform": 15.0}, {"index": "130", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "jonso", "review_title": "Crafted Family Fun", "review_description": "2 player fun for dad and 10 year old. Replay value is high with extra modes after completion.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127238242", "uniq_id": "928838d7-ee40-5739-a91c-37320381b139", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 429.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 278.0, "review_title_stringindexer_transform": 291.0, "review_description_stringindexer_transform": 117.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 342.0, "uniq_id_stringindexer_transform": 349.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "131", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "KingEdd", "review_title": "He love it", "review_description": "My son been waiting on this game for a long time. But he got it now and he love it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127234219", "uniq_id": "0a0d4148-507a-575b-8ca1-9ce89095fc80", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 478.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 101.0, "review_title_stringindexer_transform": 231.0, "review_description_stringindexer_transform": 302.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 242.0, "uniq_id_stringindexer_transform": 394.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "132", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Ems C", "review_title": "Big replay value", "review_description": "I'm in love with everything from this game and I appreciate the replay value as well. You can go back to a level and find new tasks/goals", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127230795", "uniq_id": "f30f8cd1-56b3-5068-bcd7-d59438a6da70", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 93.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 414.0, "review_title_stringindexer_transform": 132.0, "review_description_stringindexer_transform": 201.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 182.0, "uniq_id_stringindexer_transform": 324.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "133", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Leon81", "review_title": "Retro", "review_description": "Brings back so many memories, I absolutely love this game.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127187464", "uniq_id": "caa8b6bd-4ca5-5ed9-b467-f4fc59e596ff", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 297.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 345.0, "review_title_stringindexer_transform": 95.0, "review_description_stringindexer_transform": 72.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 293.0, "uniq_id_stringindexer_transform": 372.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "134", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Kids love i", "review_title": "Kids love it", "review_description": "It actually looks crafty and there is so much to explore and you can", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 131.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 245.0, "review_title_stringindexer_transform": 52.0, "review_description_stringindexer_transform": 89.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Make", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 112.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Stuff in your house.\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "127185338", "not_helpful_count": "4a650967-e873-5e06-a3d0-81e9530e5a78", "reviewed_at": "16/01/2022 16:17:59", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 178.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 8.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 2.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 3.0, "verifed_purchaser_stringindexer_transform": 3.0, "helpful_count_stringindexer_transform": 33.0, "not_helpful_count_stringindexer_transform": 31.0, "reviewed_at_stringindexer_transform": 37.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "135", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Marshmilo", "review_title": "Yoshi's Crafted World", "review_description": "The cutesy graphics and creative levels definitely added to the child-like wonder and fun of the game. Even the creepier levels were cute, but still gave you goosebumps at the same time.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127183266", "uniq_id": "b6fc226c-c88b-5332-88db-545da41ae9b3", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 61.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 131.0, "review_title_stringindexer_transform": 6.0, "review_description_stringindexer_transform": 169.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 287.0, "uniq_id_stringindexer_transform": 355.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "136", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "makeshift SP", "review_title": "Awesome, Nothing too Over the top", "review_description": "I like the simple creativity, nothing too over the top just very creative. It\u2019s sort of too easy so it\u2019s something to pass time with. Overall a good purchase", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127179492", "uniq_id": "b0620603-ee01-512d-bdfe-b37993ab43ff", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 492.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 280.0, "review_title_stringindexer_transform": 283.0, "review_description_stringindexer_transform": 418.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 181.0, "uniq_id_stringindexer_transform": 73.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "137", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Marc reed", "review_title": "The game", "review_description": "Fun imaginative and challenging at times great deal of replay ability", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127178055", "uniq_id": "41b29280-1727-5bba-ac8a-17e914bd2d00", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 261.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 95.0, "review_title_stringindexer_transform": 358.0, "review_description_stringindexer_transform": 300.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 251.0, "uniq_id_stringindexer_transform": 99.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "138", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Kwoodky", "review_title": "Gotta get it!", "review_description": "Fantastic game! The level designs are inventive and memorable.  I haven't had this much fun with a game since the days of the NES/Genesis!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127177220", "uniq_id": "0efc324a-3a27-5e05-b98d-8cb6cd444775", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 226.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 74.0, "review_title_stringindexer_transform": 78.0, "review_description_stringindexer_transform": 137.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 27.0, "uniq_id_stringindexer_transform": 95.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "139", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Marieleisele", "review_title": "Great fun for everyone.", "review_description": "This game is so much fun.  You can easily run though a level or you can take your time and find all the hidden things.  I love to play it and so does my daughter!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127161458", "uniq_id": "3bfce4cc-4c76-5c78-bc93-d740963116f3", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 90.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 223.0, "review_title_stringindexer_transform": 62.0, "review_description_stringindexer_transform": 153.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 14.0, "uniq_id_stringindexer_transform": 82.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "140", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jb2827", "review_title": "Reasonable pricing, great OLED", "review_description": "I\u2019ve been very hesitant to upgrade to an OLED because I couldn\u2019t justify the cost. But when Vizio jumped into the OLED market, I was very excited. Other brands\u2019 \u201cbudget OLEDs\u201d cut corners, whereas Vizio\u2019s track record with reasonably priced premium TVs is outstanding.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 281.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 378.0, "review_title_stringindexer_transform": 221.0, "review_description_stringindexer_transform": 180.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The important thing you might not first look for in a TV is how black the blacks are", "name": " followed by how light the screen can be without a terrible contrast. This TV fit the bill for both. Also", "brand": " this TV is fully ready for the Max features of the Series X and PS5.", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 283.0, "name_stringindexer_transform": 11.0, "brand_stringindexer_transform": 12.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The only issue I have is the speakers leave a bit to be desired. They\u2019re ok", "name": " but if you want a theater experience", "brand": " buy a sound bar or speakers.\"", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "0", "review_description": "0", "recommended_review": "11 months ago", "verifed_purchaser": "5", "helpful_count": "4.2727", "not_helpful_count": "363", "reviewed_at": "228309057", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "16/01/2022 16:17:59", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 27.0, "name_stringindexer_transform": 35.0, "brand_stringindexer_transform": 10.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 3.0, "recommended_review_stringindexer_transform": 9.0, "verifed_purchaser_stringindexer_transform": 8.0, "helpful_count_stringindexer_transform": 9.0, "not_helpful_count_stringindexer_transform": 9.0, "reviewed_at_stringindexer_transform": 26.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 14.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "141", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TCTV", "review_title": "Very Nice", "review_description": "This is my 3rd Vizio TV. 1st OLED. They are all 5 star products!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228297521", "uniq_id": "b72f7138-db42-5954-9039-1eebfbe44ba6", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 89.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 214.0, "review_title_stringindexer_transform": 351.0, "review_description_stringindexer_transform": 205.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 240.0, "uniq_id_stringindexer_transform": 159.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "142", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Mofa", "review_title": "Awesome picture", "review_description": "Easy to set up, to program, and assemble. Smart TV is very convenient.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228244888", "uniq_id": "750791b6-adfe-5127-aa53-9a502824f996", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 23.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 46.0, "review_title_stringindexer_transform": 259.0, "review_description_stringindexer_transform": 278.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 366.0, "uniq_id_stringindexer_transform": 312.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "143", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Cat711", "review_title": "Great Picture", "review_description": "I bought this TV right before Thanksgiving and have enjoyed it ever since. I wanted a Smart TV and this did not disappoint. I bought a smaller one for my bedroom.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228226690", "uniq_id": "83cdeff3-bf81-5aab-a214-4f778969e26c", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 426.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 364.0, "review_title_stringindexer_transform": 55.0, "review_description_stringindexer_transform": 301.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 356.0, "uniq_id_stringindexer_transform": 314.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "144", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "FXDLS110", "review_title": "Picture is good, the firmware needs improvement", "review_description": "As the title states, the picture is good, as expected. The only downside so far is that there are SERIOUS handshaking issues between this tv and my PS5 console. Sometimes, Ive got a black screen, and must reboot the tv to get the PS5 display to come up. Also, the tv menu will lock you out of several key picture adjustments during PS5 use. With some adjustments to the firmware to fix these issues, this tv would be nearly perfect.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228181572", "uniq_id": "2f8a681e-1bd7-5a6c-a446-4ac731ed373b", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 202.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 17.0, "review_title_stringindexer_transform": 87.0, "review_description_stringindexer_transform": 200.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 276.0, "uniq_id_stringindexer_transform": 122.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "145", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "GASMAN", "review_title": "Really Good TV, I\u2019m not a gamer.", "review_description": "I haven\u2019t had an issue with this television like others. From what I have read, most issues are about gaming compatibility. 4.7 / 10", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228165736", "uniq_id": "ef6ab344-54b7-5244-a7be-81066f12b6ba", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 323.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 106.0, "review_title_stringindexer_transform": 193.0, "review_description_stringindexer_transform": 353.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 210.0, "uniq_id_stringindexer_transform": 271.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "146", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "ectaylo", "review_title": "Great Picture/Horrible Software", "review_description": "Severe Issues with settings. None remain when set, audio passthrough is a nightmare. Motion settings are impossible to turn off for all HDR formats. Doesn't handle 24p content well from anything other than blu-ray source.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "2", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228114419", "uniq_id": "d29dc126-1eca-5ed3-8156-9f4d98d42b09", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 494.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 354.0, "review_title_stringindexer_transform": 297.0, "review_description_stringindexer_transform": 184.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 377.0, "uniq_id_stringindexer_transform": 189.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "147", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Melony", "review_title": "Beautiful picture and great sound!", "review_description": "This is my fourth Vizio tv and they just keep getting better. Bread brand and quality product.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228085186", "uniq_id": "21bbb55e-c631-5317-bbbe-e966c51ddc36", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 25.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 281.0, "review_title_stringindexer_transform": 69.0, "review_description_stringindexer_transform": 21.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 166.0, "uniq_id_stringindexer_transform": 225.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "148", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Slair", "review_title": "Beautiful picture, disappointing software...", "review_description": "I am very pleased with the quality and picture on this TV.  I was disappointed that the streaming software runs at 720p since this is a 4K TV.  I added a 4K Firestick to resolve the issue.  Otherwise I am very happy with the design and function of this TV.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228057468", "uniq_id": "7fc9e390-1992-5327-9a3f-8730d97e32b3", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 234.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 20.0, "review_title_stringindexer_transform": 169.0, "review_description_stringindexer_transform": 181.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 393.0, "uniq_id_stringindexer_transform": 313.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "149", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "ll1cool1", "review_title": "Great colors sometimes", "review_description": "I bought it about three weeks ago, and sometimes I am impressed with the crisp colors produced. There are times not so much, I  was watching something on Netflix the other day, and all the color except red looked good. The red color was like pigmentated almost as if it were a hole where ever there was red. I also noticed that when streaming sports live action it blurs a lot. I  am not sure that isn't the feed, but it is annoying.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "12 months ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227938540", "uniq_id": "e00ba275-4a07-5d26-b371-4317a039c78c", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 353.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 117.0, "review_title_stringindexer_transform": 188.0, "review_description_stringindexer_transform": 125.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 15.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 115.0, "uniq_id_stringindexer_transform": 154.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "150", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Xbox Halo Elite Series 2 Controller thoughts.", "review_description": "Extremely great controller! It's my first pro controller and I loved it. The design and color make it complete. Had to get used to the paddles on the back, but afterwards it made doing certain things in games easier!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439701", "uniq_id": "e6b35618-1a65-58b4-b82f-91fe5c64d444", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 454.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 30.0, "review_description_stringindexer_transform": 15.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 154.0, "uniq_id_stringindexer_transform": 384.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "151", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Oh so pretty!", "review_description": "Beautiful controller! A must have for any Halo fan!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439022", "uniq_id": "85d2e8a6-54a4-5cfd-85b8-a40628881808", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 315.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 40.0, "review_description_stringindexer_transform": 183.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 317.0, "uniq_id_stringindexer_transform": 363.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "152", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "DK4345", "review_title": "Issues with mine, probably not everyone.", "review_description": "Right joystick jumps and feels stuck sometimes. Paint in that same joystick that is gunmetal is gone and when the stick is rotated you can see the silver beneath. Wish I could have returned, but with how these are gone everywhere I don\u2019t know how I would have gotten another one\u2026", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "2", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191438590", "uniq_id": "de5d066a-fb60-5496-a2af-4708d4867650", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 180.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 89.0, "review_title_stringindexer_transform": 34.0, "review_description_stringindexer_transform": 334.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 46.0, "uniq_id_stringindexer_transform": 302.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "153", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Hothroy", "review_title": "Great Halo Controller", "review_description": "Great design and awesome feel. This controller would be perfect if not for the horrible quality control issue Microsoft has on their controllers. Mine had stock drift, a messed up button, and a bent paddle, so I\u2019m waiting on a replacement. Fingers crossed.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191438462", "uniq_id": "a803b874-c886-57b3-b93b-16a92cb2c4af", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 17.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 382.0, "review_title_stringindexer_transform": 240.0, "review_description_stringindexer_transform": 292.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 246.0, "uniq_id_stringindexer_transform": 129.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "154", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Zanderspike", "review_title": "Finish the fight!", "review_description": "A controller worthy of a spartan you'll never play the same ever again with interchangeable thumbsticks, d-pad and mappable paddles you'll be unstoppable in any engagement.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191438175", "uniq_id": "9d0a0700-633a-5cb9-b33f-88479669ad1c", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 418.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 182.0, "review_title_stringindexer_transform": 202.0, "review_description_stringindexer_transform": 144.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 76.0, "uniq_id_stringindexer_transform": 141.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "155", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "N Zero", "review_title": "Master Chief approves", "review_description": "Happy to add this to the Halo collection! She\u2019s a beauty.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191437894", "uniq_id": "78a38873-09a0-5f5c-8680-56bd3d8182bb", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 164.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 81.0, "review_title_stringindexer_transform": 313.0, "review_description_stringindexer_transform": 399.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 390.0, "uniq_id_stringindexer_transform": 113.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "156", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "daSurge", "review_title": "Love this controller.", "review_description": "Solid feeling controller. Love the design and halo theme of it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191437728", "uniq_id": "0b9eb2b5-8735-5a5c-b3c1-e574976ff59a", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 346.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 240.0, "review_title_stringindexer_transform": 191.0, "review_description_stringindexer_transform": 342.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 354.0, "uniq_id_stringindexer_transform": 151.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "157", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Coolest controller", "review_description": "Multiple parts that can be swapped. Comes with an in game code that gives a weapon charm", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191435985", "uniq_id": "6680ec17-93e7-5d88-be84-252b6dcf4afa", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 493.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 88.0, "review_description_stringindexer_transform": 147.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 190.0, "uniq_id_stringindexer_transform": 192.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "158", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "James0023", "review_title": "Halo Infinite Elite Controller", "review_description": "Best controller ever. Toss a Halo Infinite skin on it makes it that much better. Recommend to anyone.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191434602", "uniq_id": "830e77d9-5c67-518a-a24d-48656e6ec23a", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 22.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 217.0, "review_title_stringindexer_transform": 372.0, "review_description_stringindexer_transform": 280.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 44.0, "uniq_id_stringindexer_transform": 308.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "159", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Adyn Evans", "review_title": "Great once I got the working product.", "review_description": "Thumbstick issues straight out of box. Had to send back to Microsoft to exchange for working one. After that it\u2019s wonderful. More of a quality control issue on Microsoft\u2019s end than gamestops fault, however when I reached out to GameStop about the purchase I was told they didn\u2019t have any to replace it with. Just a general pain in the butt just for me to get a working product that I paid a lot of money for.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191433776", "uniq_id": "9f9fe687-9b39-54dc-a594-be74dc951e9f", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 199.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 169.0, "review_title_stringindexer_transform": 359.0, "review_description_stringindexer_transform": 394.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 184.0, "uniq_id_stringindexer_transform": 291.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "160", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "glumee", "review_title": "Nintendo Just KNOWS Fun!", "review_description": "Typical, classic, Nintendo fun! Challenging? Not very. Enjoyable from beginning to end? Absolutely!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127153348", "uniq_id": "7a0bc368-d016-51c1-a93a-e5255b8818b6", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 394.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 49.0, "review_title_stringindexer_transform": 151.0, "review_description_stringindexer_transform": 328.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 357.0, "uniq_id_stringindexer_transform": 375.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "161", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Azucarmamacita", "review_title": "Yoshis crafter world", "review_description": "Super fun, a lot of challenges and game time. Since I bought it I haven\u2019t put it down.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127152461", "uniq_id": "c68ab9a9-35ca-50e7-8d99-61aa90cc6170", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 490.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 110.0, "review_title_stringindexer_transform": 43.0, "review_description_stringindexer_transform": 318.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 42.0, "uniq_id_stringindexer_transform": 167.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "162", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "dahc", "review_title": "Cute and fun", "review_description": "Not a hard game but a good one to relax and play after work.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127151155", "uniq_id": "3c2570e7-dcf8-5ca5-a2e5-cab3f469a020", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 310.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 73.0, "review_title_stringindexer_transform": 163.0, "review_description_stringindexer_transform": 193.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 225.0, "uniq_id_stringindexer_transform": 137.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "163", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "killer_kenne", "review_title": "Yoshi crushes another one outta the park!!", "review_description": "If you like yoshi, you can\u2019t go wrong here. Game is a masterpiece and provides decent challenges for even the seasoned gamer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127149546", "uniq_id": "eb70dff8-04e8-5a64-a14e-63186d060a0e", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 127.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 136.0, "review_title_stringindexer_transform": 375.0, "review_description_stringindexer_transform": 298.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 171.0, "uniq_id_stringindexer_transform": 25.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "164", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JustWill1982", "review_title": "More Yoshi fun.", "review_description": "More whimsical Yoshi fun that innovates on the last game without changing what we know and love.  A bit easy but still fun & heartwarming.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127147505", "uniq_id": "70075879-a707-5623-93eb-21a98adec3ff", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 47.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 392.0, "review_title_stringindexer_transform": 322.0, "review_description_stringindexer_transform": 195.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 380.0, "uniq_id_stringindexer_transform": 196.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "165", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Theraven16", "review_title": "Yoshi\u2019s Crafted World", "review_description": "Fun game, but too short.  Beat the game after only three days of casual play.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127144002", "uniq_id": "b2f4b512-cb05-54e0-8cdc-5513f11da130", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 401.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 323.0, "review_title_stringindexer_transform": 17.0, "review_description_stringindexer_transform": 412.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 187.0, "uniq_id_stringindexer_transform": 344.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "166", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Penutt2", "review_title": "Great Game!", "review_description": "Yoshi\u2019s Crafted World is fun and a bit challenging.  My 10-year-old loves it and I can play it with him.  Yoshi!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127140095", "uniq_id": "ca9738d7-fa47-5310-94c9-9abdf85f4aec", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 144.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 408.0, "review_title_stringindexer_transform": 16.0, "review_description_stringindexer_transform": 336.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 20.0, "uniq_id_stringindexer_transform": 228.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "167", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "TheMonty", "review_title": "Beautiful game but a bit overpriced.", "review_description": "Really adorable game with an imaginative landscape. This game is cute and colorful and fun for all ages. Collectibles could be a little more satisfying however, it doesn\u2019t ruin the game. Developers did a great job but the game should be priced about $20 lower.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127137390", "uniq_id": "7cdfe34c-abaf-5aef-9de4-e655f148a573", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 378.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 357.0, "review_title_stringindexer_transform": 349.0, "review_description_stringindexer_transform": 377.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 205.0, "uniq_id_stringindexer_transform": 223.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "168", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Drdrums", "review_title": "Don\u2019t miss this if you like platformers!", "review_description": "A fun platformer with charming visuals, interesting puzzles, and a good level of difficulty!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127131702", "uniq_id": "92c805bc-a7f5-5195-a86c-1bae32b5992c", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 448.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 258.0, "review_title_stringindexer_transform": 386.0, "review_description_stringindexer_transform": 395.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 256.0, "uniq_id_stringindexer_transform": 244.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "169", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Midwestmikey", "review_title": "Great game for kids and adults", "review_description": "An extremely fun game not only for my little sister but for me too! Easy enough for her to enjoy but it has some challenges that allows me to have fun as well.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127130838", "uniq_id": "342a7542-8347-5f47-a2a1-3210f50a807f", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 13.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 86.0, "review_title_stringindexer_transform": 121.0, "review_description_stringindexer_transform": 333.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 361.0, "uniq_id_stringindexer_transform": 72.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "170", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Chrissy in ny", "review_title": "Oled 55in TV", "review_description": "Oled makes a big difference in the sharpness of the picture and it can be watched from an angle.  Very happy with my new TV", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "12 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227875021", "uniq_id": "7c0656aa-e5d5-5531-a479-c2da27eda948", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 48.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 262.0, "review_title_stringindexer_transform": 124.0, "review_description_stringindexer_transform": 28.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 15.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 147.0, "uniq_id_stringindexer_transform": 152.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "171", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Vman", "review_title": "Blown Away!!!!", "review_description": "\"I bought the 55\"\" for the bedroom and at this price you cant find a better Oled. Im was a Sony guy but now I dont have to pay the premium to be lol. Finally a company that is challenging the big dogs and winning!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 399.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 112.0, "review_title_stringindexer_transform": 177.0, "review_description_stringindexer_transform": 270.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The picture is beyond amazing!! OS is smooth and video games look so darn good! Im buying the 65\"\" for the front room next week!\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "5", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "227806298", "not_helpful_count": "c35409b8-9e25-5996-88e8-e3f1aa9e8065", "reviewed_at": "16/01/2022 16:18:00", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 219.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 5.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 17.0, "not_helpful_count_stringindexer_transform": 19.0, "reviewed_at_stringindexer_transform": 13.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "172", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "T. Lawson", "review_title": "Awesome picture, firmware need work", "review_description": "I realize Visio is new to OLED and this is their first go at them .., that being said, this tv has potential and I knew saving money over LG would come with some growing pains. I\u2019ve experienced several anomalies that required a power cycle to correct. Some of those issues were sound no video on all inputs (including OTA & web channels), syncing with true 120fps 4K sources. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 470.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 58.0, "review_title_stringindexer_transform": 165.0, "review_description_stringindexer_transform": 69.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "I\u2019d love to be able to recommend merely because of the picture and viewing angles alone", "name": " truth is because of the issues at present with the firmware", "brand": " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", "sku": "No: I don\u2019t recommend this product", "reviewer_name": "zachR", "review_title": "0", "review_description": "0", "recommended_review": "1 year ago", "verifed_purchaser": "3", "helpful_count": "4.2727", "not_helpful_count": "363", "reviewed_at": "227799226", "rating": "538c1919-dad5-54d8-89b1-619b8c7656e3", "average_rating": "16/01/2022 16:18:00", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 111.0, "name_stringindexer_transform": 16.0, "brand_stringindexer_transform": 14.0, "sku_stringindexer_transform": 10.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 3.0, "recommended_review_stringindexer_transform": 19.0, "verifed_purchaser_stringindexer_transform": 13.0, "helpful_count_stringindexer_transform": 9.0, "not_helpful_count_stringindexer_transform": 9.0, "reviewed_at_stringindexer_transform": 40.0, "rating_stringindexer_transform": 14.0, "average_rating_stringindexer_transform": 13.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "173", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "deshon", "review_title": "OK Updates would make it better", "review_description": "Some features are missing and broken but when it works its great!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227791669", "uniq_id": "6344ef26-f49a-5fe7-adf8-f78f0291da78", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 284.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 171.0, "review_title_stringindexer_transform": 113.0, "review_description_stringindexer_transform": 406.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 137.0, "uniq_id_stringindexer_transform": 132.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "174", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "MPock", "review_title": "Excellent Oled", "review_description": "I\u2019ve had this tv for almost 2 months and completely happy with the performance and picture", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227778090", "uniq_id": "9d8c6279-b9ad-5934-8270-e45b1a2514a7", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 136.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 94.0, "review_title_stringindexer_transform": 224.0, "review_description_stringindexer_transform": 185.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 264.0, "uniq_id_stringindexer_transform": 226.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "175", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "DaBurghLover", "review_title": "Super crisp picture quality", "review_description": "I\u2019m happy that I made this choice. I sincerely hope this product lasts more than 15 - 20 years", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227771273", "uniq_id": "bb1ba1ea-fdb3-5210-a1f0-c5dde357c6c5", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 52.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 385.0, "review_title_stringindexer_transform": 371.0, "review_description_stringindexer_transform": 403.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 62.0, "uniq_id_stringindexer_transform": 12.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "176", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Buck Bull Stallion", "review_title": "Okay", "review_description": "Great picture lack of updates. Need support for 1440p and Vrr 4K 120. Also android fully baked in", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227732223", "uniq_id": "59c37463-7e8e-5dac-b39d-25c12a73e452", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 495.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 299.0, "review_title_stringindexer_transform": 387.0, "review_description_stringindexer_transform": 427.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 54.0, "uniq_id_stringindexer_transform": 230.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "177", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "MrGregory2000", "review_title": "Vizio oled h1", "review_description": "This TV is my first oled.  The picture is breathtaking but the television itself has some problems.  Sometimes the television will not connect to the smart cast. Sometimes the TV will not even power on without having to pull the power plug and plugging it back in. But overall I am happy with this television. We have been promised all these things to be fixed and a future firmware update. Fingers crossed.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227730979", "uniq_id": "4336655c-bf54-5815-8b4c-c7257f8ee373", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 159.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 347.0, "review_title_stringindexer_transform": 31.0, "review_description_stringindexer_transform": 274.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 88.0, "uniq_id_stringindexer_transform": 9.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "178", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "cliff90", "review_title": "World Class Display OLED", "review_description": "I was a bit nervous buying this set being that Vizo just started making OLED's. I can tell you know after I have it in my house. IT IS BEAUTIFUL! I can not believe the qualitly of the picture. I have this set  in my main room and we have a gaming 4k TV on the same wall. Side by side this display makes the other 4k look cheap (btw... the other set is a high end display made for gaming).", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 357.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 28.0, "review_title_stringindexer_transform": 32.0, "review_description_stringindexer_transform": 354.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "I am so glad I gave it a chance!\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "5", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "227721000", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "16/01/2022 16:18:00", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 372.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 5.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 23.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 13.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "179", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Barry1226", "review_title": "Best Picture Ever", "review_description": "so glad I decided to spend more to get the OLED. Picture is the brst.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227715331", "uniq_id": "161d1563-a683-5027-9a7b-226dd83bacc9", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 430.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 332.0, "review_title_stringindexer_transform": 117.0, "review_description_stringindexer_transform": 287.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 58.0, "uniq_id_stringindexer_transform": 357.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "180", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Timbo88", "review_title": "Sticky R thumbstick Resistance.", "review_description": "This is my second series 2 elite controller. The first worked perfectly but this one looked so awesome that I had to have it! The only issue is that the R thumbstick is a little sticky when pushing to the L. No other direction, only the left. It is like there is a bit of resistance I have to push through before it releases and goes to the left. My first elite series 2 controller doesnt have this issue. It hampers FPS games a little, but not terribly. Otherwise a great controller and terrific looking product if your a Halo fan. I'm just a little bummed about the aiming thumbstick being slightly off.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191433462", "uniq_id": "a9ead4c5-5697-5920-8415-47091cdf9b62", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 286.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 409.0, "review_title_stringindexer_transform": 361.0, "review_description_stringindexer_transform": 173.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 129.0, "uniq_id_stringindexer_transform": 92.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "181", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Assassionator", "review_title": "Great controller now a little better", "review_description": "The Elite series 2 was already the best Xbox controller, now has an amazing look.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191432612", "uniq_id": "be7a52a7-154c-5468-83e5-ce5d947f712d", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 91.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 337.0, "review_title_stringindexer_transform": 341.0, "review_description_stringindexer_transform": 43.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 165.0, "uniq_id_stringindexer_transform": 117.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "182", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Brannon M", "review_title": "Y button doesnt work all the time.", "review_description": "controller is awesome. but my Y button doesnt work all the time. its very frustrating.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "1", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191432155", "uniq_id": "ee96d446-bfa0-5374-b74e-a26f96eab46d", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 24.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 313.0, "review_title_stringindexer_transform": 103.0, "review_description_stringindexer_transform": 337.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 117.0, "uniq_id_stringindexer_transform": 186.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "183", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Johnson1720", "review_title": "Xbox Halo Elite 2 Controller", "review_description": "Work as great as the original Series 2 Elite Controller but that Halo detail. It was great to find a code inside that gives you a weapon charm that look exactly like the controller.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191353081", "uniq_id": "79fbee79-80ae-5908-8cda-70f9293e272f", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 422.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 109.0, "review_title_stringindexer_transform": 66.0, "review_description_stringindexer_transform": 297.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 389.0, "uniq_id_stringindexer_transform": 97.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "184", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Halo LE Elite 2", "review_description": "Beautiful controller. If at all possible, why not buy the limited edition controller for a small amount more. Im a huge halo fan, so getting an extra controller in this caliber of beauty was an easy choice for me. Elite controllers are an amazing controller for sure, which is part of why there is too many reasons to get this controller, really.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191322300", "uniq_id": "7e71ba28-f137-5fdd-80ab-d91a69dcd9ad", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 326.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 54.0, "review_description_stringindexer_transform": 48.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 375.0, "uniq_id_stringindexer_transform": 36.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "185", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Disappointeddd", "review_title": "Faulty product with known issues", "review_description": "Like many Elite 2 controllers, this was totally unusable out of the box.  Stick drift was suuuuuuuuuuuuuuuuuuuuuper bad.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "1", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191322155", "uniq_id": "10273c14-150a-59ac-86f3-2040fae23777", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 251.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 366.0, "review_title_stringindexer_transform": 204.0, "review_description_stringindexer_transform": 391.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 136.0, "uniq_id_stringindexer_transform": 305.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "186", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "JLAxxSPARTAN", "review_title": "Xbox Elite Controller Series 2 Halo Edition", "review_description": "Love this controller. The attention to detail is out of this world.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191321523", "uniq_id": "1a5bd81d-12a7-5f67-b456-c557a1b6029b", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 115.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 111.0, "review_title_stringindexer_transform": 388.0, "review_description_stringindexer_transform": 101.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 320.0, "uniq_id_stringindexer_transform": 178.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "187", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Henroc", "review_title": "Elite controller", "review_description": "Great elite controller for a supa halo fan-very stylish too", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191169574", "uniq_id": "ce147da5-c01e-5a86-a357-f8d3ece4a123", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 397.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 29.0, "review_title_stringindexer_transform": 111.0, "review_description_stringindexer_transform": 276.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 111.0, "uniq_id_stringindexer_transform": 35.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "188", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Halo Elite controller", "review_description": "Very cool and feels really nice and comfortable in hands", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190972289", "uniq_id": "df892d55-bd89-528b-8528-ebb70103f590", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 230.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 338.0, "review_description_stringindexer_transform": 90.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 10.0, "uniq_id_stringindexer_transform": 373.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "189", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Seena", "review_title": "Amazing!!", "review_description": "Its absolutely beautiful! Great controller", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190971178", "uniq_id": "5465f272-2a25-544e-a43e-a137e0899216", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 351.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 218.0, "review_title_stringindexer_transform": 347.0, "review_description_stringindexer_transform": 419.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 148.0, "uniq_id_stringindexer_transform": 66.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "190", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "RandiBeth", "review_title": "Not a good game", "review_description": "I loved Yoshi\u2019s Wooly World, but this game came across as very childish and no real goal that you are trying to reach.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "6", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127127997", "uniq_id": "9603729f-86c8-5e52-a9c4-aea8bc2c705e", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 318.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 78.0, "review_title_stringindexer_transform": 135.0, "review_description_stringindexer_transform": 306.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 4.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 229.0, "uniq_id_stringindexer_transform": 364.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "191", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Elope90", "review_title": "I love it!", "review_description": "There's so much replay value with this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 313.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 288.0, "review_title_stringindexer_transform": 104.0, "review_description_stringindexer_transform": 61.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Going back and forth between each level", "name": " finding every nook and cranny ", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 395.0, "name_stringindexer_transform": 29.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "in between each secret is so satisfying.\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "127127185", "not_helpful_count": "3adeb77d-d51a-53aa-9aa2-3908b384030d", "reviewed_at": "16/01/2022 16:18:00", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 417.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 8.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 2.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 3.0, "verifed_purchaser_stringindexer_transform": 3.0, "helpful_count_stringindexer_transform": 35.0, "not_helpful_count_stringindexer_transform": 33.0, "reviewed_at_stringindexer_transform": 13.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "192", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Cfm1985", "review_title": "Yoshi has never been better.", "review_description": "Awesome game.  Little less challenging but that doesn't take away from the enjoyment of the game.  Highly recommend if your into Yoshi island style games.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127125697", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 174.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 327.0, "review_title_stringindexer_transform": 154.0, "review_description_stringindexer_transform": 426.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 216.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "193", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "BubonicChronic", "review_title": "Easy but fun", "review_description": "Great game but kind of easy compared to Yoshi\u2019s island", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127123561", "uniq_id": "4af31d2f-d9c0-55f4-9083-3945e69aede0", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 15.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 387.0, "review_title_stringindexer_transform": 284.0, "review_description_stringindexer_transform": 80.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 37.0, "uniq_id_stringindexer_transform": 285.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "194", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Buttztallion", "review_title": "A fun single player game", "review_description": "Single player is tons of fun. Nothing sticks out as being bad other than being a little too easy for mature gamers. Co-Op is a jumbled mess of accidentally getting  stuck on people and losing your eggs unpredictably.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127120887", "uniq_id": "7be993e6-155e-5555-998b-cedcee64ef71", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 416.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 246.0, "review_title_stringindexer_transform": 181.0, "review_description_stringindexer_transform": 29.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 217.0, "uniq_id_stringindexer_transform": 32.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "195", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Digmyearth", "review_title": "It do like be so it be good", "review_description": "Pretty fun typical Yoshi game that offers more variety than usual, still not Yoshi\u2019s Island levels but pretty good nonetheless. Worth my money.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127117350", "uniq_id": "60e522b6-7f19-5e3f-8456-548142cd2603", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 343.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 22.0, "review_title_stringindexer_transform": 213.0, "review_description_stringindexer_transform": 35.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 189.0, "uniq_id_stringindexer_transform": 304.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "196", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JackB72", "review_title": "Cute, crafty fun!", "review_description": "Once you get past the cuteness factor of the game, you'll find a very fun gameplay experience. Controls seem very responsive, and the 2 player mode is loads of fun and laughs. Great game to introduce a young child to gaming. A great addition to the Yoshi themed game library.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127029556", "uniq_id": "00a29941-a023-5474-a4bb-3c28f9699a6c", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 210.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 403.0, "review_title_stringindexer_transform": 100.0, "review_description_stringindexer_transform": 227.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 102.0, "uniq_id_stringindexer_transform": 289.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "197", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "RobertKW", "review_title": "Surprisingly fun", "review_description": "I haven't been a huge fan of the series since it is a easier version A Mario title but this game has been surprisingly fun", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127014676", "uniq_id": "bc7017a3-b713-5c27-9b55-944deacc859b", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 102.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 38.0, "review_title_stringindexer_transform": 339.0, "review_description_stringindexer_transform": 421.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 152.0, "uniq_id_stringindexer_transform": 365.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "198", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Angelrose2", "review_title": "You won\u2019t be disappointed if you\u2019re a Yoshi fan!", "review_description": "It\u2019s so cute. I love Yoshi.  This version is built using craft materials and can get quite challenging!  I love how detailed the graphics are! Fun, fun, fun!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127012426", "uniq_id": "11ca20bc-d09d-5da2-9f77-75560a67b0f2", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 386.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 232.0, "review_title_stringindexer_transform": 326.0, "review_description_stringindexer_transform": 258.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 309.0, "uniq_id_stringindexer_transform": 347.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "199", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Noz 37", "review_title": "Great game and fun", "review_description": "Great game and fun but unlocking different types of Yoshi\u2019s with yarn in the last game was a lot better than the costumes concept.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126806434", "uniq_id": "4ca56a88-18eb-5e1a-af3e-f09fb8a295b1", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 198.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 407.0, "review_title_stringindexer_transform": 261.0, "review_description_stringindexer_transform": 100.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 38.0, "uniq_id_stringindexer_transform": 361.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "200", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "AikenAidan", "review_title": "So where is the GAME?", "review_description": "Got my package, installed it and got a STEAM POWERED program that starts itself every time I start my computer [no option to turn that off] and emediately takes me to thier online site with only options to buy games. The was NO GAME on the disk. No information saying that it is an Online game only [no information saying it is even an online game on thier site.] I tried to check out the Forums, registering for thier forum kept takeing me to other sites. These other sites required me to reister. This repedative nonsence went on for 4 diff registration that finnaly returned me to the STEAM forums. Unfortunately I still wasn't allowed to access thier forums.  No tech support, no contact information ,no game.. No reason to even consider getting this product.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "3", "not_helpful_count": "16", "reviewed_at": "11 years ago", "rating": "1", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250427", "uniq_id": "a9aaf6b6-d248-5257-81b4-4261997b6957", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 483.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 229.0, "review_title_stringindexer_transform": 65.0, "review_description_stringindexer_transform": 170.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 5.0, "not_helpful_count_stringindexer_transform": 27.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 55.0, "uniq_id_stringindexer_transform": 157.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "201", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Kyoungblood", "review_title": "This is the WORST SC game peroid!", "review_description": "I own both Supreme Commander and Forged Alliance and find both games superb. When i head there was a Supreme Commander 2 coming out of course I ran right out and got it. I can honestly say this is one of the worst war games period. My reasons include the fact you must unlock a LOT of stuff to even consider playing the quick battles. There's only 6 maps, yes i said 6. The fact you cant even choose what side you want to be on until you unlock the ability, and the WORST part is you cant even see a simple overview of the maps when you are selecting them your basically better off throwing darts at your comp screen to decide what your gonna do rather than actually getting to decide anything at all about the battle ahead. The point I'm making here is don't Waste your money... This game isn't even worth getting if it cost 2.50.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "1", "not_helpful_count": "9", "reviewed_at": "11 years ago", "rating": "1", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250430", "uniq_id": "43d68c51-de66-5084-bb9b-beb70dd04227", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 94.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 146.0, "review_title_stringindexer_transform": 90.0, "review_description_stringindexer_transform": 66.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 21.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 112.0, "uniq_id_stringindexer_transform": 45.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "202", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "TheGamerGalore", "review_title": "dont touch it? i think i will", "review_description": "played it today and i've never played a better RTS. im lovin it every step of the way and although its a little bit more 'cartoonish' than the last one, its still definatly a fun epic story lined game. it beats AoE, UaW, and matches EtW, and C&C. i really love playing it and my slightly old system can handle it perfectly. i was a little disappointed, i though the requirements would be a little higher and i definatly see a decrease in the quality. overall, 8 out of 10. AWESOME game. right now, im a little concerned with the new unit the cybranasourus rex (yeh, i probably spelled that wrong) it seemed a little like an out of place character to be put in the game. its still a pretty cool unit and theres so much more upgrade. the most important is the eco that they had. the last one sucked and was full of glitches. this one is MUCH more stable, its brings the good parts of halo wars and not the sucky parts (because seriously, halo wars sucked) buy NOW", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "5", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "4", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250425", "uniq_id": "74124d14-3a82-5efd-8d25-925413486048", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 246.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 3.0, "review_title_stringindexer_transform": 362.0, "review_description_stringindexer_transform": 401.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 6.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 101.0, "uniq_id_stringindexer_transform": 360.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "203", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "SumoSpike", "review_title": "Another Dissapointment of 2010 Gaming", "review_description": "The frist two games of this year that I was waiting for were Supreme Commander 2 and C&C4. Both are god awful. Supreme Commander 2 is missing the best elements and nuances of it's two predecessors. I actually think that TA was the best of them all. Sad that games just get worse and worse as they come out with new titles. What happened to the unit types??!! There is not nearly as many unit types as SC or TA. Plus, what happened to the recycling of plants and rocks... the environmental resources you could live off until you got your resource production up and running? And why are there so few multiplayer maps?  I have an idea. Take the Total Annihilation engine, give it some new graphics,new sound, a new story line and new unit types... and don't change anything else...", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "2", "not_helpful_count": "3", "reviewed_at": "11 years ago", "rating": "2", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250424", "uniq_id": "65a5e017-1707-51de-9fa4-f01bd77a9e1c", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 336.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 63.0, "review_title_stringindexer_transform": 216.0, "review_description_stringindexer_transform": 63.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 7.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 194.0, "uniq_id_stringindexer_transform": 27.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "204", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Deathsprophet", "review_title": "Sorry I'm having a hard time speaking its so Awesome!!", "review_description": "Don't know what the other guys here are talking about, the game is great, ya sure they took out some of the things the sup com pros loved, but the thing is, more people want to play RTS so you can't expect a newbie to grasp every concept of the game, unlike the pros. If they left some of the things from the old sup com in, it would be so unbalanced it wouldn't been as fun to play for the newbies.  Alright so lets get down to buisness, the storyline is great and the graphics blow sup com 1's out of the water, while supporting older computers that don't have as good of processors or graphics card. Win, Win situation. At least thats what I think, and that is why you're here isn't it ??   They added a new research screen to simplify it and added a whole bunch of new features like building add ons and new experimentals. FYI to all aion illuminate fans, they don't have naval anymore. I know, ouch right? Well I think we'll live.  On to sound. They did a really good job with the music this time, its about 10 times better than sup com 1 and the sound effects really match up and exceed what you think they will sound like, when lets say someone gets blown up by a nuke or someones commander goes into meltdown.  For all those hard core gamers out there, the 10 hour battles have gone away, I know, sad right? Well they replaced with a shorter even fiercer model of online game play, that really seems to fit, and when I mean shorter, I mean average of two hours. You can still build those big armies just faster. One thing I wanna finish up with is the Interface. They kept a lot of the interface from sup com 1 and FA, but also added the research screen which I talked about earlier. It works like this: You need research points to buy any sort of research upgrades and those research points automatically come along, but you can build research facilities that increase the speed at which you get them. You can spend research points on things like, personal shields for your units, or new buildings, sight upgrades, radar upgrades, and new schematics for buildings and units. Big FYI for all those 360 gamers lookin at this. The 360 version of this game is just as good if not better than the PC version.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "3", "not_helpful_count": "1", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250437", "uniq_id": "a6daf2c6-b2e0-56b6-942a-20ec613b3e8c", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 455.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 115.0, "review_title_stringindexer_transform": 280.0, "review_description_stringindexer_transform": 91.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 5.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 363.0, "uniq_id_stringindexer_transform": 29.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "205", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Bumzab", "review_title": "Do not touch this game with a 10-foot pole", "review_description": "\"Make no mistake - this IS Supreme Commander Lite. It almost feels like a very weak demo of SupCom 1, but worse. Even with the new research trees, you'll still end up with no where near the amount of units to choose from that you had with SupCom 1 and its tiers. Yeah, sometimes the tiers were annoying to work through and it took far too long in most instances to get anywhere close to maximizing your faction's potential in a single match in the first one - but this \"\"sequel\"\" has completely gutted it altogether. You'll likely end up mashing your mouse button or hotkey to churn out more of the exact same units.. over... and over... and over again because there's barely anything to choose from for unit diversity. The game requires the Steam client and an internet connection just to play. While it's true that most people these days have an internet connection", "recommended_review": " it's a rather unfortunate decision not only because you're excluding gamers but also because of potential happenstance scenarios. Steam goes down? Sorry", "verifed_purchaser": " you're out of luck. A few years down the road and something else happens(such as one of the companies going out of the business or whatnot) and you can't go back to play it for old times sake? Again", "helpful_count": " out of luck. Move to an area with limited connectivity? Same thing. I wish developers would stop going with this route", "not_helpful_count": " as it's very short-sighted. The graphics are significantly worse than the first one", "reviewed_at": " even on the highest settings. There are ONLY small maps", "rating": " and no larger maps to choose from. In the first version you had a large selection of maps", "average_rating": " in SupCom2 there are around 10-15", "reviews_count": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "comment_id": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "uniq_id": " don't make the same mistake I did. Do not buy this game.\"", "scraped_at": "No: I don\u2019t recommend this product", "index_stringindexer_transform": 1.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 203.0, "review_title_stringindexer_transform": 190.0, "review_description_stringindexer_transform": 422.0, "recommended_review_stringindexer_transform": 16.0, "verifed_purchaser_stringindexer_transform": 16.0, "helpful_count_stringindexer_transform": 27.0, "not_helpful_count_stringindexer_transform": 13.0, "reviewed_at_stringindexer_transform": 44.0, "rating_stringindexer_transform": 15.0, "average_rating_stringindexer_transform": 11.0, "reviews_count_stringindexer_transform": 7.0, "comment_id_stringindexer_transform": 312.0, "uniq_id_stringindexer_transform": 20.0, "scraped_at_stringindexer_transform": 13.0}, {"index": "206", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "nonxaznxboi", "review_title": "Tons of fun", "review_description": "If you like multiplayer or lan-parties add this on to the list because you get a lot of fun in that little box! There are many nay-sayers but i really don't know what the heck they are talking about. Graphics are great, simple neat menu, intense tug-of-war games because its hard to dominate players that are sneaky!... It runs great on both my desktops and even my laptop! So if you have a decent machine you can easily run this game because its not demanding at all. Very fun to play against you friends and the online is pretty intense. Single player story is good and easy to get into because you dont need to have played the originals to understand whats going on or anything. As of right now you can save $** if you buy it which makes it even more worth the money. 10/10! pick one up maybe ill play against ya!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250432", "uniq_id": "7d45dc21-cb6d-566e-829c-0b6a8f1fcb9d", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 153.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 226.0, "review_title_stringindexer_transform": 92.0, "review_description_stringindexer_transform": 215.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 198.0, "uniq_id_stringindexer_transform": 206.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "207", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Kerican", "review_title": "SC 2 - mediocre game.", "review_description": "There were so high hopes for this game, as SC 1 and FA had left me hungry for more games like TA, yet unfortunately the wait would lead to disappointment. For those who enjoyed the similarities between TA and SC1 will be the biggest disappointment here. The economy of the previously mention games is utterly gone. No worrying about balancing energy usage and mass income with building and firing weapons, its all been removed. Its now a simple straight up, build up army, build base defenses, go conqueror enemy. Also gone are the tech levels, and weaker starting units, and teching up. Instead its replaced by research points that gradually come in much like all the other resources.  Without that element nothing really stood out in the game. Without the challenging economy, the campaign portion of the game becomes simple, build defenses, build army, repair defenses occasionally, attack enemy. Musically nothing really stood out, there may of been a couple times when I stopped to notice it, but again nothing inspiring. Storyline it also seems kinda lacking, it comes off like a Final Fantasy storyline mashed into brief conversations between 18 missions. There just simply is not enough there to make a great story, which once again left me greatly disappointed. Graphically the game was nice, and the small scale compared to SC1, meant I could actually stay somewhat zoomed in, to actually see the units, and not just commanding by click on the small icons. The movies were decent, just way to few of em to tell a good story. The game controls fairly well, being rather simple game now, its easy to pick up and get right into. Those with SC1 knowledge will have no trouble picking it up, as the mechanics are still basically identical to the first. Those used to Starcraft or C&C type games might take a bit longer but overall its not a hard game to get into or to start playing. The game probably has some strengths in multiplayer, as the unit balance does seem good, but I have not done any of that yet. Overall SC2 is not a bad game, everything seems to work, the game loaded smoothly, the game had no noticle lag, or slowdowns, but there is just nothing in it that simply makes it stand out. The game itself was fun to play through, and I did enjoy the limited story, and I may still by the sequel when it comes out (of course the ending had a cliff hanger for a sequel... what game doesn't do that no a days) yet this probably won't be a game I will touch all to often again now that I have beaten it. My suggestion is wait for the price to drop on this one if you simply want to see the continued storyline from the first, as the game offers very little of anything else to draw players away from other games.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "11 years ago", "rating": "3", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250436", "uniq_id": "fe7d8b34-e569-5186-8dce-57c70a13d88c", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 437.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 56.0, "review_title_stringindexer_transform": 323.0, "review_description_stringindexer_transform": 92.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 266.0, "uniq_id_stringindexer_transform": 69.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "208", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Cycephenom", "review_title": "Way to destroy the best RTS series ever made!", "review_description": "\"First there was Total Annihilation; superb, deep, endless strategy, constantly evolving, hundreds of different units, quick to learn hard to master. Then Supreme Commander and Forged alliance; made Total Annihilation (TA) larger with a better AI, beautiful graphics and much of the same elements that made TA great.  Then Supreme Commander 2; What the hell happened here? You took almost everything that made the first two stand alone and dominate and tossed it out the window. My only guess is you tried to dumb this game down to the likes of a C&C or a Craft game so it could appeal to the zerg boys.... probably thanks to Square's involvement. Really Chris Taylor how much did it cost to convince you to kill your baby?! Graphics went from sci-fi futuristic to cartoonish. Threw out the unique resource allocation and made it a click and buy system with a \"\"Research\"\" resource which is another Craft game move that sucks. Took out almost 60% of the different units in the game an dumbed base creation and defense down to arrow towers CRAFT again!. All the maps appear to be zerg/rush maps. Threw out the tier system... Sheesh I can go on and on but I won't. Bottom line: If you loved what made Total Annihilation and Supreme Commander unique and fun", "recommended_review": " you will hate and loath this game as I did. However if you owned any Craft game or C&C and thought the above mention games were too complex", "verifed_purchaser": " strategic", "helpful_count": " and epic for you", "not_helpful_count": " then give Supreme Commander 2 a try!  You should feel right at home in this slop show.\"", "reviewed_at": "No: I don\u2019t recommend this product", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "0", "reviews_count": "0", "comment_id": "11 years ago", "uniq_id": "1", "scraped_at": "3.4091", "index_stringindexer_transform": 294.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 394.0, "review_title_stringindexer_transform": 319.0, "review_description_stringindexer_transform": 110.0, "recommended_review_stringindexer_transform": 6.0, "verifed_purchaser_stringindexer_transform": 9.0, "helpful_count_stringindexer_transform": 10.0, "not_helpful_count_stringindexer_transform": 11.0, "reviewed_at_stringindexer_transform": 25.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 15.0, "reviews_count_stringindexer_transform": 10.0, "comment_id_stringindexer_transform": 360.0, "uniq_id_stringindexer_transform": 190.0, "scraped_at_stringindexer_transform": 14.0}, {"index": "209", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "DemonWolfC6", "review_title": "Nothing like the first two!", "review_description": "\"Okay, so yeah, it's pretty much like the first two in the basics: the three factions, the basic units (Some of the basic units are straight out of SupCom 1 and Forged Alliance), and one big war. On almost everything else it's completely revamped. Upgrading has been replaced with \"\"Researching\"\"", "recommended_review": " which really adds more hassle to the game", "verifed_purchaser": " but also adds a new era of customization because instead of just going up levels 1", "helpful_count": " 2", "not_helpful_count": " 3", "reviewed_at": " and Experimental", "rating": " you can have multiple branches of different customizations", "average_rating": " depending on your favored style of play. You can even simply upgrade what units you have instead of the old \"\"send oldies to suicide to make room for the new guys\"\" strategy. Actually", "reviews_count": " it is BETTER to keep the oldies instead of suiciding them", "comment_id": " because the longer they stay on the battlefield", "uniq_id": " the deadlier they become thanks to experience now. The much-famed and even moreso whined-about economy that made SupCom 1 and Forged Alliance so famous (or infamous", "scraped_at": " lol) has been DRASTICALLY simplified", "index_stringindexer_transform": 162.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 100.0, "review_title_stringindexer_transform": 227.0, "review_description_stringindexer_transform": 252.0, "recommended_review_stringindexer_transform": 8.0, "verifed_purchaser_stringindexer_transform": 14.0, "helpful_count_stringindexer_transform": 18.0, "not_helpful_count_stringindexer_transform": 36.0, "reviewed_at_stringindexer_transform": 33.0, "rating_stringindexer_transform": 16.0, "average_rating_stringindexer_transform": 8.0, "reviews_count_stringindexer_transform": 11.0, "comment_id_stringindexer_transform": 167.0, "uniq_id_stringindexer_transform": 232.0, "scraped_at_stringindexer_transform": 12.0}, {"index": "210", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Gamerguy", "review_title": "Great picture quality", "review_description": "I bought this to play my ps5 and not only thengames look great but movies too", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227695298", "uniq_id": "6dbed12c-450d-541a-a190-c15f03c40aa6", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 366.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 141.0, "review_title_stringindexer_transform": 369.0, "review_description_stringindexer_transform": 360.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 300.0, "uniq_id_stringindexer_transform": 136.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "211", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Mkaz", "review_title": "Just short of 5", "review_description": "Waiting for the firmware update, then I can update to 5 stars", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227689648", "uniq_id": "ddd95f84-96b2-5c7d-bb7c-53c36e6df414", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 452.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 30.0, "review_title_stringindexer_transform": 281.0, "review_description_stringindexer_transform": 140.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 385.0, "uniq_id_stringindexer_transform": 139.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "212", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "MRDSIGN", "review_title": "Great Value For OLED", "review_description": "\"Great TV with all up to date technology. From Dolby Vision and Atmos, HDR10 + etc... Perfect for gaming HDMI 2.1. I trust in Vizio products I bought a 60\"\" in 2012 and still running (2021).\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227681843", "uniq_id": "c636381d-0229-527d-99a8-bff81d749a13", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 125.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 59.0, "review_title_stringindexer_transform": 50.0, "review_description_stringindexer_transform": 432.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 84.0, "uniq_id_stringindexer_transform": 14.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "213", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Rcmm", "review_title": "Beautiful Thing", "review_description": "I purchased the 65 inch OLED 1 week ago!  The TV is beautiful!  Deep blacks & colors are great right out of the box!  You will have to do nothing to get this TV to look great.  I wish they had offered a 75 inch OLED but I am sure this will come!  Picture processing is good as well!  I recommend this TV to my friends!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227672104", "uniq_id": "4d3e75a4-f345-5e58-bdec-b17eba6b54e8", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 241.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 312.0, "review_title_stringindexer_transform": 79.0, "review_description_stringindexer_transform": 358.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 241.0, "uniq_id_stringindexer_transform": 150.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "214", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Angela W", "review_title": "Incredibly Beautiful Display", "review_description": "I picked this OLED Vizio for the intensely beautiful picture and I have not been disappointed. It's incredible for gaming on my PlayStation, and watching vivid shows.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227658242", "uniq_id": "c434c843-886f-51ac-be66-1444953b1f34", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 333.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 381.0, "review_title_stringindexer_transform": 324.0, "review_description_stringindexer_transform": 123.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 70.0, "uniq_id_stringindexer_transform": 390.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "215", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Shaun7979", "review_title": "To many problems out the box.", "review_description": "Problems turning OLED tv on. So I returned it and got another one.  The screen had a green tint to it so I returned it and got my money back. Plus the VRR didn\u2019t work.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227639598", "uniq_id": "e98cc6f9-fb85-5bc5-8a5f-709d56e7a08a", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 419.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 368.0, "review_title_stringindexer_transform": 74.0, "review_description_stringindexer_transform": 362.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 369.0, "uniq_id_stringindexer_transform": 125.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "216", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Blurr60", "review_title": "Skinny", "review_description": "I love how skinny it is and how much cooler it runs, the picture is awesome!! Gorgeous unit !", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227614951", "uniq_id": "ab190533-6515-5e00-991f-36666c9cb8f4", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 31.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 69.0, "review_title_stringindexer_transform": 44.0, "review_description_stringindexer_transform": 198.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 228.0, "uniq_id_stringindexer_transform": 247.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "217", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Twan", "review_title": "Price to feature king!", "review_description": "Wonderful image, oodles of features and an asking price that\u2019s within  reach of the average consumer, what more Can you ask for.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227582245", "uniq_id": "b69b8ac8-89ff-5e89-9697-52a682ad0e76", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 148.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 248.0, "review_title_stringindexer_transform": 197.0, "review_description_stringindexer_transform": 378.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 86.0, "uniq_id_stringindexer_transform": 284.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "218", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Res136", "review_title": "Great picture", "review_description": "I\u2019ve always liked Visio. My first 50\u201d had one backlight diode burn out after 7yrs heavy use. Replaced with 50\u201d nano Visio. I was happy with the upgrade. Figured I could get a 55\u201d within the space constraint I had. Got this one as open box. And WOW! The picture POPS of vibrancy and consistent brightness.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227560725", "uniq_id": "b707b4b5-8acc-5c69-9279-f1029422274c", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 431.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 353.0, "review_title_stringindexer_transform": 3.0, "review_description_stringindexer_transform": 96.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 33.0, "uniq_id_stringindexer_transform": 272.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "219", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jcompu466", "review_title": "Great video!", "review_description": "I got this TV 3 weeks ago and so far I love it/ easy to operate/ easy to hook up other devices to it //Great TV", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227547589", "uniq_id": "ce132a16-19ad-5dc1-a222-9a18b7751770", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 255.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 9.0, "review_title_stringindexer_transform": 307.0, "review_description_stringindexer_transform": 216.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 164.0, "uniq_id_stringindexer_transform": 234.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "220", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Astraeus", "review_title": "Beautiful", "review_description": "Beautiful controller. I only changed the D-Pad and still calibrating but it is perfect.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190970117", "uniq_id": "51346905-fab9-5ddd-bdc0-a3e78448129b", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 421.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 189.0, "review_title_stringindexer_transform": 175.0, "review_description_stringindexer_transform": 251.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 247.0, "uniq_id_stringindexer_transform": 70.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "221", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "dRn00bies", "review_title": "Solid slaying ordanince", "review_description": "Glorious equipment for slaying all who oppose Spartan 117!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190958407", "uniq_id": "6f4b378a-4b78-5beb-bcc2-2aea05ea730a", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 290.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 314.0, "review_title_stringindexer_transform": 146.0, "review_description_stringindexer_transform": 214.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 13.0, "uniq_id_stringindexer_transform": 23.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "222", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Nicole F", "review_title": "GAME CHANGER.", "review_description": "I got this as a gift for my boyfriends birthday. I don\u2019t play Xbox and I\u2019ve never played halo but I was completely BLOWN AWAY by this controller. It feels amazing I think the way it was designed was incredible and totally worth the money. My bf LOVED it and made me consider becoming an Xbox gamer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190900156", "uniq_id": "15117320-4aa0-5f15-8d9f-44eb7891adfd", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 433.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 51.0, "review_title_stringindexer_transform": 86.0, "review_description_stringindexer_transform": 234.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 355.0, "uniq_id_stringindexer_transform": 65.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "223", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "David Armando", "review_title": "Very Good", "review_description": "This controller is amazing and beautiful I\u2019m glad to have it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190899558", "uniq_id": "7578b6e5-5098-5f49-b320-ee99268986f4", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 29.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 31.0, "review_title_stringindexer_transform": 49.0, "review_description_stringindexer_transform": 376.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 31.0, "uniq_id_stringindexer_transform": 392.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "224", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "spartan19", "review_title": "Weapon of choice for Halo Infinite", "review_description": "Love the elite series 2 controller and with a halo paintjob.... it's almost perfect. I kinda wish this would have included the updated series x/s share button but that's a minor complaint. With the latest xbox update, it's now able to quickly connect to 2 paired devices which is probably the best feature of the updated series x/s controllers so I'm happy with that. If you love Halo and were thinking about getting an elite controller, this is the one you want.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190826055", "uniq_id": "e19bd9fd-6c3b-596b-9014-d6d8e6238e37", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 129.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 376.0, "review_title_stringindexer_transform": 48.0, "review_description_stringindexer_transform": 158.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 159.0, "uniq_id_stringindexer_transform": 338.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "225", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "BxBNicX", "review_title": "Best controller ever", "review_description": "Its similar to the regular elite it just feels lighter quality feels slightly better and it looks so hecking cool in person so many details that the pictures dont do it justice", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190820482", "uniq_id": "31786614-0e1e-5a38-9e27-8f23084e6ee1", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 331.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 167.0, "review_title_stringindexer_transform": 125.0, "review_description_stringindexer_transform": 373.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 153.0, "uniq_id_stringindexer_transform": 317.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "226", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "The name John was taken", "review_title": "Sickest looking Halo Controller Ever", "review_description": "Performs like you expect the Elite Series 2 to do so, but with the added benefit of looking wicked. By far the coolest controller I\u2019ve owned. Hopefully it will keep nice and not develop rub marks from fingers.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190815305", "uniq_id": "3ae8c7e2-1f22-5cd8-9992-6d5f03e37b8b", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 463.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 212.0, "review_title_stringindexer_transform": 29.0, "review_description_stringindexer_transform": 133.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 335.0, "uniq_id_stringindexer_transform": 353.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "227", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Jrjbaj", "review_title": "Solid improvement over the Series 1", "review_description": "I had the series one which still works great, but decided to upgrade for the better paddles and internal battery. I am very pleased with this product not only because its Halo but it does feel like a substantial improvement over the previous generation. I'm still trash though...", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190807964", "uniq_id": "df9c8e11-c20e-5a8b-b090-975550d21a38", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 116.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 126.0, "review_title_stringindexer_transform": 187.0, "review_description_stringindexer_transform": 315.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 15.0, "uniq_id_stringindexer_transform": 194.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "228", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "PetLover62", "review_title": "Halo Fanatic Gift", "review_description": "Great for Halo fanatic.  It weighs a lot more than your standard controller.  Bought as Christmas present for the Halo fanatic.  Splurged on the 2 year warranty just in case too.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190805061", "uniq_id": "9d91f740-ff30-5f49-a9e7-32cf33d739c5", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 222.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 243.0, "review_title_stringindexer_transform": 390.0, "review_description_stringindexer_transform": 355.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 59.0, "uniq_id_stringindexer_transform": 311.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "229", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Gamer Man77", "review_title": "Getting what you want", "review_description": "It\u2019s a great looking controller but without the console to match, it will be lonely. Very hard to pick up the items you want unless you want to pay ridiculous prices from scalpers who seem to get these items with ease. But still a great looking controller.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190803084", "uniq_id": "fed5a40d-6b6a-5212-aab1-7d644fd4c0d0", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 482.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 305.0, "review_title_stringindexer_transform": 272.0, "review_description_stringindexer_transform": 291.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 245.0, "uniq_id_stringindexer_transform": 332.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "230", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Patrick Giles", "review_title": "Simple game for Beginning Gamers", "review_description": "Pretty simple game, great for younger games, way too many things to have to collect.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126755575", "uniq_id": "017d9f32-3702-5eb4-b1fb-7426864383c7", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 301.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 8.0, "review_title_stringindexer_transform": 350.0, "review_description_stringindexer_transform": 285.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 43.0, "uniq_id_stringindexer_transform": 176.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "231", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Blackfeather666", "review_title": "Yoshi's crafted world", "review_description": "Good game. kinda on the kid side of game, my kids like it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126755116", "uniq_id": "21945403-7c2d-5e53-bdec-30fc9caec384", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 183.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 96.0, "review_title_stringindexer_transform": 14.0, "review_description_stringindexer_transform": 253.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 199.0, "uniq_id_stringindexer_transform": 1.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "232", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Dadadum", "review_title": "#1", "review_description": "Game is great for parents to play with their kids.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126754711", "uniq_id": "f9469cbd-8ad3-5f74-9b6d-3aefeaf073c7", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 453.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 384.0, "review_title_stringindexer_transform": 263.0, "review_description_stringindexer_transform": 244.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 281.0, "uniq_id_stringindexer_transform": 329.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "233", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Mr Dingus", "review_title": "Fun!", "review_description": "Very fun! As someone playing through sekiro, this was a nice pallet cleanser.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126754570", "uniq_id": "2c072257-f611-5e72-a1ab-5dc75ef88f59", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 170.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 399.0, "review_title_stringindexer_transform": 22.0, "review_description_stringindexer_transform": 257.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 123.0, "uniq_id_stringindexer_transform": 343.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "234", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "DarkEmpressAly", "review_title": "It's okay, but not the best Yoshi title.", "review_description": "I had an open mind when deciding to play this game and after clearing the first world, it just wasn't for me. Compared to Woolly World, this game was lacking in several departments; the music was repetitive, the skill level was far too low even for just the first world and the game doesn't reward you nearly as much as Woolly World did in terms of amiibo. I'd recommend this for die-hard Yoshi fans or kids age 5 through 9.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126746667", "uniq_id": "1fc8da0f-ab3c-5904-b6d7-e967083ec472", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 259.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 284.0, "review_title_stringindexer_transform": 380.0, "review_description_stringindexer_transform": 262.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 204.0, "uniq_id_stringindexer_transform": 61.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "235", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "mariofamily", "review_title": "Yoshi\u2019s crafted world", "review_description": "The kids (6 and 3) love it. And I love that they can play together. My 3 year old doesn\u2019t know what she\u2019s doing but my 6 year old helps her. Yoshi\u2019s crafted world game is also fun for parents :)", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126742656", "uniq_id": "3d6378f1-c8fb-53b7-9080-d2429741d858", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 402.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 325.0, "review_title_stringindexer_transform": 200.0, "review_description_stringindexer_transform": 273.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 325.0, "uniq_id_stringindexer_transform": 393.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "236", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "DaddyRay78", "review_title": "Yoshi's Crafted World Review", "review_description": "Simply amazing. My son and I are loving this game. It's so creative and well thought out.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126737441", "uniq_id": "2d87329c-fbd9-571f-981d-46ff995fd728", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 96.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 104.0, "review_title_stringindexer_transform": 301.0, "review_description_stringindexer_transform": 290.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 178.0, "uniq_id_stringindexer_transform": 188.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "237", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Amanda Cooper", "review_title": "Yoshis Crafted World", "review_description": "So much fun! For all ages! We have from age 4 to 34 who love to play.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126736040", "uniq_id": "d9d6ab84-c03e-5838-a724-e49e367d0fdd", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 205.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 215.0, "review_title_stringindexer_transform": 83.0, "review_description_stringindexer_transform": 213.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 141.0, "uniq_id_stringindexer_transform": 267.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "238", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JA II", "review_title": "Great", "review_description": "Bought this game for my son, but i enjoy playing it too.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126678115", "uniq_id": "03ef4326-bd0d-5d6d-8a82-673db2023dca", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 374.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 324.0, "review_title_stringindexer_transform": 131.0, "review_description_stringindexer_transform": 105.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 278.0, "uniq_id_stringindexer_transform": 220.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "239", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "MM213", "review_title": "One of the best games!", "review_description": "My family and I really enjoy using the Nintendo Switch and I must say this is by far one of the best games ever! Super cute yet challenging at times. There\u2019s a gum ball where you can insert coins and collect costumes. There\u2019s also a flip side to the game where you interact and catch little puppies. Just when you think you\u2019ve completely the level there\u2019s other mini challenges like a scavenger hunt. You should purchase this game you won\u2019t regret it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126641084", "uniq_id": "1892e4f2-a10d-5cbe-ae9e-af24f821912b", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 497.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 76.0, "review_title_stringindexer_transform": 304.0, "review_description_stringindexer_transform": 206.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 56.0, "uniq_id_stringindexer_transform": 98.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "240", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Anonymous", "review_title": "A fun RTS", "review_description": "So far I've enjoyed playing SC2. there are a handful of differences between it and its predecessors both good and bad, The battles aren't as big as the ones from Supreme commander, but they are still brilliant, the new research is fun, as well as expanding buildings with tactical add on pieces even if they are minor one's, and the fact you can replace your ACU without permanently losing it now, and the new upgrades for the ACU, and units. Most of the cons I've found so far are, requiring steam, the smaller battlefields, and other minor problems which may be fixed eventually in updates. It lacks the feeling of the original game but its still fun to play I'd recommend to everyone that they try the demo on steam first before deciding. Overall I rate this 7 out of 10.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "4", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250434", "uniq_id": "b773b1a6-5b9a-5f68-9670-3489f0334157", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 446.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 219.0, "review_description_stringindexer_transform": 369.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 34.0, "uniq_id_stringindexer_transform": 224.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "241", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Androl123", "review_title": "Sooooo disapointing", "review_description": "First off, you need to have Steam installed on your computer. Thanks for the heads-up on this Square. You buy a hard copy of the game but then have to log in to Steam to download it from their servers.....really? Some people are showing a 9 hour wait time to be able to play. Again, really? Second, they destroyed the economy and the basic gameplay of the original game and its expansion. None of it even matters any more. Its just a zerg fest. Most people think its due to the console being added to this title and thereby attempting to expand their market. They broke what made the first game such a huge hit. Gone are the days of epic battles for my 3rd point. Maps are now 5kmx5km. WAY too small. Fourth, you can't save/load in skirmish play. Soooo, if you have to leave in the middle of a longer lasting game (not real sure how this will happen being that everything is so small-but want to give them the benefit of the doubt for future content added updates), too bad. Can't save. Fifth, the voice acting and story line for the campaign is just plain stupid. I guess I could go on but I'm sure I've expressed my opinion enough for folks to understand where I'm coming from. This is just insulting to people who have been really looking forward to this title. There was a reason the first game was as much of a success as it was. Well, Square Enix effectively threw that out the window and scrapped it all. Good job.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "2", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250431", "uniq_id": "d0cf2335-6dea-596b-8480-460279c701a9", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 270.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 307.0, "review_title_stringindexer_transform": 186.0, "review_description_stringindexer_transform": 116.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 174.0, "uniq_id_stringindexer_transform": 112.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "242", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "RayMel5", "review_title": "Really nice Controller", "review_description": "I haven\u2019t used it yet but the unboxing was amazing. This is a really nice looking controller. It really feels right.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190795136", "uniq_id": "7597e0e9-5e76-5dde-8bf8-327904575e9f", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 143.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 249.0, "review_title_stringindexer_transform": 383.0, "review_description_stringindexer_transform": 177.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 67.0, "uniq_id_stringindexer_transform": 238.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "243", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "VALumiere", "review_title": "The best Xbox Controller for a Halo fan!!!", "review_description": "This controller is GAWGEOUS!!!!! I love the cosmetic design of it, the rubberized grips, the back paddles and the accessories! It comes with it's own wireless charger, interchangeable analog thumb sticks, and D-pad. The design is reflective of Master Chiefs armor. I LOVE IT!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190786135", "uniq_id": "269f8e2e-b3e2-54a2-af5b-504e0de18999", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 462.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 311.0, "review_title_stringindexer_transform": 115.0, "review_description_stringindexer_transform": 383.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 381.0, "uniq_id_stringindexer_transform": 358.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "244", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Mikeiceman", "review_title": "Halo infinite Elite Controller", "review_description": "Amazing controller well worth the money solid feel and looks fantastic i want to buy a second one already", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190783552", "uniq_id": "a2db9996-35e7-58d7-ada1-a48703f0843e", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 132.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 80.0, "review_title_stringindexer_transform": 120.0, "review_description_stringindexer_transform": 44.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 162.0, "uniq_id_stringindexer_transform": 255.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "245", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "PM117ER", "review_title": "Looks pretty - never worked", "review_description": "It came broken\u2026. Stick drift on the right thumb stick right out of the box.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "1", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190766977", "uniq_id": "c61a0a2e-6150-5816-827e-7d7fc7f7f94e", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 316.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 52.0, "review_title_stringindexer_transform": 236.0, "review_description_stringindexer_transform": 87.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 118.0, "uniq_id_stringindexer_transform": 24.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "246", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Patrick w7", "review_title": "Fast shipping. Awesome controller", "review_description": "Quality feel and looks awesome. Also arrived early on the 15th was shipped next day air.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190764517", "uniq_id": "2926a631-7fde-5f98-beff-434285a55c73", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 341.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 388.0, "review_title_stringindexer_transform": 342.0, "review_description_stringindexer_transform": 386.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 89.0, "uniq_id_stringindexer_transform": 381.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "247", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "JakeO62", "review_title": "Exactly what I was looking for", "review_description": "Exactly what I was looking for in a controller and the Halo fan in me loves the Halo theme on the controller", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190762148", "uniq_id": "c89c209b-87b7-51c6-b645-604bd2589c10", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 413.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 276.0, "review_title_stringindexer_transform": 141.0, "review_description_stringindexer_transform": 387.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 226.0, "uniq_id_stringindexer_transform": 180.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "248", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Rambo34", "review_title": "Bumpers", "review_description": "Its good just sucks how the bumpers dont like to work sometimes its vrandnew", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190763953", "uniq_id": "fa3daaef-6785-5e0d-a7a0-53a2605e5a60", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 247.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 202.0, "review_title_stringindexer_transform": 122.0, "review_description_stringindexer_transform": 129.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 156.0, "uniq_id_stringindexer_transform": 5.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "249", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "jws1025", "review_title": "Halo Elite Controller", "review_description": "Beautiful controller (just need the console to go with it). GameStop packaged it well and sent it super fast. It actually arrived prior to release date. Now I just need the console!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190763710", "uniq_id": "6ac96e96-d51b-5c49-8a2a-f21a298a2960", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 337.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 151.0, "review_title_stringindexer_transform": 162.0, "review_description_stringindexer_transform": 138.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 120.0, "uniq_id_stringindexer_transform": 81.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "250", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Mattoxbox", "review_title": "Great controller", "review_description": "Great controller that feels better than the standard ones. Paddles are useful in gameplay and the color scheme is great. You also recieve a code for the controller as an accessort in Halo Infinite.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190763007", "uniq_id": "d433a372-ec33-57de-af65-ddd03d8458ed", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 117.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 132.0, "review_title_stringindexer_transform": 4.0, "review_description_stringindexer_transform": 370.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 197.0, "uniq_id_stringindexer_transform": 256.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "251", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Ellie RA", "review_title": "High quality controller", "review_description": "High quality packaging, nice dock and very long usb-c cord. Even the packaging was superb. Everything was secure to make sure nothing would be damaged in shipping. It is very true to the pictures and works great!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190761169", "uniq_id": "be19f9b0-7d18-50c2-8f4f-d22f83fd1081", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 435.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 287.0, "review_title_stringindexer_transform": 130.0, "review_description_stringindexer_transform": 22.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 215.0, "uniq_id_stringindexer_transform": 90.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "252", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "mdfsandman", "review_title": "Great picture.  easy setup", "review_description": "I had no problems after mounting the TV and the set up was a breeze", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227514155", "uniq_id": "a56d9282-4860-5371-9f05-a9bd99c99914", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 260.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 222.0, "review_title_stringindexer_transform": 264.0, "review_description_stringindexer_transform": 36.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 103.0, "uniq_id_stringindexer_transform": 168.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "253", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "thearchie32", "review_title": "Worth the Money!!!", "review_description": "Had this TV for a month now and it's worth every penny. Don't listen to all the negative you've been hearing about Vizio. They have done a really good job with all their new high end televisions.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227512948", "uniq_id": "58a3cd56-3757-5683-bf5e-043f7dc92826", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 161.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 77.0, "review_title_stringindexer_transform": 367.0, "review_description_stringindexer_transform": 197.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 18.0, "uniq_id_stringindexer_transform": 210.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "254", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "boilerone", "review_title": "Great picture!", "review_description": "I just bought this item and am so excited to watch sports and movies on it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227493289", "uniq_id": "a9fd61c1-57e1-5036-8cf4-01149ac3e34d", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 451.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 54.0, "review_title_stringindexer_transform": 105.0, "review_description_stringindexer_transform": 160.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 17.0, "uniq_id_stringindexer_transform": 213.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "255", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Quando", "review_title": "No Slouch", "review_description": "Compared to the LG CX and Sony A8H the picture quality is way better than Sony's OLED.  THOSE Reviews online are biased and not accurate IMO.  Not a fan of smartcast yet over android TV. TV Has some firmware glitches.  Sound from TV speakers is OK not as nice as the Sony's; however this is a one Heck of An OLED with no black Crush....", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227489183", "uniq_id": "c3f3597b-51a8-5aec-a613-90242e40e8d8", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 154.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 282.0, "review_title_stringindexer_transform": 178.0, "review_description_stringindexer_transform": 93.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 39.0, "uniq_id_stringindexer_transform": 205.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "256", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "None, none", "review_title": "Wonderful Christmas present from the kids", "review_description": "We were looking at one but am the type of people who wi only purchase an item like this when the one we have goes bad. Now the old one will go into the basement.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227489075", "uniq_id": "cec310ca-6de1-5376-8bfb-8be08ffd1b87", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 207.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 156.0, "review_title_stringindexer_transform": 138.0, "review_description_stringindexer_transform": 56.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 382.0, "uniq_id_stringindexer_transform": 116.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "257", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jos\u00e9viera264", "review_title": "look out gamerz, here comez awsome", "review_description": "The best \u201cAmerican product 100% costumer satisfacci\u00f3n  guaranteed", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227469318", "uniq_id": "fe663898-37db-56ab-9d32-c3d52f93b4e5", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 329.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 142.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 293.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 45.0, "uniq_id_stringindexer_transform": 208.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "258", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "The truth", "review_title": "Bad picture", "review_description": "I bought this tv and set it up at home but it was quite obvious to me that the feed I was watching on this tv in the store was optimized for the tv for better picture. At home however, it was grainy and looked like motion flip art like the one you draw and flip through. The tv was so hot I thought I bought a hp laptop.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227466484", "uniq_id": "d95796b1-88cb-5c86-bc22-0bc9db290b2f", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 415.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 99.0, "review_title_stringindexer_transform": 76.0, "review_description_stringindexer_transform": 327.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 144.0, "uniq_id_stringindexer_transform": 294.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "259", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "A-bomb", "review_title": "Amazing TV", "review_description": "This was my wife\u2019s and my anniversary gift to each other. We regularly watch movies, and we are amazed at how the cinematographer\u2019s vision is articulated with this tv.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227455329", "uniq_id": "4a2b7da3-cc8e-59cd-9dc0-ffa2af5d19c6", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 245.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 219.0, "review_title_stringindexer_transform": 328.0, "review_description_stringindexer_transform": 202.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 22.0, "uniq_id_stringindexer_transform": 103.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "260", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "John26", "review_title": "Great features, awesome picture, and easy set up.", "review_description": "I\u2019ve had this TV for about a month of movies and gaming, couldn\u2019t be happier.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227437332", "uniq_id": "0790d8e1-1514-528a-8f1e-1e5dc035db8b", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 359.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 269.0, "review_title_stringindexer_transform": 229.0, "review_description_stringindexer_transform": 47.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 30.0, "uniq_id_stringindexer_transform": 263.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "261", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "dmartinez097", "review_title": "Pristine Image!", "review_description": "The image on the tv is fantastic and the sleek slim design gives it that pop aesthetic that the \u201cworld\u201d within the TVs borders is almost life-like to the touch.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227433603", "uniq_id": "4984011a-1fca-57b5-89a6-e76c780daaf7", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 410.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 118.0, "review_title_stringindexer_transform": 384.0, "review_description_stringindexer_transform": 316.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 48.0, "uniq_id_stringindexer_transform": 52.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "262", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "JPez1", "review_title": "Amazing controller", "review_description": "Great controller! Only wish I had the halo Xbox to go with it", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190758968", "uniq_id": "7ca99b13-422b-5892-a441-b2dd7bf7a000", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 113.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 149.0, "review_title_stringindexer_transform": 23.0, "review_description_stringindexer_transform": 277.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 29.0, "uniq_id_stringindexer_transform": 38.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "263", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Luccon7", "review_title": "Amazing", "review_description": "This is the elite series 2 but they did an excellent job with the halo theme. The best controller with now an awesome new paint job.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190758657", "uniq_id": "f5f793cc-dd08-5247-9ace-2498e78f061d", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 206.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 233.0, "review_title_stringindexer_transform": 21.0, "review_description_stringindexer_transform": 339.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 100.0, "uniq_id_stringindexer_transform": 143.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "264", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "xTheSandman72", "review_title": "Fun game!", "review_description": "Fun game, really nice visuals. It's an easier platform so more people can enjoy it, but seasoned gamers will like the collectables available, which give replay value to the game and a bit more challenge.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126629986", "uniq_id": "d8b5b07f-b13b-58cc-b896-615b9ad105d5", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 327.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 285.0, "review_title_stringindexer_transform": 160.0, "review_description_stringindexer_transform": 233.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 71.0, "uniq_id_stringindexer_transform": 307.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "265", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Doomcrew", "review_title": "Green mean Machine.", "review_description": "One of must fun Nintendo games I've played in a long time.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126619345", "uniq_id": "de0956d4-0d06-55f1-afce-9551324185ce", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 56.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 359.0, "review_title_stringindexer_transform": 126.0, "review_description_stringindexer_transform": 222.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 28.0, "uniq_id_stringindexer_transform": 133.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "266", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Da1trueS4nch3Z", "review_title": "Yoshi is awesome", "review_description": "Nintendo does it again with sweet crisp graphics and my kids love yoshi", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126599299", "uniq_id": "2dc7e561-ee75-5e53-ad76-2859903df7c3", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 368.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 42.0, "review_title_stringindexer_transform": 225.0, "review_description_stringindexer_transform": 50.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 108.0, "uniq_id_stringindexer_transform": 235.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "267", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "NexusWolf", "review_title": "A wonderful addition to the Yoshi game series", "review_description": "If you enjoyed Wooly World, you'll love Crafted world. This game is a great addition to the Yoshi series and adds fun mechanics unique to this game. It does have a 2 player mode and would be fun to play with a less experienced game. Overall presentation is great, control is simple, and platforming is fun. Nintendo game prices hardly comes down, so if price is a factor, pre-owned with PowerUp Rewards discount really helps mitigate the cost, and maybe invest those points. Either way, top notch Yoshi game and a must play for Yoshi fans.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126597316", "uniq_id": "f255781b-e9a0-57c1-a451-7a35a3332573", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 287.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 290.0, "review_title_stringindexer_transform": 373.0, "review_description_stringindexer_transform": 150.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 362.0, "uniq_id_stringindexer_transform": 335.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "268", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "The1stAv3ng3r", "review_title": "Great game", "review_description": "Great fun, reminds me of Yoshi's World from when I was a kid", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126588300", "uniq_id": "aaaaa9b0-6933-56cd-982c-9093972c44ea", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 191.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 150.0, "review_title_stringindexer_transform": 10.0, "review_description_stringindexer_transform": 279.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 40.0, "uniq_id_stringindexer_transform": 42.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "269", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JCMB", "review_title": "Love Yoshi!!", "review_description": "Love the extras each level has. Not a fan of yoshi smash level but in general love the game!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126586642", "uniq_id": "173c87ef-e2a6-5ad3-89a4-432c8c9b8d3b", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 83.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 32.0, "review_title_stringindexer_transform": 170.0, "review_description_stringindexer_transform": 402.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 146.0, "uniq_id_stringindexer_transform": 88.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "270", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "cheeseman585", "review_title": "A Modern Take on Yoshi's Story", "review_description": "This is a proper modern evolution of the Yoshi formula.  Giving you access to the fore- and background when throwing eggs adds an extra dimension of exploration and the collectibles are definitely worth getting.  The flower requirement to progress to new areas is rarely difficult to fulfill, but it emphasizes the collection aspect in a game that gives you a lot of tools to do so and is chock-full of stuff to see.  If you've ever loved playing a platformer, you need to play this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126576266", "uniq_id": "a5a4fa33-a821-53a1-82a9-e28573bb422f", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 224.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 162.0, "review_title_stringindexer_transform": 287.0, "review_description_stringindexer_transform": 256.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 209.0, "uniq_id_stringindexer_transform": 19.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "271", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Sixkids", "review_title": "Good investment", "review_description": "A few weeks before the game came out I downloaded the demo just to see if my six year old son was going to play it and he and when the game came out I got it for his bday and he have not put it down", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126565334", "uniq_id": "5cb903ed-3a8c-5949-adae-8c1573defb6d", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 380.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 159.0, "review_title_stringindexer_transform": 348.0, "review_description_stringindexer_transform": 310.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 301.0, "uniq_id_stringindexer_transform": 202.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "272", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jerk unit", "review_title": "A definitely must pickup", "review_description": "Great game! Side scrolling puzzle solver better than I anticipated and can\u2019t put it down. There is a gum ball machine for different costumes ADDICTING haha", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126559156", "uniq_id": "0458081f-b0d0-51c3-a5bf-819b1d1ea16b", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 434.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 191.0, "review_title_stringindexer_transform": 232.0, "review_description_stringindexer_transform": 9.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 314.0, "uniq_id_stringindexer_transform": 124.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "273", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "TheArgyleWizard", "review_title": "Fun, Beautiful, and Appropriately Challenging", "review_description": "Yoshi\u2019s Crafted World is an amazing game! It is beautifully designed and appropriately challenging. The ability to play two players is also great as my wife and I like to game together. I would definitely recommend it to anyone who owns a switch, especially those who want to play some couch co-op.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126552237", "uniq_id": "0370dddc-2aae-508a-b44d-122e6d641c33", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 101.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 275.0, "review_title_stringindexer_transform": 238.0, "review_description_stringindexer_transform": 269.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 348.0, "uniq_id_stringindexer_transform": 354.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "274", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "CampM", "review_title": "Love it.", "review_description": "Bought this for a Christmas Gift for my husband and myself. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 196.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 272.0, "review_title_stringindexer_transform": 332.0, "review_description_stringindexer_transform": 390.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "It's great...color", "name": " sound and price. We have had Visos in the past and have been very pleased.\"", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "5", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "227425437", "reviewed_at": "2903b4fb-38c1-5b18-86e4-223040292dc1", "rating": "16/01/2022 16:18:02", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 256.0, "name_stringindexer_transform": 27.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 4.0, "recommended_review_stringindexer_transform": 4.0, "verifed_purchaser_stringindexer_transform": 4.0, "helpful_count_stringindexer_transform": 4.0, "not_helpful_count_stringindexer_transform": 25.0, "reviewed_at_stringindexer_transform": 32.0, "rating_stringindexer_transform": 17.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "275", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Carebear43055", "review_title": "Great picture Quality", "review_description": "Got this in time to have it up on the wall Christmas day. The family loved it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227368178", "uniq_id": "3b4eb371-c531-5ab8-ac2b-889dd0e24cfd", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 344.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 308.0, "review_title_stringindexer_transform": 364.0, "review_description_stringindexer_transform": 167.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 183.0, "uniq_id_stringindexer_transform": 49.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "276", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Anonymous", "review_title": "Need better smart app!", "review_description": "The app sometimes glitches green and I need to power cycle yhr TV to work right. Also, I can't seem to download other apps that seems to be essential. Example Crunchyroll.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227336919", "uniq_id": "11982b37-c606-5a12-a2fe-1999da7e9a6a", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 46.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 67.0, "review_description_stringindexer_transform": 120.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 372.0, "uniq_id_stringindexer_transform": 26.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "277", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "CWB!", "review_title": "Great features & Amazing color and clarity", "review_description": "Bought the TV right before Christmas - just amazing clarity and color", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227333306", "uniq_id": "049e260f-a2e3-5ee2-8422-c0b928f66317", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 387.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 326.0, "review_title_stringindexer_transform": 107.0, "review_description_stringindexer_transform": 211.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 90.0, "uniq_id_stringindexer_transform": 319.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "278", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "RickZ", "review_title": "Great so far!", "review_description": "Excellent picture quality and very easy to set up!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227330788", "uniq_id": "5542b8bf-ac17-55f6-937a-1d90f91b9677", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 312.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 391.0, "review_title_stringindexer_transform": 245.0, "review_description_stringindexer_transform": 241.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 223.0, "uniq_id_stringindexer_transform": 44.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "279", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "The Doctor", "review_title": "Stunning Picture", "review_description": "\"About 10 years ago I purchased my first Vizio 54\"\" just months after its release.  It held up well until one day it just didnt turn on.  Lights on", "recommended_review": " but no one is home", "verifed_purchaser": " type of.  So in the spirit of the shopping season i jumped at a another brand new Vizio product", "helpful_count": " this OLED 55\"\".  ", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 177.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 367.0, "review_title_stringindexer_transform": 201.0, "review_description_stringindexer_transform": 380.0, "recommended_review_stringindexer_transform": 7.0, "verifed_purchaser_stringindexer_transform": 15.0, "helpful_count_stringindexer_transform": 11.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "With its easy to mount", "name": " easy setup", "brand": " the show just begins with its amazing ink black levels", "sku": " beautiful imagery from its 1080P to its upscaling to 4k", "reviewer_name": " to its true 4K Glory. ", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 409.0, "name_stringindexer_transform": 12.0, "brand_stringindexer_transform": 16.0, "sku_stringindexer_transform": 11.0, "reviewer_name_stringindexer_transform": 228.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Out of the box it had a firmware update. and then a week later another.  the 2nd was a bit rude", "name": " as it occurred in the middle of a show without warning.", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 391.0, "name_stringindexer_transform": 33.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "I am using the amazing OLED with a brand new 4k reciever with eARC.  So everying goes through the Amplifiter through a high end HDMI ARC certified cable to the TV's HDMI 1 (eArc).  Most days its running fantastic and smooth as expected.  Although", "name": " the TV has 2 behaviors that need adjusting", "brand": " not sure if its me or a firmware update.  They are: the screen goes blank when new input isnt supplied", "sku": " ie your movie is paused. And you need to press the OK on the remote to wake it up.  Having your show resume", "reviewer_name": " doesnt do it.  and the 2nd is that a few times now", "review_title": " the TV just doesnt see any input on HDMI 1", "review_description": " when clearly the Amplifier is sending signal.  Looking forward to a future firmware to make this TV absolutely perfect!\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227308429", "uniq_id": "9bd8d11d-12c7-5078-8ffd-a76aad22839c", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 377.0, "name_stringindexer_transform": 28.0, "brand_stringindexer_transform": 21.0, "sku_stringindexer_transform": 12.0, "reviewer_name_stringindexer_transform": 301.0, "review_title_stringindexer_transform": 33.0, "review_description_stringindexer_transform": 405.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 8.0, "uniq_id_stringindexer_transform": 89.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "280", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TOGA Sarge", "review_title": "Mr", "review_description": "Very nice picture, nice sound, but, the OLED effect can cause severe headaches in certain people.  There should be some form of medical warning and available solutions.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "2", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227300137", "uniq_id": "deb423a5-9af3-5ba2-b788-afb7f1433960", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 104.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 41.0, "review_title_stringindexer_transform": 82.0, "review_description_stringindexer_transform": 67.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 151.0, "uniq_id_stringindexer_transform": 367.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "281", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "JMCH", "review_title": "look out gamerz, here comez awsome", "review_description": "I purchased this 3 weeks ago and I love the picture quality. After contacting the boae surround  system its like you your in the movies! Great job vizio.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227299158", "uniq_id": "27f54783-5943-5768-8473-f46535b7d205", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 214.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 57.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 172.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 97.0, "uniq_id_stringindexer_transform": 298.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "282", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Margot", "review_title": "Color", "review_description": "I just bought this TV, did not plan on spending this much. This TV is worth every penny. The color is so vivid. Model is sleek and so much thinner than LED.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227277590", "uniq_id": "984c0a44-286b-5f5c-a04b-21f0ec500bb6", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 385.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 257.0, "review_title_stringindexer_transform": 340.0, "review_description_stringindexer_transform": 352.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 311.0, "uniq_id_stringindexer_transform": 237.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "283", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Skeet96", "review_title": "Great picture", "review_description": "I bought this one month ago and I'm glad I did this model.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227277469", "uniq_id": "6ba4d664-9c8a-50a0-80af-696a0a693e1f", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 389.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 239.0, "review_title_stringindexer_transform": 3.0, "review_description_stringindexer_transform": 192.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 16.0, "uniq_id_stringindexer_transform": 382.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "284", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "Anonymous", "review_title": "Fun!!", "review_description": "My son loves this game. Like Super Smash Bros with Kung Fu Panda characters.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "160658457", "uniq_id": "1e939271-deb9-5fe8-a1c4-aa8dbdf78342", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 79.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 376.0, "review_description_stringindexer_transform": 57.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 2.0, "uniq_id_stringindexer_transform": 362.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "285", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "MikeOxlong69", "review_title": "Fun With Friends", "review_description": "I got the game through PS Plus, and I was skeptical at first. However, after playing it with my friends for a little bit, it was some of the most fun I'd had playing a game ever. It's no Citizen Kane, but it does its job as a fun, simple fighting game well.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "157919507", "uniq_id": "23d9c3da-b664-52b4-bf69-0f8a7d077f90", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 242.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 227.0, "review_title_stringindexer_transform": 282.0, "review_description_stringindexer_transform": 329.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 11.0, "uniq_id_stringindexer_transform": 383.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "286", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "TimB76", "review_title": "Super fun", "review_description": "We Bridges this for Christmas for my nephew everyone had a good time playing", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "123364925", "uniq_id": "9bd2d34a-5e61-57c4-9d29-646e5cf6ba26", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 279.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 62.0, "review_title_stringindexer_transform": 223.0, "review_description_stringindexer_transform": 420.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 329.0, "uniq_id_stringindexer_transform": 142.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "287", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "LivinLow", "review_title": "look out gamerz, here comez awsome", "review_description": "I bought this game for my grandson and he absolutely no loves this game...", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "6", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "118294186", "uniq_id": "b1f8541f-3d73-58d4-8fd2-91efc595fc96", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 105.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 358.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 156.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 7.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 255.0, "uniq_id_stringindexer_transform": 198.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "288", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "Neco46", "review_title": "Very Hard to Play!", "review_description": "I bought this game for my daughter because she\u2019s very competitive. We thought it was family friendly but it\u2019s very hard to learn different moves. I had a hard time playing it also and I\u2019m good at playing games.  It\u2019s not the easiest game to play and in my opinion its not for kids either.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "6", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "116746823", "uniq_id": "88ef6fb7-c95f-5675-9d98-c4a50cfd519a", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 438.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 363.0, "review_title_stringindexer_transform": 207.0, "review_description_stringindexer_transform": 30.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 4.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 339.0, "uniq_id_stringindexer_transform": 331.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "289", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "Cbj4892", "review_title": "Nice casual game", "review_description": "My 5 ear old loves this game.  Controls are simple and each fight location has their own challenges.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "116634709", "uniq_id": "b337caff-962c-5242-b3d0-8abebb580064", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 280.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 145.0, "review_title_stringindexer_transform": 286.0, "review_description_stringindexer_transform": 321.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 284.0, "uniq_id_stringindexer_transform": 174.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "290", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "Shaqcool", "review_title": "Game of the year", "review_description": "This game deserves 10 stars but I was only allowed to give 5. It is definitely better than smash. I think it should win game of the year.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "5", "not_helpful_count": "3", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "109093076", "uniq_id": "e04f8d1a-9267-530b-b5c0-10346dd373e0", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 289.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 386.0, "review_title_stringindexer_transform": 235.0, "review_description_stringindexer_transform": 157.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 6.0, "not_helpful_count_stringindexer_transform": 7.0, "reviewed_at_stringindexer_transform": 11.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 263.0, "uniq_id_stringindexer_transform": 242.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "291", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "Unlockable51", "review_title": "It ok", "review_description": "I sew the trailer and it was ok not the best and characters were alright. I heard that there was a lag in the game  but over all i give it 2 stars", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "4", "reviewed_at": "4 years ago", "rating": "2", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "108515660", "uniq_id": "df5a7b8a-f709-59f5-b49d-dc724ec76b61", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 110.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 185.0, "review_title_stringindexer_transform": 222.0, "review_description_stringindexer_transform": 146.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 5.0, "reviewed_at_stringindexer_transform": 11.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 371.0, "uniq_id_stringindexer_transform": 108.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "292", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "AceZero17X", "review_title": "HORRENDOUS!!!!", "review_description": "another super smash clone but horrible one at that", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "3", "not_helpful_count": "6", "reviewed_at": "4 years ago", "rating": "1", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "95223899", "uniq_id": "859ac623-c5af-5604-91d5-8a99eb2504d5", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 243.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 319.0, "review_title_stringindexer_transform": 109.0, "review_description_stringindexer_transform": 135.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 5.0, "not_helpful_count_stringindexer_transform": 4.0, "reviewed_at_stringindexer_transform": 11.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 245.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "293", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "DumbMarsupial", "review_title": "horrible", "review_description": "i wouldn't buy this game if it was free. i dislike the game's audio and lasting appeal. so bad my children couldn't even bear it", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "2", "not_helpful_count": "8", "reviewed_at": "5 years ago", "rating": "1", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "75707639", "uniq_id": "5f3917ab-9dd6-5929-9744-e3a2e874d7b4", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 349.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 48.0, "review_title_stringindexer_transform": 45.0, "review_description_stringindexer_transform": 409.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 8.0, "reviewed_at_stringindexer_transform": 19.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 3.0, "uniq_id_stringindexer_transform": 337.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "294", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "mn1meii", "review_title": "Great picture", "review_description": "I have a LG OLED TV and I wish I waited for this TV. I'm very pleased. I hope the update will fix the power issues. I have to turn on multiple time before the picture would stay on.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227271113", "uniq_id": "a99d570c-bdbd-5227-8609-ece8f499ebb5", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 393.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 415.0, "review_title_stringindexer_transform": 3.0, "review_description_stringindexer_transform": 304.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 95.0, "uniq_id_stringindexer_transform": 71.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "295", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Greg11", "review_title": "Great price", "review_description": "I\u2019ve had my VIZIO 55\u201d OLED for about 3 weeks. Clear picture from any place in the room. Color is so much better than the TV I replaced which was a VIZIO LED 55\u201d TV.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227216898", "uniq_id": "587a3ddd-1619-5729-88bf-61b91642d4c9", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 80.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 70.0, "review_title_stringindexer_transform": 106.0, "review_description_stringindexer_transform": 271.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 305.0, "uniq_id_stringindexer_transform": 377.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "296", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Drew6977", "review_title": "Crystal clear 4k", "review_description": "Other than the Smartcast being a bit buggy, the picture is spot on!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227212033", "uniq_id": "33f65eb0-1f44-526d-9319-c906125ee5c6", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 156.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 120.0, "review_title_stringindexer_transform": 273.0, "review_description_stringindexer_transform": 305.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 261.0, "uniq_id_stringindexer_transform": 93.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "297", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Shafi", "review_title": "Lot of issues with new OLED TV", "review_description": "i have been facing multiple issues from the time i got this TV.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 253.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 331.0, "review_title_stringindexer_transform": 116.0, "review_description_stringindexer_transform": 86.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "1) airplay doesnt work 90% of the times unless i go into admin & privacy and reboot the TV.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 481.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "2) even after reboot it doesnt work 50% of the times", "name": " i will have to reboot more than once", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 182.0, "name_stringindexer_transform": 34.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "3) same issue with chrome cast as well", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 18.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "4) TV screen turns off while mirroring screen via my Ipad every 10-15 minutes.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 252.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "5) while connected to HDMI port when im in zoom meeting using TV as external monitor", "name": " it throws message no signal detected and turns off TV after few minutes", "brand": " while im still in between the meeting.", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 194.0, "name_stringindexer_transform": 18.0, "brand_stringindexer_transform": 20.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "6) Home button doesnt work 50% of the times", "name": " unless TV is rebooted\"", "brand": "No: I don\u2019t recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "1", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "227210950", "reviewed_at": "9aefa298-d085-5f90-b930-00b20da59e72", "rating": "16/01/2022 16:18:03", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 163.0, "name_stringindexer_transform": 23.0, "brand_stringindexer_transform": 9.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 4.0, "recommended_review_stringindexer_transform": 10.0, "verifed_purchaser_stringindexer_transform": 4.0, "helpful_count_stringindexer_transform": 4.0, "not_helpful_count_stringindexer_transform": 34.0, "reviewed_at_stringindexer_transform": 34.0, "rating_stringindexer_transform": 9.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "298", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "RedRaider", "review_title": "Great OLED TV", "review_description": "Have had it for two weeks, perfect picture and great design. Loving it so far, great price for all the features and crystal clear picture. Just wish it had a HBO Max app preloaded in the main menu, but very easy to cast from my smart phone or iPad to the TV", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227210524", "uniq_id": "da0393de-bb8b-55f8-86de-58d92cfe4241", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 114.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 344.0, "review_title_stringindexer_transform": 378.0, "review_description_stringindexer_transform": 131.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 298.0, "uniq_id_stringindexer_transform": 207.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "299", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "cccmak126", "review_title": "Perfect.", "review_description": "Vizio has stepped up their game, going head to head with the LG and Samsung on this one.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227187244", "uniq_id": "2f7efb29-de97-5904-833a-c9a78dcb9212", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 444.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 329.0, "review_title_stringindexer_transform": 59.0, "review_description_stringindexer_transform": 94.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 289.0, "uniq_id_stringindexer_transform": 56.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "300", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "RomS", "review_title": "Affordable OLED", "review_description": "Finally, someone has made an OLED TV that I could afford!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227186461", "uniq_id": "7615eeb0-1644-5875-856a-08aeefb4355c", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 274.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 87.0, "review_title_stringindexer_transform": 311.0, "review_description_stringindexer_transform": 317.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 262.0, "uniq_id_stringindexer_transform": 110.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "301", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Fivonefivo", "review_title": "Excellent picture! Very crisp and defined", "review_description": "Well worth the price. I was sold on the fact that you can see definition anytime there is a night scene and it\u2019s not just blurry.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227165525", "uniq_id": "77d0486c-c3fa-55ce-a778-25a9ff85e1d6", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 488.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 168.0, "review_title_stringindexer_transform": 295.0, "review_description_stringindexer_transform": 10.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 386.0, "uniq_id_stringindexer_transform": 127.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "302", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Imagine1959", "review_title": "Great tv", "review_description": "The colors are incredibly vivid, even with a standard HD signal. I also love that it has screen mirroring for my iPhone along with a bunch of other viewing options.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227162981", "uniq_id": "821dde30-9ad1-59e3-b367-e0a36dc2691b", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 16.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 379.0, "review_title_stringindexer_transform": 253.0, "review_description_stringindexer_transform": 237.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 374.0, "uniq_id_stringindexer_transform": 385.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "303", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TomDawg1", "review_title": "Amazing picture", "review_description": "Just had this installed yesterday the BestBuy's Geek Squad. Also installed a new sound bar. The picture is amazing and we are looking forward to seeing many of our favorite shows in a whole new light. The remote will take getting used to, but we'll learn. I wish there was an app for PBS installed. We'll have to see it by AirPlay.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227149188", "uniq_id": "584ee887-b8e9-5831-b34c-9054af211b2e", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 130.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 134.0, "review_title_stringindexer_transform": 71.0, "review_description_stringindexer_transform": 40.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 49.0, "uniq_id_stringindexer_transform": 243.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "304", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "KarateBear", "review_title": "Bad Trailer, Horrible Game", "review_description": "When the game trailer is a rip off of super smash bros, you know its going to flop. the chrachter selection is poor and the gameplay is choppy. I need my 20$ back...", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "7", "not_helpful_count": "15", "reviewed_at": "5 years ago", "rating": "1", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "74341808", "uniq_id": "83fda476-c6ad-5de0-beb9-24a7cd48fdd2", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 381.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 410.0, "review_title_stringindexer_transform": 325.0, "review_description_stringindexer_transform": 11.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 28.0, "not_helpful_count_stringindexer_transform": 18.0, "reviewed_at_stringindexer_transform": 19.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 343.0, "uniq_id_stringindexer_transform": 216.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "305", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "ChristyJay", "review_title": "Fun", "review_description": "I really enjoy playing this game. It is fun and enjoyable for all ages.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126539613", "uniq_id": "9a3be338-8648-50e4-a0f5-805fd576c024", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 466.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 173.0, "review_title_stringindexer_transform": 392.0, "review_description_stringindexer_transform": 356.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 114.0, "uniq_id_stringindexer_transform": 184.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "306", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "AnnB", "review_title": "Couldn\u2019t hold interest", "review_description": "The game is cute but hasn\u2019t held my 6-year-old son\u2019s attention. He has beat Donkey Kong Country, Super Mario Odyssey, and SupernMario Deluxe. He only played a couple of levels of Yoshi and hasn\u2019t went back to it, over a week later.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126536245", "uniq_id": "b79f70f4-fd02-53b5-8027-838f4073ed73", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 171.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 236.0, "review_title_stringindexer_transform": 279.0, "review_description_stringindexer_transform": 249.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 236.0, "uniq_id_stringindexer_transform": 279.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "307", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Sleepy Ninja", "review_title": "Fun for all ages", "review_description": "This game is similar to Yoshi's Woolly World.  The levels are made of things like cardboard, ribbon, straws, and construction paper.  Each level can be played in a normal mode or a reverse mode.  There are cute costumes you can unlock using coins that you collect throughout the levels.  It's a perfect game for parents to play with their kids.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126530828", "uniq_id": "123e30f0-b2b1-5458-8d8a-faee417f379a", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 45.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 34.0, "review_title_stringindexer_transform": 218.0, "review_description_stringindexer_transform": 20.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 5.0, "uniq_id_stringindexer_transform": 171.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "308", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "SD Dad", "review_title": "Yoshi is great", "review_description": "Got this for my 2 sons they love & have a lot of fun playing it together", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126528004", "uniq_id": "27ea1f05-cdda-5466-ba89-1578af352018", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 347.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 341.0, "review_title_stringindexer_transform": 288.0, "review_description_stringindexer_transform": 60.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 94.0, "uniq_id_stringindexer_transform": 265.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "309", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Nyxian", "review_title": "Great for playing, nightmare for completing", "review_description": "The game is wonderful to play through. Fun levels, extras, cute outfits, and even an easy mode for younger players. Just dont try to get everything, or you wont have a good time.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126526950", "uniq_id": "71a0a99a-e767-5285-ad31-aabfed1b91d7", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 302.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 375.0, "review_title_stringindexer_transform": 171.0, "review_description_stringindexer_transform": 31.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 202.0, "uniq_id_stringindexer_transform": 233.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "310", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Izzy28", "review_title": "Yoshi Crafted World", "review_description": "This game is super fun and adorable. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 12.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 316.0, "review_title_stringindexer_transform": 137.0, "review_description_stringindexer_transform": 351.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Love how everything looks like crafts. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 262.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "As a Yoshi/Poochy fan I enjoy the Yoshi games.\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "126525025", "not_helpful_count": "33722e22-472c-5b56-a877-599999791231", "reviewed_at": "16/01/2022 16:18:03", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 464.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 8.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 2.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 3.0, "verifed_purchaser_stringindexer_transform": 3.0, "helpful_count_stringindexer_transform": 25.0, "not_helpful_count_stringindexer_transform": 38.0, "reviewed_at_stringindexer_transform": 14.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "311", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "lenosaurio", "review_title": "Super cute and relaxing", "review_description": "This seems more like a kids game but everyone will enjoy. It\u2019s very entertaining but not very stressful. It looks so cheerful and colorful. And who doesn\u2019t like Yoshi with wings.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126518100", "uniq_id": "05ca2650-238f-588e-a873-7007194759d7", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 361.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 177.0, "review_title_stringindexer_transform": 144.0, "review_description_stringindexer_transform": 282.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 161.0, "uniq_id_stringindexer_transform": 169.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "312", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Kelchyd", "review_title": "Great game", "review_description": "Fun to play while letting those who want a challenge to be able to spend time to complete the game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126506130", "uniq_id": "dbb361d8-d468-5822-a0a8-10bbb1e5c348", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 498.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 295.0, "review_title_stringindexer_transform": 10.0, "review_description_stringindexer_transform": 148.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 116.0, "uniq_id_stringindexer_transform": 325.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "313", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Mipsie", "review_title": "Absolute gem", "review_description": "While it's easy enough for children to play, that doesn't take away from how fun it is for the whole family. Levels have a decent amount of replayability, and it's decently challenging in a casual way.  Would recommend to anyone.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126498760", "uniq_id": "bb53d5c0-348a-5800-87a7-d4eb984ca544", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 54.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 210.0, "review_title_stringindexer_transform": 337.0, "review_description_stringindexer_transform": 32.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 131.0, "uniq_id_stringindexer_transform": 39.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "314", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Heather0101", "review_title": "Kids will love it!!", "review_description": "Fun game for kids and adults. More relaxed then Mario and very kid friendly!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126495952", "uniq_id": "89c9e45b-2b49-5be2-9e62-52634bc7fad7", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 169.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 306.0, "review_title_stringindexer_transform": 356.0, "review_description_stringindexer_transform": 81.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 145.0, "uniq_id_stringindexer_transform": 41.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "315", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Hutchworld", "review_title": "Stunning picture", "review_description": "Bought this on Black Friday after reviewing 4-5 other LED TV's.  I'm so glad that I did.  The OLED experience is simply stunning.  My previous TV was a Panasonic plasma which I held onto as long as I could because I didn't want to give up those deep blacks and contrast.  This TV has such great contrast - for example when you watch a dark scene with isolated bright spots (like lamps, office windows, etc) it will blow you away how bright those spots are against the deep black surroundings.  The panel is made by LG and you can get the same performance for a lot less money.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227144955", "uniq_id": "11338a10-215e-5f67-a575-5237fef59b16", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 325.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 199.0, "review_title_stringindexer_transform": 84.0, "review_description_stringindexer_transform": 196.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 328.0, "uniq_id_stringindexer_transform": 249.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "316", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Stude", "review_title": "Fantastic TV", "review_description": "I bought this a couple of weeks ago.  Easy to install and set up.  Fantastic picture!  We love the smart cast and look forward to our elderly relatives coming over.  We can FaceTime our loved ones and airplay it on the TV and everyone will be able to see.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227115495", "uniq_id": "ece4609f-bd97-5a47-82b3-c1f5352598f3", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 473.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 336.0, "review_title_stringindexer_transform": 156.0, "review_description_stringindexer_transform": 434.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 51.0, "uniq_id_stringindexer_transform": 295.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "317", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ybreeze5", "review_title": "Great tv but needs patches as soon as possible", "review_description": "I love the tv but am on the fence on returning it or not. Fix everything people are complaining about. Also 1440p needs to be 120hz. Theres no reason why it shouldn't be. Get it together please", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227099195", "uniq_id": "f3a80eb1-718b-5c8d-b318-b18bc83fb20e", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 209.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 164.0, "review_title_stringindexer_transform": 208.0, "review_description_stringindexer_transform": 145.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 282.0, "uniq_id_stringindexer_transform": 128.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "318", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Kenny H", "review_title": "Love the cost and love the quality overall", "review_description": "I have a long time history of purchasing Vizio Television and each time of purchase I have upgraded having said that Vizio has shifted in the best way. Awesomeness!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227073234", "uniq_id": "a77123ba-ba04-5c96-9775-f7933c733a37", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 73.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 264.0, "review_title_stringindexer_transform": 93.0, "review_description_stringindexer_transform": 411.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 179.0, "uniq_id_stringindexer_transform": 351.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "319", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "StevieC", "review_title": "Amazing how far TV has come in just a few years", "review_description": "\"I had a Vizio 65\"\" LED TV that I thought was still pretty good but I was intrigued by OLED. The set I bought looked great in the store and even better at home. And that's on everything", "recommended_review": " not just 4K streams and DVD's.\"", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "0", "reviewed_at": "0", "rating": "1 year ago", "average_rating": "5", "reviews_count": "4.2727", "comment_id": "363", "uniq_id": "227010137", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 414.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 12.0, "review_title_stringindexer_transform": 150.0, "review_description_stringindexer_transform": 341.0, "recommended_review_stringindexer_transform": 15.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 20.0, "rating_stringindexer_transform": 18.0, "average_rating_stringindexer_transform": 12.0, "reviews_count_stringindexer_transform": 12.0, "comment_id_stringindexer_transform": 323.0, "uniq_id_stringindexer_transform": 91.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "320", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jethro2312", "review_title": "EXCELLANT OLED UHD TV", "review_description": "Great picture quality and very easy to set up. Would highly recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226961718", "uniq_id": "93e6fc6f-7bf6-5a2e-b4a0-834fc2475980", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 81.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 343.0, "review_title_stringindexer_transform": 242.0, "review_description_stringindexer_transform": 130.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 143.0, "uniq_id_stringindexer_transform": 342.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "321", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "ACyberPoet", "review_title": "Absolutely love this TV!", "review_description": "This is the best tv I've ever owned! The picture quality is amazing! I don't have enough words to express how happy I am with this TV.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226957452", "uniq_id": "7b9af1f2-7b3d-5164-80f0-800133b61ce4", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 60.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 360.0, "review_title_stringindexer_transform": 258.0, "review_description_stringindexer_transform": 217.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 297.0, "uniq_id_stringindexer_transform": 179.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "322", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jojo2414", "review_title": "Awesome", "review_description": "Bought the oled Visio over the Samsung q series. Very happy except sometimes the input switches from one to another happen 2 times", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226923078", "uniq_id": "f864ba04-27e1-5673-875f-6fd69443fb3e", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 319.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 21.0, "review_title_stringindexer_transform": 8.0, "review_description_stringindexer_transform": 219.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 119.0, "uniq_id_stringindexer_transform": 283.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "323", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Chasd", "review_title": "So many features", "review_description": "I set this TV up less than a month ago and still going through all the apps and everything it can do.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226915139", "uniq_id": "922e0d7d-c3f4-5b50-a543-e756033d3a1c", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 460.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 406.0, "review_title_stringindexer_transform": 68.0, "review_description_stringindexer_transform": 417.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 61.0, "uniq_id_stringindexer_transform": 166.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "324", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "McFang", "review_title": "Troublesome TV with amazing potential", "review_description": "I really want to love this TV. The picture quality is amazing. The smart cast interface is solid, and it's all packeged under an beatable price. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 50.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 277.0, "review_title_stringindexer_transform": 336.0, "review_description_stringindexer_transform": 39.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "HOWEVER", "name": " there are a few headaches that is keeping me from recommending it", "brand": " the first is the HDMI 2.1 port. The OLED h-1 has 4 HDMI ports", "sku": " #1 is eARC (awesome)", "reviewer_name": " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "review_title": " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "review_description": " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "recommended_review": " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", "verifed_purchaser": " and to get 4K", "helpful_count": " I have to manually switch the input from Auto to 1.4", "not_helpful_count": " then back to 2.1. This is very frustrating. ", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 263.0, "name_stringindexer_transform": 13.0, "brand_stringindexer_transform": 11.0, "sku_stringindexer_transform": 13.0, "reviewer_name_stringindexer_transform": 413.0, "review_title_stringindexer_transform": 243.0, "review_description_stringindexer_transform": 361.0, "recommended_review_stringindexer_transform": 18.0, "verifed_purchaser_stringindexer_transform": 7.0, "helpful_count_stringindexer_transform": 24.0, "not_helpful_count_stringindexer_transform": 46.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "This is still a really good TV. But the growing pains right now would keep me from recommending it to others. (I'm coming from a 2018 Vizio P series)\"", "name": "No: I don\u2019t recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "3", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "226910861", "not_helpful_count": "02481162-152d-5b33-ba5a-5136b0686613", "reviewed_at": "16/01/2022 16:18:03", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 78.0, "name_stringindexer_transform": 8.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 5.0, "review_description_stringindexer_transform": 6.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 29.0, "not_helpful_count_stringindexer_transform": 45.0, "reviewed_at_stringindexer_transform": 14.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "325", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "phyra", "review_title": "Fun 2 player", "review_description": "Really fun 2 player game that seems well balanced. It looks great and feels rewarding to go collect stuff. It's really nice that the game seems to avoid many the co-op deaths that I'm used to in new super mario bros u deluxe and yoshis woolly world (we jump or egg each other and fall to our deaths).", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126476050", "uniq_id": "4773a39c-0194-5088-af97-1597830af3cb", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 155.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 123.0, "review_title_stringindexer_transform": 159.0, "review_description_stringindexer_transform": 65.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 239.0, "uniq_id_stringindexer_transform": 290.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "326", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Anthony87", "review_title": "Nintendo impressed me again.", "review_description": "Its a deep 2D game with an interesting spin on yoshi island. Nintendo always amazes me with the great graphics with thier titles. Gameplay is smooth and overall fun is better with my wife.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126473103", "uniq_id": "23759918-be89-5c65-9bf4-80ffb801cdff", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 356.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 83.0, "review_title_stringindexer_transform": 134.0, "review_description_stringindexer_transform": 364.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 203.0, "uniq_id_stringindexer_transform": 67.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "327", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Richard947", "review_title": "Nintendo fun for everyone!", "review_description": "Simple, super fun platformer that\u2019s perfect for kids or couples to play!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126440879", "uniq_id": "378bfa7c-9e8d-5d24-9947-c0515f458a2c", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 484.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 265.0, "review_title_stringindexer_transform": 269.0, "review_description_stringindexer_transform": 62.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 69.0, "uniq_id_stringindexer_transform": 248.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "328", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jon bc", "review_title": "Perfect for the little ones", "review_description": "Great game for small children and entertaining for adults as well", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126432204", "uniq_id": "bc495ea9-fc64-52df-a68f-c177f7c045d4", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 150.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 172.0, "review_title_stringindexer_transform": 164.0, "review_description_stringindexer_transform": 34.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 367.0, "uniq_id_stringindexer_transform": 30.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "329", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Justmeow0417", "review_title": "Family game", "review_description": "Great games for kids and parents to play together.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126430601", "uniq_id": "9d54e2ee-64d7-501b-adbe-31c0969dbe17", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 123.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 113.0, "review_title_stringindexer_transform": 271.0, "review_description_stringindexer_transform": 54.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 378.0, "uniq_id_stringindexer_transform": 221.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "330", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "halfjew22", "review_title": "Great graphics, 2 player gameplay awesome", "review_description": "Amazing game. Graphics are too cool. They're made out of cardboard, bottles, etc and the two player is fantastic. Highly recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126410978", "uniq_id": "1babf017-7fdf-5c87-8652-1407fa60eb90", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 197.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 298.0, "review_title_stringindexer_transform": 26.0, "review_description_stringindexer_transform": 12.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 344.0, "uniq_id_stringindexer_transform": 260.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "331", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Eglandon", "review_title": "Awesome game", "review_description": "I bought this game for my 8 yr old autistic daughter and she absolutely loves this game. It is her first video game bought soley for her and she just took right to it with no issues at all. For other games she has played it has been difficult for her to grasp what goes on on the screen and how that associates with what she is doing on the controller such as constantly running into walls on mario kart because it was difficult to for her to figure out how to steer but no such issues with this game and she absolutely loves it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126386211", "uniq_id": "d7029cd7-b7f2-5db5-8963-596a04b78acd", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 428.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 255.0, "review_title_stringindexer_transform": 41.0, "review_description_stringindexer_transform": 345.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 233.0, "uniq_id_stringindexer_transform": 254.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "332", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Kittencakes", "review_title": "Sooo cute~ <3", "review_description": "It's sooo cute!! The levels are adorable but still challenging enough if you want to get 100%. My new go-to game for destressing~ <3", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126374385", "uniq_id": "e1f7d79c-f4a9-505d-9273-c1de69d35bda", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 51.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 187.0, "review_title_stringindexer_transform": 234.0, "review_description_stringindexer_transform": 264.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 188.0, "uniq_id_stringindexer_transform": 46.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "333", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "FireWife", "review_title": "Brings out the kid in a 33 year old.", "review_description": "This game is super fun and brings out the kid in me. Each level has multiple challenges, making the game seem like neverending fun. The voices are adorable and the choices are plentiful. Great game, highly recommended.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126350389", "uniq_id": "8e92998d-0da9-5f08-b431-fcde798123c9", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 383.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 130.0, "review_title_stringindexer_transform": 230.0, "review_description_stringindexer_transform": 433.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 212.0, "uniq_id_stringindexer_transform": 204.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "334", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Brennan91", "review_title": "Unique and colorful world", "review_description": "It\u2019s a really relaxed game that you can pick up and play anytime. The graphics are amazing and unique. Overall, I\u2019d definitely recommend this game for anyone who is a Yoshi fan.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126348541", "uniq_id": "7f06208f-0a2b-54ba-94ea-112a39a0c52e", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 477.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 114.0, "review_title_stringindexer_transform": 212.0, "review_description_stringindexer_transform": 220.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 391.0, "uniq_id_stringindexer_transform": 280.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "335", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Josr85", "review_title": "Great game for all ages", "review_description": "Me and my 5 year old really enjoy this game, if you enjoy the Mario games this is one you can add to that list.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126347731", "uniq_id": "a4ae2322-89b3-504a-b7e0-9fa33a9ca17e", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 19.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 37.0, "review_title_stringindexer_transform": 233.0, "review_description_stringindexer_transform": 176.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 125.0, "uniq_id_stringindexer_transform": 4.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "336", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Yoshi Fan1", "review_title": "Fun!", "review_description": "An incredibly fun sequel to Yoshi's Woolly World.  Amazing graphics!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126346918", "uniq_id": "138dec55-89dd-5a19-b289-861f05404137", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 149.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 389.0, "review_title_stringindexer_transform": 22.0, "review_description_stringindexer_transform": 112.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 21.0, "uniq_id_stringindexer_transform": 322.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "337", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "ShadowKnight92", "review_title": "Overall Gameplay", "review_description": "The game is fun, and the graphics look great, some levels are hard for a children\u2019s game, but over the game is great.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126344921", "uniq_id": "1df8ba9d-c4b7-5f94-ac1b-796c510d5a5e", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 277.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 310.0, "review_title_stringindexer_transform": 374.0, "review_description_stringindexer_transform": 225.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 254.0, "uniq_id_stringindexer_transform": 3.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "338", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "R00T666", "review_title": "Yoshi at his best!", "review_description": "This game is a crafted masterpiece! The level of detail is gorgeous. Gameplay is a throwback to the classics while maintaining a modern feel. The two player mode is unique and available right at the start. The game is great for all ages and incredible for a good time or a family game night. I highly recommend this game!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126343579", "uniq_id": "46be1ec8-0af4-56f1-89c5-a57e8a345971", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 390.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 148.0, "review_title_stringindexer_transform": 185.0, "review_description_stringindexer_transform": 284.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 338.0, "uniq_id_stringindexer_transform": 60.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "339", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Mr Eric", "review_title": "Great game for the family", "review_description": "Entertaining game for all ages.  The levels are relatively easy to pass but become challenging if you are the type of gamer who goes for 100% completion.  The colorful graphics also help add to the fun nature of the game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126337946", "uniq_id": "1704cd22-d544-5d71-9815-f5eb2372a044", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 236.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 320.0, "review_title_stringindexer_transform": 19.0, "review_description_stringindexer_transform": 174.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 313.0, "uniq_id_stringindexer_transform": 212.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "340", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Dadgames", "review_title": "Great game for the family", "review_description": "Great game for me and my kids ages 6, 4 and 1. They can actually play it on their own and love it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126325080", "uniq_id": "bd6cd803-2b83-5424-9c1e-5d536f889b79", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 208.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 192.0, "review_title_stringindexer_transform": 19.0, "review_description_stringindexer_transform": 38.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 57.0, "uniq_id_stringindexer_transform": 18.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "341", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Weasel771q", "review_title": "Good", "review_description": "Cute game. Just as fun if not more than Wooly World was.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126323055", "uniq_id": "a8cb85ec-1fb1-592d-86dd-ad1977d95f62", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 179.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 16.0, "review_title_stringindexer_transform": 13.0, "review_description_stringindexer_transform": 389.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 272.0, "uniq_id_stringindexer_transform": 164.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "342", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Anthony Nussbaum", "review_title": "Another Great Nintendo Game", "review_description": "\"Whimsical, light-hearted platformer. Densely packed stages filled with collectibles, secrets, and uniquely beautiful art designs.  Tons of content adds replay value to keep you playing long after finishing the six to eight hour \"\"main\"\" adventure. Definitely a worthwhile purchase", "recommended_review": " especially if you plan to play the often chaotic but always entertaining simultaneous two player co-op mode.\"", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "1", "reviewed_at": "0", "rating": "2 years ago", "average_rating": "4", "reviews_count": "4.6556", "comment_id": "2390", "uniq_id": "126319104", "scraped_at": "2bb7b6b6-1b88-5903-a898-0a754ac687d8", "index_stringindexer_transform": 458.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 108.0, "review_title_stringindexer_transform": 195.0, "review_description_stringindexer_transform": 326.0, "recommended_review_stringindexer_transform": 14.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 20.0, "rating_stringindexer_transform": 13.0, "average_rating_stringindexer_transform": 10.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 294.0, "uniq_id_stringindexer_transform": 321.0, "scraped_at_stringindexer_transform": 16.0}, {"index": "343", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "kschneider1231", "review_title": "Yoshi\u2019s Crafted World", "review_description": "If you like the gameplay of Yoshi\u2019s Island, the art style of Yoshi\u2019s Woolly World, then Yoshi\u2019s Crafted World is the gamefor you... and the family!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126315942", "uniq_id": "aac40f5b-5309-54ee-b48f-8cef2b574aa1", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 66.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 23.0, "review_title_stringindexer_transform": 17.0, "review_description_stringindexer_transform": 349.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 107.0, "uniq_id_stringindexer_transform": 153.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "344", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Rwarmander", "review_title": "Fun to relax with", "review_description": "Sort of short, aimed more towards kids...but if you love Yoshi and want something to sit back before bed and relax and play, this is your game.  So charming, so chill, so Yoshi.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126302586", "uniq_id": "48d6e2a3-a18e-56d1-a6c2-3f3d10c0238f", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 311.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 242.0, "review_title_stringindexer_transform": 265.0, "review_description_stringindexer_transform": 109.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 275.0, "uniq_id_stringindexer_transform": 111.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "345", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Randy cox", "review_title": "Won't turn on", "review_description": "Just bought tv a while back moved to the new house and now it won't turn on", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226900312", "uniq_id": "9b0e9798-1104-51bb-bb02-c4791677f066", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 400.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 339.0, "review_title_stringindexer_transform": 320.0, "review_description_stringindexer_transform": 191.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 87.0, "uniq_id_stringindexer_transform": 203.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "346", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "IrishRunner", "review_title": "Love this thing", "review_description": "This TV replaced a smaller, older VIZIO I bought back in 2011/12. Was not looking for an OLED, but went with it since the price was so good. I could not be happier. The picture is GREAT. Everything we watch has looked amazing on it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226893604", "uniq_id": "ab53e60a-a8f5-514d-b991-35bb8c11d5b5", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 103.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 24.0, "review_title_stringindexer_transform": 377.0, "review_description_stringindexer_transform": 141.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 24.0, "uniq_id_stringindexer_transform": 84.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "347", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ray T", "review_title": "The picture!", "review_description": "The picture is exceptionally light and bright where it needs to be but the infinite dark reminds you it is an Oled, this tv IS IN a class of it's own!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226870200", "uniq_id": "07271c3d-9b17-5d98-8c25-bdd77055b420", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 225.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 216.0, "review_title_stringindexer_transform": 101.0, "review_description_stringindexer_transform": 154.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 201.0, "uniq_id_stringindexer_transform": 201.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "348", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "SDotRinney", "review_title": "Great picture great sound overall a great TV", "review_description": "About my TV last month I love it love everything about it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226863307", "uniq_id": "213d7265-2a67-5a82-8be4-aedcc9d26874", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 275.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 302.0, "review_title_stringindexer_transform": 119.0, "review_description_stringindexer_transform": 365.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 265.0, "uniq_id_stringindexer_transform": 115.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "349", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Prakers", "review_title": "Beyond excellent", "review_description": "I am pleased with the quality of this unit. Best tv I have ever owned. Oled is off the charts, the colors pop and deep rich blacks. I'm creeping up on retirement and I didn't want to buy a quality tv on a fixed budget.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226855621", "uniq_id": "6a01d10d-880f-5927-a855-9877f163f764", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 485.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 133.0, "review_title_stringindexer_transform": 96.0, "review_description_stringindexer_transform": 323.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 351.0, "uniq_id_stringindexer_transform": 217.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "350", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "PaulS", "review_title": "Beautiful picture and sound.  Sluggish controls", "review_description": "The picture and the Vizio surround surround speakers are excellent.  Response to the remote for adjusting sound level is sluggish and remote has few features compared to other systems.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226844023", "uniq_id": "ccbc3319-a7f8-55cd-99c4-8df80b9f986e", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 186.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 237.0, "review_title_stringindexer_transform": 391.0, "review_description_stringindexer_transform": 289.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 238.0, "uniq_id_stringindexer_transform": 8.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "351", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Whydoihavetohaveanickname", "review_title": "Great picture but OS is a bit slow", "review_description": "For the picture this has been great for the price. The reason I give it 3 stars though is because I am very critical of when the operating system is not \u201csnappy\u201d.  For a modern TV, losing of apps and maneuvering through the UI should be quick. While this is better than my old Samsung TV OS, I still expected it to be quicker.   I also hate h to r banner style at the top. My first choice should be to pick an App rather than some curated selection when so turn on the TV. I haven\u2019t been able to find a feature to turn it off.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226834410", "uniq_id": "653adbc8-2641-556e-95bb-4e98b787d90b", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 108.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 266.0, "review_title_stringindexer_transform": 310.0, "review_description_stringindexer_transform": 188.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 211.0, "uniq_id_stringindexer_transform": 320.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "352", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Britan91", "review_title": "look out gamerz, here comez awsome", "review_description": "It's better quality than I imagined! Amazing TV!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 425.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 184.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 245.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "My only critique is that I wish it performed @ a 1440p resolution. Everything else is great!\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "5", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "226824012", "not_helpful_count": "8a3401f7-4865-5764-904a-6f8cb7b42edd", "reviewed_at": "16/01/2022 16:18:04", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 411.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 5.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 15.0, "not_helpful_count_stringindexer_transform": 35.0, "reviewed_at_stringindexer_transform": 17.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "353", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ezirkle", "review_title": "look out gamerz, here comez awsome", "review_description": "So far I love it! The new tech for video games is awesome!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226813954", "uniq_id": "090663b7-8c74-501b-8c5c-ad3a2534b71f", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 201.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 322.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 46.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 235.0, "uniq_id_stringindexer_transform": 10.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "354", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Carlos G.", "review_title": "Excellent picture quality!", "review_description": "This is my first OLED tv and I am loving it. I\u2019ve been using Vizio TVs for years and have never disappointed me. This one is super fast and there\u2019s no lag when selecting through the apps. The lag is something I hated on my previous Vizio TVs bu that\u2019s gone now. Now just bring HBO Max! One thing I don\u2019t like and hope that it\u2019s fixed in a future software update is that currently, 4K/120hz HDMI ports don\u2019t work on the PS5. Fix that and this TV will be perfect.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226754257", "uniq_id": "8a8d8b55-7214-5e92-b9ed-733d6bf7071a", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 354.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 68.0, "review_title_stringindexer_transform": 381.0, "review_description_stringindexer_transform": 52.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 169.0, "uniq_id_stringindexer_transform": 239.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "355", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Radwithab", "review_title": "Great controller", "review_description": "It's comfortable and works great. My only frustration is that it doesn't seem to allow button remapping. I can set it up on the switch, and the buttons are changed on the switch paddles, but this controller doesn't allow the changes. Not sure if this is a switch issue or the controller. Otherwise it is great", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "4", "average_rating": "4.875", "reviews_count": "32", "comment_id": "190364463", "uniq_id": "8625e7a7-4e27-5d30-a05b-fe5bf7c2cadd", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 472.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 147.0, "review_title_stringindexer_transform": 4.0, "review_description_stringindexer_transform": 83.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 135.0, "uniq_id_stringindexer_transform": 261.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "356", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Meadow", "review_title": "Enhances Game Play and Fits Perfectly in Hands", "review_description": "[This review was collected as part of a promotion.] This controller was bought for the intent to enhance the Switch Experience, and to add some more skill to certain games. The case did arrive slightly damaged, the inside plastic was torn. but the product remained in perfect condition. It is light, but doesn't mean it isn't quality. It brought a different set of skills to games that required more then a small handheld joystick. A little throwback to the classic design of a controller.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122923657", "uniq_id": "9bf14046-e0c5-500a-9dcf-e9c0e6afb859", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 147.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 374.0, "review_title_stringindexer_transform": 329.0, "review_description_stringindexer_transform": 320.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 394.0, "uniq_id_stringindexer_transform": 270.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "357", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Jess2274", "review_title": "Wirelesa Nintendo Switch Controller", "review_description": "[This review was collected as part of a promotion.] Received to try out on our gaming system and definitely enjoy it way better then the cord controller. Having wireless is more convient as you can move better and no worries about pulling a cord out of the system. The Over all grip is very comfortable and nice fitting. Not only is it convient, comfortable but also comes designed with Mario which is many favorites of alot of people. Alot of my family complement us on our new controller for the design and now wants one or something similar.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122567098", "uniq_id": "814c2ff9-f939-5b24-8c3e-41e751846aa3", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 358.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 256.0, "review_title_stringindexer_transform": 366.0, "review_description_stringindexer_transform": 396.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 176.0, "uniq_id_stringindexer_transform": 85.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "358", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "MandM", "review_title": "Eaysy to Use", "review_description": "[This review was collected as part of a promotion.] This controller was so eay to use, and dits just right in my hand. I love the colors it comes in and connects very easily.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122446616", "uniq_id": "89ff972f-705a-50a7-8f9d-f001de728a39", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 496.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 303.0, "review_title_stringindexer_transform": 268.0, "review_description_stringindexer_transform": 25.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 170.0, "uniq_id_stringindexer_transform": 359.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "359", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Cheeks784", "review_title": "excellent value for the cost", "review_description": "[This review was collected as part of a promotion.] I like having a controller to hold onto with the switch and this one gets the job done.  Set up was easy.  The only downside is no rumble, but the added buttons make up for it.  The retro mario theme is an added bonus and loved by husband and son alike.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122436959", "uniq_id": "a881b3e6-56f2-5ed3-99fb-dc2394c9a4eb", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 436.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 244.0, "review_title_stringindexer_transform": 110.0, "review_description_stringindexer_transform": 114.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 185.0, "uniq_id_stringindexer_transform": 296.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "360", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "cwinniebear24", "review_title": "Such a great design", "review_description": "[This review was collected as part of a promotion.] The design on this remote is so cool. The batteries are the only drawback but that can be remedied by just buying rechargeable batteries, which I would highly recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122339952", "uniq_id": "6ffa7acb-1ab2-53b2-b96c-7d8ffc9cad47", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 257.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 196.0, "review_title_stringindexer_transform": 127.0, "review_description_stringindexer_transform": 261.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 157.0, "uniq_id_stringindexer_transform": 340.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "361", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Mommyof2boyz", "review_title": "Great controller", "review_description": "[This review was collected as part of a promotion.] This is a great controller for the Nintendo switch. It has a great Mario design that my kids loved! It was easy to set up and it being wireless was even better. It seems to be very durable as well. And good thing because my kids are super rough on things aspect controllers. I will be purchasing a second one, so both my kids have them to play with.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122182335", "uniq_id": "11608ce6-435a-5fa7-8361-78c102e07aa6", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 138.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 176.0, "review_title_stringindexer_transform": 4.0, "review_description_stringindexer_transform": 410.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 150.0, "uniq_id_stringindexer_transform": 378.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "362", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "DiamondAries999", "review_title": "Enhanced Wireless!!!", "review_description": "[This review was collected as part of a promotion.] This is a review for the Nintendo Switch wireless game controller. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 55.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 297.0, "review_title_stringindexer_transform": 251.0, "review_description_stringindexer_transform": 88.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "I like that this is wireless with sensors ", "name": " so I'm not tied down with a cord.  ", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 328.0, "name_stringindexer_transform": 21.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "This controller has Bluetooth", "name": " mappable buttons", "brand": " fully programmable", "sku": " and more.  ", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 237.0, "name_stringindexer_transform": 32.0, "brand_stringindexer_transform": 13.0, "sku_stringindexer_transform": 15.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The motion controls are awesome", "name": " this is a smart product!", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 392.0, "name_stringindexer_transform": 9.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "This has a design that feels good in the hands", "name": " it is not bulky or hard to work.  ", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 475.0, "name_stringindexer_transform": 37.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "My nephews prefer this over the other wireless controller we have", "name": " and they kind of fight over it.  They really like the retro Mario on the controller", "brand": " and make fun of me because it was brand new \"\"in my day\"\".  This is fun", "sku": " so I'd definitely recommend this product.\"", "reviewer_name": "yes: I recommend this product", "review_title": "look out gamerz, here comez awsome", "review_description": "0", "recommended_review": "0", "verifed_purchaser": "3 years ago", "helpful_count": "5", "not_helpful_count": "4.875", "reviewed_at": "32", "rating": "122158646", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "16/01/2022 16:18:04", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 33.0, "name_stringindexer_transform": 10.0, "brand_stringindexer_transform": 15.0, "sku_stringindexer_transform": 14.0, "reviewer_name_stringindexer_transform": 335.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 3.0, "recommended_review_stringindexer_transform": 12.0, "verifed_purchaser_stringindexer_transform": 6.0, "helpful_count_stringindexer_transform": 6.0, "not_helpful_count_stringindexer_transform": 37.0, "reviewed_at_stringindexer_transform": 35.0, "rating_stringindexer_transform": 11.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 9.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "363", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "RachelA1020", "review_title": "Very good but not perfect.", "review_description": "[This review was collected as part of a promotion.] The pros: *feels almost identical to the official Nintendo pro controller.  ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 408.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 188.0, "review_title_stringindexer_transform": 331.0, "review_description_stringindexer_transform": 164.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 441.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "*the added mappable buttons could come in handy even though I haven't used those yet.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 106.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "*the cost is much less than the Nintendo pro controller. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 229.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The cons:", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 35.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "*slightly unconventional setup. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 442.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "It's not a problem though if you read the instructions. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 44.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "*its lighter in weight which makes me wonder about durability. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 21.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Makes a perfect 2nd controller for kids.\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "3 years ago", "review_description": "4", "recommended_review": "4.875", "verifed_purchaser": "32", "helpful_count": "122140626", "not_helpful_count": "0b338d34-27a3-56a0-9787-1d3b437f1ba9", "reviewed_at": "16/01/2022 16:18:04", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 324.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 27.0, "review_description_stringindexer_transform": 2.0, "recommended_review_stringindexer_transform": 11.0, "verifed_purchaser_stringindexer_transform": 10.0, "helpful_count_stringindexer_transform": 22.0, "not_helpful_count_stringindexer_transform": 39.0, "reviewed_at_stringindexer_transform": 17.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "364", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Court the Sport", "review_title": "Amazing Controller!", "review_description": "[This review was collected as part of a promotion.] I have been using this controller for my Nintendo Switch for a couple of weeks now and am very happy with the overall performance of it! It is very comfortable to hold and the buttons are set up perfectly.  It being a Bluetooth Wireless Controller is a huge plus! The Super Mario Bros. design is my favorite though! It's very attractive and I've received so many compliments on it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122102991", "uniq_id": "330fc9b1-4297-500d-b450-59e0c113c0c8", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 249.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 26.0, "review_title_stringindexer_transform": 38.0, "review_description_stringindexer_transform": 260.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 7.0, "uniq_id_stringindexer_transform": 105.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "365", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "NSU_Ant", "review_title": "Like DarkSouls but with Cars! :) Love it!!!!", "review_description": "It\u2019s not entry level friendly but can be very rewarding.. I struggled at first, boy it was challenging but with lots of practice and doing tutorials/training I managed to not come in 12th or 10th place.. I now place at about 6th or 4th.. Boy does not wining  a race hurt but it\u2019s the grind and constant improvement.. Could lower the difficult and turn assist on but that would take the fun out of the challenge..I then went to YouTube to see pro gamers struggling or flipping cars as well so that made me feel a little better too..", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "154204652", "uniq_id": "29596331-f93b-5f15-b930-ea33a3c3da35", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 360.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 154.0, "review_title_stringindexer_transform": 148.0, "review_description_stringindexer_transform": 142.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 68.0, "uniq_id_stringindexer_transform": 7.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "366", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "IAMTHEWHEELMAN", "review_title": "Skip it.", "review_description": "If your looking for a real rally experience buy Dirt. The handling on this game is cartoonish. You cut and you get penalties. Total garbage.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "141605618", "uniq_id": "e77e4e5f-c996-51ef-bb79-6354405c211b", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 465.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 84.0, "review_title_stringindexer_transform": 180.0, "review_description_stringindexer_transform": 288.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 321.0, "uniq_id_stringindexer_transform": 240.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "367", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "Alllly", "review_title": "Lots of Fun", "review_description": "Very detailed graphics, challenging driving, and numerous course selections. A lot of fun for multiplayer. The only semi con is that it is difficult to select changes to your driving car... but overall a must have.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "138719704", "uniq_id": "f2fad2ce-ed9a-598f-9e5a-a3ad7ea6a717", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 184.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 178.0, "review_title_stringindexer_transform": 294.0, "review_description_stringindexer_transform": 275.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 98.0, "uniq_id_stringindexer_transform": 287.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "368", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "The monumental", "review_title": "Let the dirt fly and the motor cry", "review_description": "Simply gorgous to look at and play.  It says pure simulator on the box for a reason.  If you go in expecting anything less you will get plastasized.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "137193968", "uniq_id": "6b553447-1f16-512b-b18d-81f6ffac6d98", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 322.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 380.0, "review_title_stringindexer_transform": 118.0, "review_description_stringindexer_transform": 187.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 122.0, "uniq_id_stringindexer_transform": 158.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "369", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "Sarge97502", "review_title": "Wrc8", "review_description": "Good game, need to spend some more time playing it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "136798584", "uniq_id": "0cf0d647-5307-585d-8435-a37e7f419aa3", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 457.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 43.0, "review_title_stringindexer_transform": 189.0, "review_description_stringindexer_transform": 236.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 64.0, "uniq_id_stringindexer_transform": 181.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "370", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "Holden Macaque", "review_title": "Crazy good WRC game.\\m/", "review_description": "This is a good one. One of the best driving games I've played. The career mode is a bit of a pain but still pretty cool.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "136465444", "uniq_id": "4fd68a13-9df5-5e86-b0a8-836bae43d243", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 486.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 135.0, "review_title_stringindexer_transform": 152.0, "review_description_stringindexer_transform": 324.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 41.0, "uniq_id_stringindexer_transform": 134.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "371", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "Christow", "review_title": "WRC 8 FIA World Rally Championship is great game.", "review_description": "The WRC 8 FIA World Rally Championship is a great game to play. The cars are awesome and the scenery is breathtaking. There's so much to do! I really have lots of fun playing it. Much improvement over the WRC 7 World Rally Championship. They did a really nice job in putting this game together.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "136365231", "uniq_id": "36b7fb9b-c0eb-5073-b128-5bd4c7d72748", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 375.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 201.0, "review_title_stringindexer_transform": 196.0, "review_description_stringindexer_transform": 37.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 218.0, "uniq_id_stringindexer_transform": 391.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "372", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "ghostdph", "review_title": "Yoshi\u2019s crafted world game", "review_description": "Great game. Easy to pick up and play, at home or on the go.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126301922", "uniq_id": "3f2027c9-d810-5e8b-b6ea-5a2af73af35f", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 223.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 79.0, "review_title_stringindexer_transform": 102.0, "review_description_stringindexer_transform": 199.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 224.0, "uniq_id_stringindexer_transform": 236.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "373", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "carauza", "review_title": "GET THIS GAME!", "review_description": "ONE OF THE ABSOLUTE BEST IN THE YOSHI FRANCHISE, WELL WORTH THE WAIT.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126301717", "uniq_id": "dc10d9ff-527d-5235-8da4-213d2422ccc5", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 76.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 251.0, "review_title_stringindexer_transform": 112.0, "review_description_stringindexer_transform": 303.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 270.0, "uniq_id_stringindexer_transform": 252.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "374", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Charlie from VA", "review_title": "Its yoshi!", "review_description": "Cant go wrong with Yoshi. Cute, detailed and fun. You get what you see with this game. I love it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 403.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 254.0, "review_title_stringindexer_transform": 129.0, "review_description_stringindexer_transform": 307.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Great sequel to Wooly World\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "126297513", "not_helpful_count": "1962b25e-379f-515a-a961-26950bbd081d", "reviewed_at": "16/01/2022 16:18:05", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 26.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 8.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 2.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 3.0, "verifed_purchaser_stringindexer_transform": 3.0, "helpful_count_stringindexer_transform": 21.0, "not_helpful_count_stringindexer_transform": 32.0, "reviewed_at_stringindexer_transform": 12.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "375", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "emperordesslok", "review_title": "Another quality Switch release", "review_description": "Super fun game that can be as easy or as challenging as you want it to be, depending on if your thing is to 100% a game or not. Another quality release on the Switch, highly recommended.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126291693", "uniq_id": "fd6bea00-05a9-5cd4-98f9-5f0d4ed43eb0", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 211.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 138.0, "review_title_stringindexer_transform": 389.0, "review_description_stringindexer_transform": 189.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 47.0, "uniq_id_stringindexer_transform": 162.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "376", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jack Badgerlord Fox", "review_title": "Weaponized Cuteness at it's Finest", "review_description": "Not a heck of a lot wrong with this game. I like to say this is the epitome of Weaponized Cuteness. The designers did a fantastic job with level design. It feels like they actually built every level in the game with cardboard and construction paper in reality and then put it into the game, and they stick with that through the entire game. The controls are tight and the yoshis are as adorable as ever.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 345.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 121.0, "review_title_stringindexer_transform": 199.0, "review_description_stringindexer_transform": 122.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The addition of being allowed to manually aim your eggs removes some of the frustration that earlier titles had and there are collectible items in abundance for completionists. That all said", "name": " the game is not meant for those looking for a challenge. I don't need dark souls levels of difficulty", "brand": " but at least some sort of resistance would have been nice. Levels can basically be run through rather blind if you're not hunting for every red coin or flower. Even the challenge levels at the end of the game don't really have much bite to them.", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 367.0, "name_stringindexer_transform": 17.0, "brand_stringindexer_transform": 19.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The biggest hiccup in the game I think is the mini quests you get. Each level has multiple different set pieces that a robot will want you to collect. The issue is you can only do one at a time so the game asks you to play through one level at least 6 or 7 times and it can get rather tedious at times. My suggestion is that if you are collecting everything", "name": " don't try to get it all at once because I assure you you will be back through that level multiple times.", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 314.0, "name_stringindexer_transform": 31.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "In the end the game is a relaxing adventure through a handcrafted (Almost literally) world that never fails to charm. Perfect for players of all ages", "name": " but if you're looking for a challenge I would look elsewhere.\"", "brand": "yes: I recommend this product", "sku": "Verified Purchaser", "reviewer_name": "1", "review_title": "0", "review_description": "2 years ago", "recommended_review": "4", "verifed_purchaser": "4.6556", "helpful_count": "2390", "not_helpful_count": "126289526", "reviewed_at": "512efb41-f0b9-5a8b-ac21-e6f988f04a2d", "rating": "16/01/2022 16:18:05", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 445.0, "name_stringindexer_transform": 26.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 9.0, "reviewer_name_stringindexer_transform": 4.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 5.0, "recommended_review_stringindexer_transform": 5.0, "verifed_purchaser_stringindexer_transform": 5.0, "helpful_count_stringindexer_transform": 8.0, "not_helpful_count_stringindexer_transform": 15.0, "reviewed_at_stringindexer_transform": 42.0, "rating_stringindexer_transform": 6.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "377", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "SusieK", "review_title": "Cute stuff", "review_description": "Very cute! And the right amount of challenges. Great game for all ages", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126283489", "uniq_id": "29337594-2061-52d7-9c1a-b31c9022a6b3", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 476.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 93.0, "review_title_stringindexer_transform": 274.0, "review_description_stringindexer_transform": 243.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 50.0, "uniq_id_stringindexer_transform": 306.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "378", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Mebunny", "review_title": "Love love love", "review_description": "We love Yoshi!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 74.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 53.0, "review_title_stringindexer_transform": 70.0, "review_description_stringindexer_transform": 55.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "It's a great game for kids and adults!\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "126279514", "not_helpful_count": "95bf4328-d8c9-52b1-9074-0e246e0f9fe2", "reviewed_at": "16/01/2022 16:18:05", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 190.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 8.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 2.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 3.0, "verifed_purchaser_stringindexer_transform": 3.0, "helpful_count_stringindexer_transform": 34.0, "not_helpful_count_stringindexer_transform": 24.0, "reviewed_at_stringindexer_transform": 12.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "379", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Drumfreak117", "review_title": "Awesome game for all", "review_description": "Excellent game especially for kids and new gamers looking to learn, but still complicated and fun enough for an experienced vet.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126279116", "uniq_id": "c0601d16-e5fe-5975-a114-e857b25aef61", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 173.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 390.0, "review_title_stringindexer_transform": 39.0, "review_description_stringindexer_transform": 348.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 138.0, "uniq_id_stringindexer_transform": 264.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "380", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "TitusJ99", "review_title": "Yoshi's Flabby World", "review_description": "Really boring and lackluster. Fun platforming but not much else. Good for kids, not for adults.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "7", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126277361", "uniq_id": "c2e549f2-3344-5ca7-9e6a-2b4bd5a25504", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 474.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 6.0, "review_title_stringindexer_transform": 382.0, "review_description_stringindexer_transform": 18.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 10.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 149.0, "uniq_id_stringindexer_transform": 257.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "381", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "MotherMayI", "review_title": "Crafty Business", "review_description": "Cute game I can play with the family. I love how interactive it is. You can knock over things in the foreground and background.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126273657", "uniq_id": "ea57e9d3-97b4-56a0-b046-1b7024e7f67a", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 9.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 351.0, "review_title_stringindexer_transform": 241.0, "review_description_stringindexer_transform": 385.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 219.0, "uniq_id_stringindexer_transform": 273.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "382", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "LaBestia", "review_title": "Great tv quality - could use a microphone remote", "review_description": "This tv has been fantastic and especially since we recently purchased a 5.1 Dolby surround system. Mandalorian looks, and sounds amazing now after getting this tv. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 139.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 259.0, "review_title_stringindexer_transform": 239.0, "review_description_stringindexer_transform": 171.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The one thing that would truly be the cherry on top", "name": " would be to have a microphone on the remote control to search for a program like the roku\u2019s do. ", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 227.0, "name_stringindexer_transform": 22.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Overall", "name": " it is a good sized tv with an amazing picture. Well worth it.\"", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "5", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "226749057", "reviewed_at": "4b63751b-d4c0-5c5f-9138-59a473a7daaa", "rating": "16/01/2022 16:18:05", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 0.0, "name_stringindexer_transform": 30.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 4.0, "recommended_review_stringindexer_transform": 4.0, "verifed_purchaser_stringindexer_transform": 4.0, "helpful_count_stringindexer_transform": 4.0, "not_helpful_count_stringindexer_transform": 29.0, "reviewed_at_stringindexer_transform": 30.0, "rating_stringindexer_transform": 6.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "383", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Lauri49", "review_title": "Beautiful color!", "review_description": "Super impressed with the clarity and color of the picture.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226733824", "uniq_id": "7c5e8e10-dca1-528f-875b-96f7b995033a", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 269.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 124.0, "review_title_stringindexer_transform": 256.0, "review_description_stringindexer_transform": 64.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 252.0, "uniq_id_stringindexer_transform": 269.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "384", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "jmrichard427", "review_title": "Fantastic picture", "review_description": "Great picture and easy to use enjoy it very much!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226732965", "uniq_id": "60bdb40e-e15c-5bfa-967b-9aa559482629", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 447.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 209.0, "review_title_stringindexer_transform": 114.0, "review_description_stringindexer_transform": 221.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 303.0, "uniq_id_stringindexer_transform": 197.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "385", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Tom42", "review_title": "Great picture", "review_description": "Bought for picture quality and I am not disappointed. It is fabulous. I am actually surprised at how wonderful the display is in my home. Very satisfied and would buy again. If it goes on sale anytime soon I will buy another one for another room in my home.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226732331", "uniq_id": "23656563-b23a-5a13-b5c5-5ab4eaabf6e9", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 97.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 393.0, "review_title_stringindexer_transform": 3.0, "review_description_stringindexer_transform": 235.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 180.0, "uniq_id_stringindexer_transform": 183.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "386", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Cowboy101084", "review_title": "Great picture", "review_description": "I am really happy with my purchase. Visio knocked it out of the park with this one.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226732189", "uniq_id": "74c08633-86e1-5e62-a815-f443ab052ecd", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 272.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 71.0, "review_title_stringindexer_transform": 3.0, "review_description_stringindexer_transform": 178.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 65.0, "uniq_id_stringindexer_transform": 48.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "387", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Mugen", "review_title": "Great but...", "review_description": "It's a great tv. This is my first oled and it works great with my xbox series x. My only issue is that it keeps putting itself back on warm color temp very often.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226723463", "uniq_id": "3ff9d937-f377-5e4e-b3a8-ba7eb733ad07", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 192.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 234.0, "review_title_stringindexer_transform": 145.0, "review_description_stringindexer_transform": 115.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 81.0, "uniq_id_stringindexer_transform": 118.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "388", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Suzey", "review_title": "What a picture!", "review_description": "Bought this TV a couple of weeks ago to replace a five year old Visio.  Our previous TV was top of the line back then.(240 refresh rate, etc.)  This new TV is fantastic!  What a picture!  Well worth it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226718702", "uniq_id": "2620434c-3ae6-501e-ae0e-15e040f9a198", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 11.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 279.0, "review_title_stringindexer_transform": 270.0, "review_description_stringindexer_transform": 103.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 73.0, "uniq_id_stringindexer_transform": 147.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "389", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Concerned vizio tv owner.", "review_title": "Terrible software", "review_description": "I bought the tv about a month ago and have never had as many problems with a tv in my life. Vizio has a reputable name so of course I wanted to give the oled a try. Day one when I got the tv home it wouldn\u2019t power up. So after plugging the tv up and unplugging it a few times I got it to power up. The oled does have a beautiful picture but now every morning when I want to turn on the tv it won\u2019t power up again. I have to unplug the tv for 30 minutes EVERY morning for it to come on now. While I\u2019m watching tv the sound just goes away at times and I have to reboot the tv sometimes 3 times before the sound comes back on. At times the hdmi won\u2019t recognize it has the cable or game system connected so I have to turn it off and on again when that happens. This is just unacceptable from vizio. I hear there will be firmware updates but how long will that take?  I don\u2019t know what to do should I return the tv and try another vizio oled or just stay clear of vizio because this is the beat quality they can produce right now", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226704721", "uniq_id": "2cd61b63-9d87-5b31-a9f0-29eb39dc6df2", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 335.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 225.0, "review_title_stringindexer_transform": 267.0, "review_description_stringindexer_transform": 242.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 290.0, "uniq_id_stringindexer_transform": 281.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "390", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "mh061", "review_title": "Beautiful Picture", "review_description": "I bought this TV several weeks ago and I couldn't be happier. The difference between OLED and anything else is astonishing. Highly recommended!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226700717", "uniq_id": "3dab1ab5-cb69-58f7-819d-dff2b315d6af", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 135.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 64.0, "review_title_stringindexer_transform": 275.0, "review_description_stringindexer_transform": 75.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 163.0, "uniq_id_stringindexer_transform": 161.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "391", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Golam41", "review_title": "look out gamerz, here comez awsome", "review_description": "I\u2019m having multiple issues with it. Tried to set it up with my Xbox X series too play in 4K resolution but the screen goes black. When I did change some settings to get the TV too play my Xbox in 4K it wouldn\u2019t turn back on after I had turned it off from playing. I had to physically unplug and plug it back into the wall too got it too come back on.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226700432", "uniq_id": "8592ca19-f069-5470-92be-ef5503f7df48", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 299.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 98.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 19.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 36.0, "uniq_id_stringindexer_transform": 146.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "392", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "KLP26", "review_title": "Great Features!", "review_description": "[This review was collected as part of a promotion.] This controller works great with our Nintendo Switch! I love the fact that it is wireless and vibrates while we play. It is also easy to use and handle! We are a family of 4 so I will be buying 3 more of these soon! Highly recommend for anyone who has a Nintendo Switch!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122087294", "uniq_id": "3add2868-0cfc-5f48-8791-d926b2dbded2", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 120.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 50.0, "review_title_stringindexer_transform": 352.0, "review_description_stringindexer_transform": 346.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 80.0, "uniq_id_stringindexer_transform": 300.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "393", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Mdcsooc7", "review_title": "Great controller", "review_description": "[This review was collected as part of a promotion.] I love the fact that it is wireless and I don't have to deal with wires being all tangled up. It's easy to hold, perfect size and weight for my hands. Very pleased with it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122023762", "uniq_id": "ad9b54e3-4762-590b-a852-63af3528cbbd", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 126.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 190.0, "review_title_stringindexer_transform": 4.0, "review_description_stringindexer_transform": 77.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 158.0, "uniq_id_stringindexer_transform": 341.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "394", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Joedtip", "review_title": "Great Features", "review_description": "[This review was collected as part of a promotion.] The Enhanced Wireless Controller for Nintendo Switch is easy to set up and use.  I love the Mario on it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122010486", "uniq_id": "385e416e-b857-55ee-ac2a-0576072e6373", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 288.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 315.0, "review_title_stringindexer_transform": 157.0, "review_description_stringindexer_transform": 118.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 232.0, "uniq_id_stringindexer_transform": 58.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "395", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Cvoshell4", "review_title": "Great product!", "review_description": "[This review was collected as part of a promotion.] Power A Enchanted Wireless Controller for Nintendo Switch works great! Love this item, it is easy to hold, and very easy to use and connect to console. Seems like it is very sturdy as well.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121995492", "uniq_id": "e052cd77-4a49-532c-879f-d46458da984a", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 398.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 35.0, "review_title_stringindexer_transform": 72.0, "review_description_stringindexer_transform": 33.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 206.0, "uniq_id_stringindexer_transform": 262.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "396", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Missy23", "review_title": "Love", "review_description": "[This review was collected as part of a promotion.] This item came in no time after ordering it which was a plus. It was easy to set up with the game system my boys were super excited and love it.. Now I\u2019m forced to buy another one so both of them can play together.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121974894", "uniq_id": "afd78dcb-1b2b-5967-bdaf-e82cc7a64652", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 86.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 241.0, "review_title_stringindexer_transform": 64.0, "review_description_stringindexer_transform": 73.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 23.0, "uniq_id_stringindexer_transform": 79.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "397", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Kiki2014", "review_title": "Amazing controller", "review_description": "[This review was collected as part of a promotion.] I just got the Enhanced Wireless Controller for Nintendo Switch and I must say I was surprised with the quality of it . It definitely makes playing so much easier especially when it comes to certain games.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121930697", "uniq_id": "db126a54-89c7-5ad8-ba95-641b8c223538", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 293.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 200.0, "review_title_stringindexer_transform": 23.0, "review_description_stringindexer_transform": 132.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 130.0, "uniq_id_stringindexer_transform": 74.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "398", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Mama", "review_title": "Great product!!", "review_description": "[This review was collected as part of a promotion.] This is a wonderful remote it\u2019s make playing the Nintendo switch so much easier. I love the remote it fits perfect in my hand as well my child\u2019s hand! This is so easy to use and much more better for the switch! I highly recommend this remote for anybody that has a Nintendo switch!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121884814", "uniq_id": "19ee363b-60a8-5ded-96af-6f28febe3495", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 176.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 247.0, "review_title_stringindexer_transform": 56.0, "review_description_stringindexer_transform": 312.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 308.0, "uniq_id_stringindexer_transform": 175.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "399", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "M3WILKERSON", "review_title": "So retro!", "review_description": "[This review was collected as part of a promotion.] This works perfectly and has alot of extra controls and features.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121884636", "uniq_id": "2d355f38-1266-5775-9058-b21faddb6072", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 118.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 396.0, "review_title_stringindexer_transform": 89.0, "review_description_stringindexer_transform": 106.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 99.0, "uniq_id_stringindexer_transform": 370.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "400", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Beau C", "review_title": "Works great", "review_description": "[This review was collected as part of a promotion.] I love this remote. It is easy to connect and use. The remote itself is well made and comfortable to hold. The fact that it is wireless is great and makes gaming more enjoyable. It does take batteries, but battery life is long. It is a perfect remote for any gamer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121868056", "uniq_id": "bef4412d-50fc-579b-a749-e67a52661770", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 40.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 369.0, "review_title_stringindexer_transform": 289.0, "review_description_stringindexer_transform": 272.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 376.0, "uniq_id_stringindexer_transform": 28.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "401", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Lisalou5150", "review_title": "Love it!", "review_description": "[This review was collected as part of a promotion.] I received this controller to test out and review. I suprised my 12 year old with it and he just loved it! He loves that it's wireless. He said it was so cool that he wanted to get his friend one for Christmas! So this is definitely kid approved. Thank you for this opportunity you made one kid very happy!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121864917", "uniq_id": "7b82a6a3-87e7-5cfe-876f-56a53ab2eecd", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 479.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 260.0, "review_title_stringindexer_transform": 184.0, "review_description_stringindexer_transform": 119.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 60.0, "uniq_id_stringindexer_transform": 51.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "402", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Videogamegente", "review_title": "Great for younger kids", "review_description": "This game is perfect for my first grader.  She can play alone, or we can add a Yoshi for a level and I can play with her.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126268175", "uniq_id": "fd975a90-b8e3-5159-8130-c50c5ac945eb", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 370.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 361.0, "review_title_stringindexer_transform": 94.0, "review_description_stringindexer_transform": 248.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 142.0, "uniq_id_stringindexer_transform": 315.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "403", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JJ77GB", "review_title": "Fun game, awesome graphics", "review_description": "Awesome game.  Amateur to intermediate skill level with a few hard levels but once you get to the end you\u2019ll play like a pro.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126265497", "uniq_id": "bd4d2b81-94df-5627-889b-21872c0e777d", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 215.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 238.0, "review_title_stringindexer_transform": 299.0, "review_description_stringindexer_transform": 429.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 277.0, "uniq_id_stringindexer_transform": 346.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "404", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JDHarsh", "review_title": "Cute and fun!", "review_description": "This game is so cute, easy and mellow. This game can be played with up to two players. My husband and I took turns playing with our 5yr old, he loved it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126261158", "uniq_id": "ef5055a5-a02c-5472-87a9-158244c487f6", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 67.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 268.0, "review_title_stringindexer_transform": 179.0, "review_description_stringindexer_transform": 331.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 214.0, "uniq_id_stringindexer_transform": 6.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "405", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Greenender23", "review_title": "Needs a better soundtrack.", "review_description": "Fun and easy. Though the sound track sounds very uninspired. If only Crafted worlds soundtrack could take note from Yoshi Story.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126253606", "uniq_id": "86d8bb86-c5df-535b-9e95-d709cf4b5922", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 320.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 55.0, "review_title_stringindexer_transform": 77.0, "review_description_stringindexer_transform": 74.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 19.0, "uniq_id_stringindexer_transform": 379.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "406", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Arjei Lynne", "review_title": "Just my thoughts", "review_description": "It\u2019s a real fun and easy game to play. I\u2019m not sure if there\u2019s a way to do increase difficulty since it only comes with two modes and I play classic. Regardless, the battles are fun, and if you want a game where you don\u2019t have to think way to hard this is it. I love the graphics and I love the creativity that goes into it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126259865", "uniq_id": "17905c2b-6d32-56c8-b6eb-5d4ab9f2f219", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 471.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 7.0, "review_title_stringindexer_transform": 360.0, "review_description_stringindexer_transform": 350.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 258.0, "uniq_id_stringindexer_transform": 121.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "407", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Abish", "review_title": "Short and sweet", "review_description": "A charming easy to play title that's perfect for young  kids.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126258810", "uniq_id": "19a05085-2d6f-5a53-9fe9-8dc9942c7879", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 109.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 292.0, "review_title_stringindexer_transform": 220.0, "review_description_stringindexer_transform": 139.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 126.0, "uniq_id_stringindexer_transform": 185.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "408", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Simi90", "review_title": "Great game", "review_description": "Overall great game. Interesting and has different elements than other Yoshi games to date. My son absolutely loves it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126258784", "uniq_id": "e5c8c18d-9848-59fe-9d4a-12c604a675b0", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 232.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 161.0, "review_title_stringindexer_transform": 10.0, "review_description_stringindexer_transform": 238.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 106.0, "uniq_id_stringindexer_transform": 231.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "409", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Davebasura", "review_title": "Yoshi", "review_description": "They should know that it\u2019s fun & cute & for all ages.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126256170", "uniq_id": "e6a73770-f7cd-564e-bf77-367069bbcb04", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 282.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 91.0, "review_title_stringindexer_transform": 15.0, "review_description_stringindexer_transform": 23.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 78.0, "uniq_id_stringindexer_transform": 253.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "410", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JCMA", "review_title": "Beautifully Developed!", "review_description": "Beautifully developed with great music. It appears as only for kids but don\u2019t be fooled. This game has enough puzzles and the replay value is definatley there!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126249716", "uniq_id": "fee58b67-3483-5b70-bcb6-74e5f0e93fdb", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 137.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 348.0, "review_title_stringindexer_transform": 309.0, "review_description_stringindexer_transform": 95.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 349.0, "uniq_id_stringindexer_transform": 64.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "411", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Pappabear03187", "review_title": "My Yoshi Experience", "review_description": "At first glance you would think this is a kid game and has no entertainment value for adults. I will tell you first hand, that is not the case with this game. The visuals are stunning and there is plenty of action packed platforming for everyone.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126252644", "uniq_id": "f882a003-351a-5ef7-b7b7-757d81ef4495", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 43.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 65.0, "review_title_stringindexer_transform": 368.0, "review_description_stringindexer_transform": 397.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 140.0, "uniq_id_stringindexer_transform": 380.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "412", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Liberty25", "review_title": "OLED55H-1 Sucks!", "review_description": "Where to start... do not buy this tv for a next gen console. You have to manually change the input setting from HDMI AUTO to HDMI 2.1 for the Xbox to recognize the 4K @ 120hz. If that wasn\u2019t annoying enough the specs said ALLM, HDR, and VRR. When you go to the TV info screen says no to HDR and VRR. Then proceeded to give the TV another chance by using the apps it offers. What a joke! The screen went green and kept flashing the picture. I tried five to six apps. All the same outcome. Finally on day three of owning it... it quit showing the picture for the Xbox. To confirm it wasn\u2019t the Xbox Series X I switched back to my Samsung Q70R TV which has a better picture and does everything, but 4K @ 120hz abs is still to this day running fine. Needless to say I shouldn\u2019t have bought a VIZIO in the first place like my gut told me. I wasted my gas and time on this TV.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226679986", "uniq_id": "d736627e-a587-5ffc-b505-49e31c8867f4", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 405.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 300.0, "review_title_stringindexer_transform": 255.0, "review_description_stringindexer_transform": 266.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 105.0, "uniq_id_stringindexer_transform": 293.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "413", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ghost Dylan", "review_title": "Has everything you want for an Oled Tv", "review_description": "I bought this almost two weeks ago and next to my brothers LG Oled it holds its own for the price. As a pure Oled screen this is the way to go but It\u2019s not perfect which is to be expected for the price as a budget Oled. It\u2019s native apps that don\u2019t support the tv\u2019s high resolution will have noticeable pixels and it\u2019s already showing signs of Oled burn in if you keep the same image on for more than one minute, you should allow rest mode after 15 sec of inactivity, I\u2019m serious! Just be gentle with the tv and don\u2019t forget to turn it off and you will get an amazing tv.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226677148", "uniq_id": "995d0ca0-de0d-58fa-90d5-7d9799b0e36d", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 267.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 402.0, "review_title_stringindexer_transform": 316.0, "review_description_stringindexer_transform": 121.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 373.0, "uniq_id_stringindexer_transform": 246.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "414", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jasper L.", "review_title": "All the bells and whistles!", "review_description": "No other brand Tv can compete with the quality and price of this TV!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226674137", "uniq_id": "29f3ac3e-d2fb-5187-a780-1670136e97a0", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 167.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 291.0, "review_title_stringindexer_transform": 257.0, "review_description_stringindexer_transform": 149.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 234.0, "uniq_id_stringindexer_transform": 34.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "415", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "VinnyD", "review_title": "Awesome!", "review_description": "For those having trouble gaming in 120hz, you have to change the settings to 2.1 on your hdmi 2. I almost didn't buy because the reviews on gaming saying it wouldn't do 120hz at 4k but it absolutely will and the Xbox verified that. Just change your settings to 2.1. The best picture quality on any TV I've ever owned. Truly amazing!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226672941", "uniq_id": "206cfb0b-c2bd-5c16-8699-f8f01d670f44", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 71.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 330.0, "review_title_stringindexer_transform": 18.0, "review_description_stringindexer_transform": 68.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 271.0, "uniq_id_stringindexer_transform": 53.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "416", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "adrianiii", "review_title": "Great picture! Great sound!", "review_description": "I've been looking at the new OLED model tvs for a while and I'm so glad I finally purchased my very own OLED 4K tv.  The picture is incredible even if what you're watching isn't in High Def.  High def channels and movies look so good but the 4K programming is insanely sharp. It looks as if you're actually there", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226663884", "uniq_id": "268a103b-4fb8-5479-8872-9cb3d3383705", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 384.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 27.0, "review_title_stringindexer_transform": 46.0, "review_description_stringindexer_transform": 13.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 220.0, "uniq_id_stringindexer_transform": 187.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "417", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bgerald", "review_title": "Great picture", "review_description": "This was a great purchase. Perfect blacks and beautiful color reproduction. I am impressed with the build quality and the attention to detailed such as the the wiring placement. Also the apps that\u2019s included are amazing. It also has Apple TV!! The only thing missing is a voice search on the remote. Other than that great purchase and extremely happy.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226662940", "uniq_id": "8cceda67-4c9c-5187-8a0e-fae36799ed85", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 491.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 47.0, "review_title_stringindexer_transform": 3.0, "review_description_stringindexer_transform": 186.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 330.0, "uniq_id_stringindexer_transform": 107.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "418", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "JON205", "review_title": "Great Choice", "review_description": "So far so good.  Enjoying the difference that OLED offers.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226662747", "uniq_id": "bef97385-8ff8-50e6-940f-f0f05b81a9c4", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 75.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 340.0, "review_title_stringindexer_transform": 308.0, "review_description_stringindexer_transform": 340.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 285.0, "uniq_id_stringindexer_transform": 309.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "419", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Joey D215", "review_title": "Awesome TV for the PS5 !", "review_description": "Just picked this TV up a couple weeks ago did a lot of research thanks to YouTube and saw that this was the TV to get for gaming A++", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226661973", "uniq_id": "53298df5-7dec-51dc-b18f-29b2a7165011", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 221.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 33.0, "review_title_stringindexer_transform": 276.0, "review_description_stringindexer_transform": 26.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 83.0, "uniq_id_stringindexer_transform": 170.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "420", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TomsVizio", "review_title": "Almost great for gaming", "review_description": "120hrz, VRR, VRR+HDR, black screen but at 60htz it looks great! Vizio please fix.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 459.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 355.0, "review_title_stringindexer_transform": 354.0, "review_description_stringindexer_transform": 357.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Thx", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 42.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Xbox Series x\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "3", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "226623767", "not_helpful_count": "6e496bf1-e93c-58ac-8889-a3a9b9b69afa", "reviewed_at": "16/01/2022 16:18:05", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 231.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 5.0, "review_description_stringindexer_transform": 6.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 26.0, "not_helpful_count_stringindexer_transform": 23.0, "reviewed_at_stringindexer_transform": 12.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "421", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ricw", "review_title": "look out gamerz, here comez awsome", "review_description": "Excellent TV! Beautiful.picture. Easy to use, with enough extras .", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226608892", "uniq_id": "47719f17-1a09-557b-a952-c2ed310910b1", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 69.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 321.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 102.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 113.0, "uniq_id_stringindexer_transform": 96.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "422", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "JustJess76", "review_title": "Great controller!!", "review_description": "[This review was collected as part of a promotion.] This is a great addition to our Nintendo Switch. Easy to set up and easy to use. I highly recommend!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121860312", "uniq_id": "a0548af2-8959-52a2-ab05-c73a838d9145", "scraped_at": "16/01/2022 16:18:06", "index_stringindexer_transform": 216.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 140.0, "review_title_stringindexer_transform": 182.0, "review_description_stringindexer_transform": 296.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 243.0, "uniq_id_stringindexer_transform": 182.0, "scraped_at_stringindexer_transform": 11.0}, {"index": "423", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Pvtcarlswife", "review_title": "Great bonus features and love graphics", "review_description": "[This review was collected as part of a promotion.] I got this for my son and grandson who play the switch together. My son is an old school Nintendo fan so when I saw this with the old graphics I got it immediately. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 379.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 103.0, "review_title_stringindexer_transform": 262.0, "review_description_stringindexer_transform": 152.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "He absolutely loves it. It linked up easily and is user friendly. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 338.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "He loves the two on the fly buttons he can map to Make his play more custom. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 98.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}], "FE": [{"transformationsData": [{"feature_label": "index", "transformation_label": "String Indexer"}], "feature": "index", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "211.5", "stddev": "122.54", "min": "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "max": "in between each secret is so satisfying.\"", "missing": "0", "distinct": "499"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "index"}, {"transformationsData": [{"feature_label": "name", "transformation_label": "String Indexer"}], "feature": "name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "469", "mean": "", "stddev": "", "min": " and they kind of fight over it.  They really like the retro Mario on the controller", "max": "yes: I recommend this product", "missing": "31", "distinct": "38"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "name"}, {"transformationsData": [{"feature_label": "brand", "transformation_label": "String Indexer"}], "feature": "brand", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "451", "mean": "", "stddev": "", "min": " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", "max": "yes: I recommend this product", "missing": "49", "distinct": "22"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "brand"}, {"transformationsData": [{"feature_label": "sku", "transformation_label": "String Indexer"}], "feature": "sku", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "451", "mean": "266631.73", "stddev": "99207.12", "min": " #1 is eARC (awesome)", "max": "yes: I recommend this product", "missing": "49", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "sku"}, {"transformationsData": [{"feature_label": "reviewer_name", "transformation_label": "String Indexer"}], "feature": "reviewer_name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "453", "mean": "19.92", "stddev": "101.18", "min": " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "max": "zachR", "missing": "47", "distinct": "416"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviewer_name"}, {"transformationsData": [{"feature_label": "review_title", "transformation_label": "String Indexer"}], "feature": "review_title", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "445", "mean": "0.0", "stddev": "0.0", "min": " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "max": "look out gamerz, here comez awsome", "missing": "55", "distinct": "393"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "review_title"}, {"transformationsData": [{"feature_label": "review_description", "transformation_label": "String Indexer"}], "feature": "review_description", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "454", "mean": "3.84", "stddev": "1.83", "min": " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "max": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "missing": "46", "distinct": "435"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "review_description"}, {"transformationsData": [{"feature_label": "recommended_review", "transformation_label": "String Indexer"}], "feature": "recommended_review", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "425", "mean": "4.09", "stddev": "1.21", "min": " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", "max": "yes: I recommend this product", "missing": "75", "distinct": "20"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "recommended_review"}, {"transformationsData": [{"feature_label": "verifed_purchaser", "transformation_label": "String Indexer"}], "feature": "verifed_purchaser", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "258", "mean": "655.06", "stddev": "958.24", "min": " and to get 4K", "max": "yes: I recommend this product", "missing": "242", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "verifed_purchaser"}, {"transformationsData": [{"feature_label": "helpful_count", "transformation_label": "String Indexer"}], "feature": "helpful_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "424", "mean": "7017251.36", "stddev": "36576741.04", "min": " 2", "max": "Verified Purchaser", "missing": "76", "distinct": "36"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "helpful_count"}, {"transformationsData": [{"feature_label": "not_helpful_count", "transformation_label": "String Indexer"}], "feature": "not_helpful_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "424", "mean": "4495646.89", "stddev": "30454540.27", "min": " 3", "max": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "missing": "76", "distinct": "47"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "not_helpful_count"}, {"transformationsData": [{"feature_label": "reviewed_at", "transformation_label": "String Indexer"}], "feature": "reviewed_at", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "423", "mean": "91221663.0", "stddev": "124910521.85", "min": " and Experimental", "max": "fa660933-1130-5c66-9010-24d641f70bc7", "missing": "77", "distinct": "46"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviewed_at"}, {"transformationsData": [{"feature_label": "rating", "transformation_label": "String Indexer"}], "feature": "rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "406", "mean": "313231.79", "stddev": "6185743.26", "min": " and no larger maps to choose from. In the first version you had a large selection of maps", "max": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "missing": "94", "distinct": "19"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "rating"}, {"transformationsData": [{"feature_label": "average_rating", "transformation_label": "String Indexer"}], "feature": "average_rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "398", "mean": "4.44", "stddev": "0.43", "min": " and experimental units are really not that great", "max": "ef72459e-8f5c-57dc-af42-0127d2903498", "missing": "102", "distinct": "16"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "average_rating"}, {"transformationsData": [{"feature_label": "reviews_count", "transformation_label": "String Indexer"}], "feature": "reviews_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "396", "mean": "978.9", "stddev": "1006.83", "min": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "max": "4.6556", "missing": "104", "distinct": "13"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviews_count"}, {"transformationsData": [{"feature_label": "comment_id", "transformation_label": "String Indexer"}], "feature": "comment_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "165972981.36", "stddev": "56535283.62", "min": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "max": "95223899", "missing": "105", "distinct": "395"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "comment_id"}, {"transformationsData": [{"feature_label": "uniq_id", "transformation_label": "String Indexer"}], "feature": "uniq_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "117776414.0", "stddev": "113745916.96", "min": " don't make the same mistake I did. Do not buy this game.\"", "max": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "missing": "105", "distinct": "395"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "uniq_id"}, {"transformationsData": [{"feature_label": "scraped_at", "transformation_label": "String Indexer"}], "feature": "scraped_at", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "3.41", "stddev": "nan", "min": " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "max": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "missing": "105", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "scraped_at"}, {"feature": "index_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "248.5", "stddev": "144.48", "min": "0.0", "max": "498.0", "missing": "0"}, "updatedLabel": "index_stringindexer_trans..."}, {"feature": "name_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.87", "stddev": "5.64", "min": "0.0", "max": "37.0", "missing": "0"}, "updatedLabel": "name_stringindexer_transf..."}, {"feature": "brand_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.07", "stddev": "2.84", "min": "0.0", "max": "21.0", "missing": "0"}, "updatedLabel": "brand_stringindexer_trans..."}, {"feature": "sku_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.0", "stddev": "2.39", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "sku_stringindexer_transfo..."}, {"feature": "reviewer_name_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "172.75", "stddev": "134.22", "min": "0.0", "max": "415.0", "missing": "0"}, "updatedLabel": "reviewer_name_stringindex..."}, {"feature": "review_title_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "154.81", "stddev": "128.01", "min": "0.0", "max": "392.0", "missing": "0"}, "updatedLabel": "review_title_stringindexe..."}, {"feature": "review_description_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "188.88", "stddev": "138.02", "min": "0.0", "max": "434.0", "missing": "0"}, "updatedLabel": "review_description_string..."}, {"feature": "recommended_review_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.67", "stddev": "2.24", "min": "0.0", "max": "19.0", "missing": "0"}, "updatedLabel": "recommended_review_string..."}, {"feature": "verifed_purchaser_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.83", "stddev": "1.77", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "verifed_purchaser_stringi..."}, {"feature": "helpful_count_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.82", "stddev": "5.31", "min": "0.0", "max": "35.0", "missing": "0"}, "updatedLabel": "helpful_count_stringindex..."}, {"feature": "not_helpful_count_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.58", "stddev": "7.87", "min": "0.0", "max": "46.0", "missing": "0"}, "updatedLabel": "not_helpful_count_stringi..."}, {"feature": "reviewed_at_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "4.37", "stddev": "7.76", "min": "0.0", "max": "45.0", "missing": "0"}, "updatedLabel": "reviewed_at_stringindexer..."}, {"feature": "rating_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.11", "stddev": "2.26", "min": "0.0", "max": "18.0", "missing": "0"}, "updatedLabel": "rating_stringindexer_tran..."}, {"feature": "average_rating_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.89", "stddev": "2.04", "min": "0.0", "max": "15.0", "missing": "0"}, "updatedLabel": "average_rating_stringinde..."}, {"feature": "reviews_count_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.77", "stddev": "1.7", "min": "0.0", "max": "12.0", "missing": "0"}, "updatedLabel": "reviews_count_stringindex..."}, {"feature": "comment_id_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "155.63", "stddev": "129.4", "min": "0.0", "max": "394.0", "missing": "0"}, "updatedLabel": "comment_id_stringindexer_..."}, {"feature": "uniq_id_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "155.63", "stddev": "129.4", "min": "0.0", "max": "394.0", "missing": "0"}, "updatedLabel": "uniq_id_stringindexer_tra..."}, {"feature": "scraped_at_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "3.75", "stddev": "3.19", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "scraped_at_stringindexer_..."}], "samplecount": 500, "message": "Successfully executed", "status": 1, "userid": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "FEGraph": [{"values": {"label": ["0", "1", "2", "3", "FYI...the 65\u201d HD television I had to replace was a Samsung that was about 4 or 5 years old that stopped working after some loud cracking and popping noises that sounded like the transformer on an overhead power line blowing out. However", "4", "5", "6", "7", "8", "I am so happy to have this wonderful big one for my first OLED TV", "9", "10", "11", "12", "13", "14", "15", "16", "17", "This thing is only $20 more than the ES2", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "The \u201ccrafted world\u201d is exceptionally detailed", "The gameplay is tight", "Most importantly", "28", "29", "30", "31", "32", "He agreed this morning while watching NASCAR that I was right. Yeah for me.\"", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "Wonderful OLED TV\"", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "More color Yoshi\u2019s to choose from and a forward and backwards game in every course. It\u2019s a lovable game to play!\"", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "Pros:", "1. The picture is absolutely gorgeous and you can tune it further to your choice.", "2. The Smartcast interface is decent.", "3. The remote is also not bad at all.", "4. Very quick to connect apple play. ", "5. There are ample connection options for my bedroom", "Cons:", "1. Cast is buggy. I can never get it to run first time. This is where I would focus most of the development time if I were Vizio.", "2. Smart Cast does not have a browser app that is accessible easily.", "3. There is no easy way to add more apps that are not already in the Vizio library.", "4. The detail picture quality will not go up to the level you get out of a top line OLED. ", "5. The bezel is still not near zero bezel size. It is sizable to be noticeable.", "Overall", "95", "The Good: Smart casting features. ", "The Bad: Pre-calibrations could improve", "THE UGLY: Very Very buggy software. Doesn't start a lot of times and have to re-plug many times. Brings me Anxiety.\"", "96", "A few quirks with the PS5 too. Sometimes when I power on the TV it also turns on the PS5. Sometimes when I power on the PS5 the TV turns on too. Neither seems to be consistent. ", "Needs and HBO Max app. Also needs to be able to disable inputs from the list like in previous Vizio models. ", "All minor issues and possibly handled via software or firmware updates. The hardware is solid though.\"", "97", "98", "99", "100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "120", "121", "122", "123", "124", "125", "126", "127", "128", "129", "130", "131", "132", "133", "134", "Make", "Stuff in your house.\"", "135", "136", "137", "138", "139", "140", "The important thing you might not first look for in a TV is how black the blacks are", "The only issue I have is the speakers leave a bit to be desired. They\u2019re ok", "141", "142", "143", "144", "145", "146", "147", "148", "149", "150", "151", "152", "153", "154", "155", "156", "157", "158", "159", "160", "161", "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "The picture is beyond amazing!! OS is smooth and video games look so darn good! Im buying the 65\"\" for the front room next week!\"", "172", "I\u2019d love to be able to recommend merely because of the picture and viewing angles alone", "173", "174", "175", "176", "177", "178", "I am so glad I gave it a chance!\"", "179", "180", "181", "182", "183", "184", "185", "186", "187", "188", "189", "190", "191", "Going back and forth between each level", "in between each secret is so satisfying.\"", "192", "193", "194", "195", "196", "197", "198", "199", "200", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "212", "213", "214", "215", "216", "217", "218", "219", "220", "221", "222", "223", "224", "225", "226", "227", "228", "229", "230", "231", "232", "233", "234", "235", "236", "237", "238", "239", "240", "241", "242", "243", "244", "245", "246", "247", "248", "249", "250", "251", "252", "253", "254", "255", "256", "257", "258", "259", "260", "261", "262", "263", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "It's great...color", "275", "276", "277", "278", "279", "With its easy to mount", "Out of the box it had a firmware update. and then a week later another.  the 2nd was a bit rude", "I am using the amazing OLED with a brand new 4k reciever with eARC.  So everying goes through the Amplifiter through a high end HDMI ARC certified cable to the TV's HDMI 1 (eArc).  Most days its running fantastic and smooth as expected.  Although", "280", "281", "282", "283", "284", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "1) airplay doesnt work 90% of the times unless i go into admin & privacy and reboot the TV.", "2) even after reboot it doesnt work 50% of the times", "3) same issue with chrome cast as well", "4) TV screen turns off while mirroring screen via my Ipad every 10-15 minutes.", "5) while connected to HDMI port when im in zoom meeting using TV as external monitor", "6) Home button doesnt work 50% of the times", "298", "299", "300", "301", "302", "303", "304", "305", "306", "307", "308", "309", "310", "Love how everything looks like crafts. ", "As a Yoshi/Poochy fan I enjoy the Yoshi games.\"", "311", "312", "313", "314", "315", "316", "317", "318", "319", "320", "321", "322", "323", "324", "HOWEVER", "This is still a really good TV. But the growing pains right now would keep me from recommending it to others. (I'm coming from a 2018 Vizio P series)\"", "325", "326", "327", "328", "329", "330", "331", "332", "333", "334", "335", "336", "337", "338", "339", "340", "341", "342", "343", "344", "345", "346", "347", "348", "349", "350", "351", "352", "My only critique is that I wish it performed @ a 1440p resolution. Everything else is great!\"", "353", "354", "355", "356", "357", "358", "359", "360", "361", "362", "I like that this is wireless with sensors ", "This controller has Bluetooth", "The motion controls are awesome", "This has a design that feels good in the hands", "My nephews prefer this over the other wireless controller we have", "363", "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "*the added mappable buttons could come in handy even though I haven't used those yet.", "*the cost is much less than the Nintendo pro controller. ", "The cons:", "*slightly unconventional setup. ", "It's not a problem though if you read the instructions. ", "*its lighter in weight which makes me wonder about durability. ", "Makes a perfect 2nd controller for kids.\"", "364", "365", "366", "367", "368", "369", "370", "371", "372", "373", "374", "Great sequel to Wooly World\"", "375", "376", "The addition of being allowed to manually aim your eggs removes some of the frustration that earlier titles had and there are collectible items in abundance for completionists. That all said", "The biggest hiccup in the game I think is the mini quests you get. Each level has multiple different set pieces that a robot will want you to collect. The issue is you can only do one at a time so the game asks you to play through one level at least 6 or 7 times and it can get rather tedious at times. My suggestion is that if you are collecting everything", "In the end the game is a relaxing adventure through a handcrafted (Almost literally) world that never fails to charm. Perfect for players of all ages", "377", "378", "It's a great game for kids and adults!\"", "379", "380", "381", "382", "The one thing that would truly be the cherry on top", "383", "384", "385", "386", "387", "388", "389", "390", "391", "392", "393", "394", "395", "396", "397", "398", "399", "400", "401", "402", "403", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417", "418", "419", "420", "Thx", "Xbox Series x\"", "421", "422", "423", "He absolutely loves it. It linked up easily and is user friendly. ", "He loves the two on the fly buttons he can map to Make his play more custom. "], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "index", "count": 499, "min": "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "max": "in between each secret is so satisfying.\""}, {"values": {"label": ["VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", " my 42\u201d VIZIO that I bought in \u201808 doesn\u2019t even have a single bad pixel. Food for thought.\"", " of which screen is fantastic and very light compared to my previous one indeed.\"", "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", " and you know they could\u2019ve easier made it $100 more and still sold out. Amazing.\"", "Yoshi's Crafted World - Nintendo Switch", " with cardboard cutouts", " with seamless reaction times and plenty of opportunities to save yourself from mistakes.  Easy enough for kids to pick up", " this game is fun!\"", "yes: I recommend this product", "No: I don\u2019t recommend this product", " for the price it is a good deal.\"", "Supreme Commander 2", " followed by how light the screen can be without a terrible contrast. This TV fit the bill for both. Also", " but if you want a theater experience", " truth is because of the issues at present with the firmware", " finding every nook and cranny ", " sound and price. We have had Visos in the past and have been very pleased.\"", " easy setup", " as it occurred in the middle of a show without warning.", " the TV has 2 behaviors that need adjusting", "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", " i will have to reboot more than once", " it throws message no signal detected and turns off TV after few minutes", " unless TV is rebooted\"", " there are a few headaches that is keeping me from recommending it", "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", " so I'm not tied down with a cord.  ", " mappable buttons", " this is a smart product!", " it is not bulky or hard to work.  ", " and they kind of fight over it.  They really like the retro Mario on the controller", "WRC 8 FIA World Rally Championship - PlayStation 4", " the game is not meant for those looking for a challenge. I don't need dark souls levels of difficulty", " don't try to get it all at once because I assure you you will be back through that level multiple times.", " but if you're looking for a challenge I would look elsewhere.\"", " would be to have a microphone on the remote control to search for a program like the roku\u2019s do. ", " it is a good sized tv with an amazing picture. Well worth it.\""], "data": [140, 1, 1, 82, 1, 140, 1, 1, 1, 45, 2, 1, 22, 1, 1, 1, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 22, 1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 1]}, "label": "name", "count": 38, "min": " and they kind of fight over it.  They really like the retro Mario on the controller", "max": "yes: I recommend this product"}, {"values": {"label": ["VIZIO", "yes: I recommend this product", "Microsoft", "Nintendo", " Pinterest worth constructions", " but easily enjoyed by gamers of all ages", "No: I don\u2019t recommend this product", "Verified Purchaser", "Square Enix", " this TV is fully ready for the Max features of the Series X and PS5.", " buy a sound bar or speakers.\"", " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", " the show just begins with its amazing ink black levels", " not sure if its me or a firmware update.  They are: the screen goes blank when new input isnt supplied", "Little Orbit", " while im still in between the meeting.", " the first is the HDMI 2.1 port. The OLED h-1 has 4 HDMI ports", "PowerA", " fully programmable", " and make fun of me because it was brand new \"\"in my day\"\".  This is fun", "Maximum Games", " but at least some sort of resistance would have been nice. Levels can basically be run through rather blind if you're not hunting for every red coin or flower. Even the challenge levels at the end of the game don't really have much bite to them."], "data": [140, 56, 82, 140, 1, 1, 2, 6, 22, 1, 1, 1, 1, 1, 11, 1, 1, 22, 1, 1, 7, 1]}, "label": "brand", "count": 22, "min": " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", "max": "yes: I recommend this product"}, {"values": {"label": ["328244", "yes: I recommend this product", "307392", "Verified Purchaser", "191609", " and vibrant colors that pop on everything from the tiny Switch screen to a 70\u201d flatscreen TV.", "0", "522023", "No: I don\u2019t recommend this product", " beautiful imagery from its 1080P to its upscaling to 4k", " ie your movie is paused. And you need to press the OK on the remote to wake it up.  Having your show resume", "119061", " #1 is eARC (awesome)", "231963", " and more.  ", " so I'd definitely recommend this product.\"", "205005"], "data": [140, 50, 82, 3, 140, 1, 16, 22, 1, 1, 1, 11, 1, 22, 1, 1, 7]}, "label": "sku", "count": 17, "min": " #1 is eARC (awesome)", "max": "yes: I recommend this product"}, {"values": {"label": ["Leeford", "DJM7", "EC82", "Weeto", "0", "LexusSC400", "Ninjaafro", "von R", "Ohio Erik", "jonck", "Bob279", "NuggetsOne", "AJ V", "Always a fool", "RootM0d", "Ozlas", "Odium Prius", "Ryan CIN3MATIX", "Punkwaste", "CosmicOwl", "Skyturtle97", "Pitbull91101", "Mykd", "Chigg", "Prieto56", "Iz B", "Angel Marred", "Derrick Evans", "Jeremy Green", "zachR", "1", "Carl78", "Alejandro Rivera", "Pixle101", "Sillypajamas", "John4", "Mike1921", "Bmitch20", "karena", "Babes70", "Koky87", "Dcm388", "SunnyS", "Spenceleoz", "Rich190", "DrKillem", "Areria", "eyesayahh", "Animehipster", "Moi93", "Geo R", "JohnHalo117", "GrabAzzery", "Chaz54", "Jukeman79", "dfint", "SamuraiMatt", "DKCBatch", "VileMKII", "LRoberto", "Philliptate7", "Toxicbug", "Bardot", "tackomoto", "Bob81", "Porkchop76", "Bino7899", "Doblado98", "Super Awesome!", "jpc3", "Terry T.", "Canothegreat", "shane19", "R Robles", "IanMan141", "Anonymous", "Gaming reviews6", "twojoesf", "Marco AP", "I own this", "Fa crediblenick", "516", "M4lmx81", "NicoleD90", "MDB3", "Bigbadbarry", "Scott79rod", "BubbaHero4All", "Diana finley", "HeliosExe", "platygirl", "2-Apr", "Candice S", "Woodbine23", "Maximus", "Pat23", "woodbine23", "Rajib", "KristovM", "goobs150", "sftaylor614", "Johnboi781", "Harbinger86", "King TJ 09", "Biobroly24", "Killerxxx08", "Parker86", "PUGLOVERRG", "Kamna", "Natees", "Nate Corneliusen", "Racheljay11", "D3vonator", "Vegas momma", "Henrio", "Jeefly", "BoJackson87", "tankgod1", "16nflp", "Joey3245", "chiknwingding", "GeneralM99", "fiddlegammer11", "Commando38", "CoD4 Veteran 13", "TheGamerGalore", "agent00aa", "jonso", "KingEdd", "Ems C", "Leon81", "Kids love i", "Marshmilo", "makeshift SP", "Marc reed", "Kwoodky", "Marieleisele", "Jb2827", "TCTV", "Mofa", "Cat711", "FXDLS110", "GASMAN", "ectaylo", "Melony", "Slair", "ll1cool1", "DK4345", "Hothroy", "Zanderspike", "N Zero", "daSurge", "James0023", "Adyn Evans", "glumee", "Azucarmamacita", "dahc", "killer_kenne", "JustWill1982", "Theraven16", "Penutt2", "TheMonty", "Drdrums", "Midwestmikey", "Chrissy in ny", "Vman", "T. Lawson", "deshon", "MPock", "DaBurghLover", "Buck Bull Stallion", "MrGregory2000", "cliff90", "Barry1226", "Timbo88", "Assassionator", "Brannon M", "Johnson1720", "Disappointeddd", "JLAxxSPARTAN", "Henroc", "Seena", "RandiBeth", "Elope90", "Cfm1985", "BubonicChronic", "Buttztallion", "Digmyearth", "JackB72", "RobertKW", "Angelrose2", "Noz 37", "AikenAidan", "Kyoungblood", "SumoSpike", "Deathsprophet", "Bumzab", "nonxaznxboi", "Kerican", "Cycephenom", "DemonWolfC6", "Gamerguy", "Mkaz", "MRDSIGN", "Rcmm", "Angela W", "Shaun7979", "Blurr60", "Twan", "Res136", "Jcompu466", "Astraeus", "dRn00bies", "Nicole F", "David Armando", "spartan19", "BxBNicX", "The name John was taken", "Jrjbaj", "PetLover62", "Gamer Man77", "Patrick Giles", "Blackfeather666", "Dadadum", "Mr Dingus", "DarkEmpressAly", "mariofamily", "DaddyRay78", "Amanda Cooper", "JA II", "MM213", "Androl123", "RayMel5", "VALumiere", "Mikeiceman", "PM117ER", "Patrick w7", "JakeO62", "Rambo34", "jws1025", "Mattoxbox", "Ellie RA", "mdfsandman", "thearchie32", "boilerone", "Quando", "None, none", "Jos\u00e9viera264", "The truth", "A-bomb", "John26", "dmartinez097", "JPez1", "Luccon7", "xTheSandman72", "Doomcrew", "Da1trueS4nch3Z", "NexusWolf", "The1stAv3ng3r", "JCMB", "cheeseman585", "Sixkids", "Jerk unit", "TheArgyleWizard", "CampM", "Carebear43055", "CWB!", "RickZ", "The Doctor", " to its true 4K Glory. ", " doesnt do it.  and the 2nd is that a few times now", "TOGA Sarge", "JMCH", "Margot", "Skeet96", "MikeOxlong69", "TimB76", "LivinLow", "Neco46", "Cbj4892", "Shaqcool", "Unlockable51", "AceZero17X", "DumbMarsupial", "mn1meii", "Greg11", "Drew6977", "Shafi", "RedRaider", "cccmak126", "RomS", "Fivonefivo", "Imagine1959", "TomDawg1", "KarateBear", "ChristyJay", "AnnB", "Sleepy Ninja", "SD Dad", "Nyxian", "Izzy28", "lenosaurio", "Kelchyd", "Mipsie", "Heather0101", "Hutchworld", "Stude", "Ybreeze5", "Kenny H", "StevieC", "Jethro2312", "ACyberPoet", "Jojo2414", "Chasd", "McFang", " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "phyra", "Anthony87", "Richard947", "Jon bc", "Justmeow0417", "halfjew22", "Eglandon", "Kittencakes", "FireWife", "Brennan91", "Josr85", "Yoshi Fan1", "ShadowKnight92", "R00T666", "Mr Eric", "Dadgames", "Weasel771q", "Anthony Nussbaum", "kschneider1231", "Rwarmander", "Randy cox", "IrishRunner", "Ray T", "SDotRinney", "Prakers", "PaulS", "Whydoihavetohaveanickname", "Britan91", "Ezirkle", "Carlos G.", "Radwithab", "Meadow", "Jess2274", "MandM", "Cheeks784", "cwinniebear24", "Mommyof2boyz", "DiamondAries999", "yes: I recommend this product", "RachelA1020", "Court the Sport", "NSU_Ant", "IAMTHEWHEELMAN", "Alllly", "The monumental", "Sarge97502", "Holden Macaque", "Christow", "ghostdph", "carauza", "Charlie from VA", "emperordesslok", "Jack Badgerlord Fox", "SusieK", "Mebunny", "Drumfreak117", "TitusJ99", "MotherMayI", "LaBestia", "Lauri49", "jmrichard427", "Tom42", "Cowboy101084", "Mugen", "Suzey", "Concerned vizio tv owner.", "mh061", "Golam41", "KLP26", "Mdcsooc7", "Joedtip", "Cvoshell4", "Missy23", "Kiki2014", "Mama", "M3WILKERSON", "Beau C", "Lisalou5150", "Videogamegente", "JJ77GB", "JDHarsh", "Greenender23", "Arjei Lynne", "Abish", "Simi90", "Davebasura", "JCMA", "Pappabear03187", "Liberty25", "Ghost Dylan", "Jasper L.", "VinnyD", "adrianiii", "Bgerald", "JON205", "Joey D215", "TomsVizio", "Ricw", "JustJess76", "Pvtcarlswife"], "data": [1, 1, 1, 1, 23, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 14, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "reviewer_name", "count": 416, "min": " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "max": "zachR"}, {"values": {"label": ["look out gamerz, here comez awsome", "Great looking screen!", "Quality", "Unbelievable picture quality!", "0", "Vizio OLED", "Bugs", "Glass like screen", "Amazing 4k picture", "Great features", "Great picture and a good price", "Awesomeness!", "Fantastic product", "Not all as it seems", "Beautiful design - Awesome feel - Must get one!", "Simply amazing", "Limited Edition Halo Controller", "Beautiful Elite Series 2", "Firing on all cylinders.", "Rad sauce", "Excellent purchase.", "Yoshi switch game", "Awesome game if you like the Mario brothers games.", "Awsome game...", "Awesome Game for Children!", "Poochy", "Not bad", "Opinion on Yoshi Crafted World", "Another Win-tendo Jewel!!", "Good game", "Best Nintendo game I ever played!", "Brilliant picture", "Absolutely amazing picture quality", "This tv is vibrant", "10 months ago", "Great picture, confusing to turn on", "Nice tv", "Gorgeous picture!", "Love this TV!!", "Great tv for value", "Best tv for the price", "TV is awesome!!", "Xbox Elite Controller 2 - Halo Edition", "Premium Halo Xbox Elite Controller", "Amazing!", "Great controller but late shipping", "Best Controller", "Great controller", "Halo Elite Series 2 Controller", "Buy one if you can find it!", "Halo Infinite Controller:)", "A High Quality Masterpiece", "Yoshi party", "BUY IT", "Tank Yoshi and the layered egg aiming", "Yoshi's Crafted World", "Good", "Super awesome", "1 or 2 player fun!", "Game play", "Love It", "Fun repeat play factor", "Outstanding!", "Deep blacks", "Great TV for the price", "Amazing tv", "11 months ago", "Great features!", "Great price, Vizio is a reliable brand", "Good TV for the Price but has some issues", "Beautiful oled screen", "Looks great!", "Best Controller!", "Elite  Series 2 Halo Wireless Controller", "Amazing", "Great looking controller!", "Buttons don\u2019t register", "Excellent controller", "Awesome controller", "Solid controller", "This is awesome design", "Awesome!", "Family time", "Yoshi Fun!", "2 years ago", "Awesome", "Great game!", "Yoshi's crafted world", "gud", "Yoshi's Crafted World... Buy it TODAY", "Classic", "Yoshi's crafted world is fun", "Excellent product", "Awesome Features!", "Buggy like no tomorrow", "Almost but not quite", "Great Clarity, Very Very buggy software.", "Gorgeous screen with a few quirks", "Vizio OLED TV", "Love / Hate Relationship", "Excellent tv great picture", "Love it", "Incredible controller!", "Halo Infinite Elite Series 2 Controller", "Halo lovers & competitive players dream", "Xbox elite series 2", "Microsoft Elite 2 Pro Controller Halo Edition", "Beautiful controller", "Worth every penny.", "It's alright", "Easy to pick up, hard to master", "Fun new twist on a Yoshi", "It\u2019s okay", "A Unique 3D Adventure that's hard to resist", "Cute Yoshi game", "A wonderful game", "Yoshi", "Great Game!", "Great game.", "Not as good as it looks", "I don't see how people can't like it", "Great...but...", "Best RTS game made so far", "good, but a little disappointed", "SC2? or sometihng completely  different?", "Crafted Family Fun", "He love it", "Big replay value", "Retro", "Kids love it", "Awesome, Nothing too Over the top", "The game", "Gotta get it!", "Great fun for everyone.", "Reasonable pricing, great OLED", "Very Nice", "Awesome picture", "Great Picture", "Picture is good, the firmware needs improvement", "Really Good TV, I\u2019m not a gamer.", "Great Picture/Horrible Software", "Beautiful picture and great sound!", "Beautiful picture, disappointing software...", "Great colors sometimes", "Xbox Halo Elite Series 2 Controller thoughts.", "Oh so pretty!", "Issues with mine, probably not everyone.", "Great Halo Controller", "Finish the fight!", "Master Chief approves", "Love this controller.", "Coolest controller", "Halo Infinite Elite Controller", "Great once I got the working product.", "Nintendo Just KNOWS Fun!", "Yoshis crafter world", "Cute and fun", "Yoshi crushes another one outta the park!!", "More Yoshi fun.", "Yoshi\u2019s Crafted World", "Beautiful game but a bit overpriced.", "Don\u2019t miss this if you like platformers!", "Great game for kids and adults", "Oled 55in TV", "Blown Away!!!!", "1 year ago", "Awesome picture, firmware need work", "OK Updates would make it better", "Excellent Oled", "Super crisp picture quality", "Okay", "Vizio oled h1", "World Class Display OLED", "Best Picture Ever", "Sticky R thumbstick Resistance.", "Great controller now a little better", "Y button doesnt work all the time.", "Xbox Halo Elite 2 Controller", "Halo LE Elite 2", "Faulty product with known issues", "Xbox Elite Controller Series 2 Halo Edition", "Elite controller", "Halo Elite controller", "Amazing!!", "Not a good game", "I love it!", "Yoshi has never been better.", "Easy but fun", "A fun single player game", "It do like be so it be good", "Cute, crafty fun!", "Surprisingly fun", "You won\u2019t be disappointed if you\u2019re a Yoshi fan!", "Great game and fun", "So where is the GAME?", "This is the WORST SC game peroid!", "dont touch it? i think i will", "Another Dissapointment of 2010 Gaming", "Sorry I'm having a hard time speaking its so Awesome!!", "Do not touch this game with a 10-foot pole", "Tons of fun", "SC 2 - mediocre game.", "Way to destroy the best RTS series ever made!", "Nothing like the first two!", "Great picture quality", "Just short of 5", "Great Value For OLED", "Beautiful Thing", "Incredibly Beautiful Display", "To many problems out the box.", "Skinny", "Price to feature king!", "Great picture", "Great video!", "Beautiful", "Solid slaying ordanince", "GAME CHANGER.", "Very Good", "Weapon of choice for Halo Infinite", "Best controller ever", "Sickest looking Halo Controller Ever", "Solid improvement over the Series 1", "Halo Fanatic Gift", "Getting what you want", "Simple game for Beginning Gamers", "#1", "Fun!", "It's okay, but not the best Yoshi title.", "Yoshi\u2019s crafted world", "Yoshi's Crafted World Review", "Yoshis Crafted World", "Great", "One of the best games!", "A fun RTS", "Sooooo disapointing", "Really nice Controller", "The best Xbox Controller for a Halo fan!!!", "Halo infinite Elite Controller", "Looks pretty - never worked", "Fast shipping. Awesome controller", "Exactly what I was looking for", "Bumpers", "Halo Elite Controller", "High quality controller", "Great picture.  easy setup", "Worth the Money!!!", "Great picture!", "No Slouch", "Wonderful Christmas present from the kids", "Bad picture", "Amazing TV", "Great features, awesome picture, and easy set up.", "Pristine Image!", "Amazing controller", "Fun game!", "Green mean Machine.", "Yoshi is awesome", "A wonderful addition to the Yoshi game series", "Great game", "Love Yoshi!!", "A Modern Take on Yoshi's Story", "Good investment", "A definitely must pickup", "Fun, Beautiful, and Appropriately Challenging", "Love it.", "Great picture Quality", "Need better smart app!", "Great features & Amazing color and clarity", "Great so far!", "Stunning Picture", " the TV just doesnt see any input on HDMI 1", "Mr", "Color", "Fun!!", "Fun With Friends", "Super fun", "Very Hard to Play!", "Nice casual game", "Game of the year", "It ok", "HORRENDOUS!!!!", "horrible", "Great price", "Crystal clear 4k", "Lot of issues with new OLED TV", "Great OLED TV", "Perfect.", "Affordable OLED", "Excellent picture! Very crisp and defined", "Great tv", "Amazing picture", "Bad Trailer, Horrible Game", "Fun", "Couldn\u2019t hold interest", "Fun for all ages", "Yoshi is great", "Great for playing, nightmare for completing", "Yoshi Crafted World", "Super cute and relaxing", "Absolute gem", "Kids will love it!!", "Stunning picture", "Fantastic TV", "Great tv but needs patches as soon as possible", "Love the cost and love the quality overall", "Amazing how far TV has come in just a few years", "EXCELLANT OLED UHD TV", "Absolutely love this TV!", "So many features", "Troublesome TV with amazing potential", " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "Fun 2 player", "Nintendo impressed me again.", "Nintendo fun for everyone!", "Perfect for the little ones", "Family game", "Great graphics, 2 player gameplay awesome", "Awesome game", "Sooo cute~ <3", "Brings out the kid in a 33 year old.", "Unique and colorful world", "Great game for all ages", "Overall Gameplay", "Yoshi at his best!", "Great game for the family", "Another Great Nintendo Game", "Fun to relax with", "Won't turn on", "Love this thing", "The picture!", "Great picture great sound overall a great TV", "Beyond excellent", "Beautiful picture and sound.  Sluggish controls", "Great picture but OS is a bit slow", "Excellent picture quality!", "Enhances Game Play and Fits Perfectly in Hands", "Wirelesa Nintendo Switch Controller", "Eaysy to Use", "excellent value for the cost", "Such a great design", "Enhanced Wireless!!!", "Very good but not perfect.", "3 years ago", "Amazing Controller!", "Like DarkSouls but with Cars! :) Love it!!!!", "Skip it.", "Lots of Fun", "Let the dirt fly and the motor cry", "Wrc8", "Crazy good WRC game.\\m/", "WRC 8 FIA World Rally Championship is great game.", "Yoshi\u2019s crafted world game", "GET THIS GAME!", "Its yoshi!", "Another quality Switch release", "Weaponized Cuteness at it's Finest", "Cute stuff", "Love love love", "Awesome game for all", "Yoshi's Flabby World", "Crafty Business", "Great tv quality - could use a microphone remote", "Beautiful color!", "Fantastic picture", "Great but...", "What a picture!", "Terrible software", "Beautiful Picture", "Great Features!", "Great Features", "Great product!", "Love", "Great product!!", "So retro!", "Works great", "Love it!", "Great for younger kids", "Fun game, awesome graphics", "Cute and fun!", "Needs a better soundtrack.", "Just my thoughts", "Short and sweet", "Beautifully Developed!", "My Yoshi Experience", "OLED55H-1 Sucks!", "Has everything you want for an Oled Tv", "All the bells and whistles!", "Great picture! Great sound!", "Great Choice", "Awesome TV for the PS5 !", "Almost great for gaming", "Great controller!!", "Great bonus features and love graphics"], "data": [56, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 5, 1, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 6, 3, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "review_title", "count": 393, "min": " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "max": "look out gamerz, here comez awsome"}, {"values": {"label": ["My new OLED is a upgrade and it's great!  This is my third Vizio TV to replace my first one that went blank after 12 years of stellar service. (I'm even thinking of getting it repaired if possible for the great grand kids.)   I have always liked the picture quality and the price of Vizio's. You cant go wrong.", "Rating is really a 4.5 but that's unavailable. The unit looks great both in and off. It is short on physical features (Bluetooth and whatnot) but I use both external sound and media units. This is a great OLED to buy if you want a great TV at a reasonable price.", "I\u2019m quite pleased with the entire product as a whole. The quality of picture and sound really speaks for itself when in use.", "I\u2019ve only had my new Visio OLED65 mounted and operating for 3 days now and I\u2019m like a kid who after Christmas can\u2019t get enough of his favorite gift. The brightness and clarity of the picture is another huge by step forward in the evolution of  the television. I find myself seeking out programming that will showcase the quality of the picture regardless of the genre or intended audience. Some of the newer, computer generated cartoons, lack any redeemable qualities (imho) save for the incredible graphics, which are stunningly colorful, bright, and almost as vivid as real life. Nature documentaries and shows involving space, especially when shot in 4K are almost mesmerizing. When I bought my 65\u201d HD tv about 10 years ago I thought I was witnessing the best quality picture that could be produced by anything this side of a mirror. I was wrong, and happily so. If you\u2019re on the fence, like I was, about whether to replace a broken or outdated television with another of similar HD quality, that is to say \u201cstandard high definition\u201d...don\u2019t even waste your time. It\u2019s increasingly difficult to find as 4K is becoming ubiquitous, so that is pretty much a given. On the subject of spending your hard earned money on the more expensive OLED technology....if you have the means, or can somehow figure out how to acquire the means...my advice is definitely do so. Whether you\u2019re into movies, sports, gaming, or even nature/space shows, you will be amazed at the latest leap in picture quality and brightness. And VIZIO offers all the quality at a substantial savings. Putting the absolute best technology within the reach of those of us for whom the strength of the stock market makes absolutely no difference to our bottom line. ", "10 months ago", "The picture is very crisp and the blacks very dark.  Beautiful color.  The Vizio SmartCast app is fantastic.  The response from selections is much faster than the traditional supplied remote.  They update it from time to time with most recent voice search function", "Picture quality is amazing, however within a week from purchasing the tv will not turn on unless I unplug and plug it back in.", "Image is so clear I feel like I\u2019m on the set of the shows.", "I purchased this TV about 2 weeks ago and am blown away by the crisp, 4k picture.  I would definitely recommend this TV to someone considering an upgrade.", "I got this today 2/25 for my birthday present from my son as a surprise gift, without any prior guess or information at all. My previous one in my master bed room was quite old Samsung 50\u201d PD TV, which was ok but heavy and bulky compared to this. ", "Best price on an OLED tv. Has a great picture and is easy to navigate the menus and connect via apple or Android devices. I always bought LG OLED tvs because I liked their quality and features. But so far, Vizio is just as good and a better price.", "Just like the elite controller v2 but halo edition one of the best controllers out there if you do not have one elite\u2019s controller\u2019s are must have.", "First foray with the elite controller. Nothing but impressed. The weight in the hand, the grip, the buttons, and changeable joysticks are all amazing. Even better is the Masterchief finish. If you can't find the halo edition I'd recommend trying the regular elite series 2, I'll never use a different Xbox controller again.", "Really bought this for the blue mode leds, just to find out they are still white leds with a blue coating on them and not that bright. All in all still an elite controller.", "At first I was asking myself why spend the crazy money on a controller!  I too am now a believer.  From the case to cable to finally making its way to the actual controller - it is special in every way.  There is so much detail to this controller.  Lets not forget it is a limited edition and carries a beautiful Halo design.", "The build of this controller is perfect and the details are amazing.", "Cortana herself lives within this controller. I am one with Halo", "This controller has always been great but this one is a work of art.", "Even lighter than my previously owned Elite Series 2, thought it would be heavier. The buttons, the triggers, the analogue sticks, everything operates better than the original Elite Series 2 at launch. ", "14 days ago", "These controllers I think are worth the money. One of my favorite things is that I no longer need double A batteries. It comes with a charging port. And how I can customize the buttons is rad", "Love the controller use it everytime I play. The remote plays excellent. Be carefull of the back buttons though do to being removable I feel like they will wear out faster than most.", "Yoshi game was awesome and still playing it thank u sooo much GameStop :))", "Great game. You will enjoy it. Good price worth it I Always have enjoyed the super Mario series since Mario brothers in the arcade", "My son loves to play this game, he's been playing it every day since he got it... Great Job!!!", "The game is great for a family and younger children. My 4 year old wnjoys the game.", "It would be better if Poochy was in all of the levels.", "It's cute and fun, but feels a little lacking in fulfilling its potential.", "Good game including game play and music also music", "The quirky style that shined in Yoshi\u2019s Wooly World has gotten a serious upgrade in this new gem from Nintendo.  Like all it\u2019s first-party titles, this game is nearly flawless.", "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "2 years ago", "She loves it good game. It easy to play and addicting.", "Yoshi\u2018s crafted world is the best Nintendo game I ever played since Yoshi\u2018s woolly world! Lots of hard challenges to complete and it\u2019s so much fun! I love this game!", "I recently bought this TV and was blown as easy with the picture quality. I never want not to go back to LED.", "I went from an old LCD TV to this Ola TV and the picture quality is amazing this TV has a deep as blocks of ever seen the sound quality is fantastic I could not be happier!", "Bought this yesterday and I am really excited. I saw how clear the picture was and had to have it. Won out over my husband who wanted the Sony.", "5", "I've had this TV for 3 weeks now, so far I really like the picture. it's hooked up to a vizio 2.1 sound bar. it is confusing when I 1st turn the TV on,  I get the Vizio sign on the screen, a few moments later the picture comes on with the TV speakers, then the tv shuts off, a few seconds pass and he comes back on with the sidebar act of and everything is OK then don't understand why it goes off comes on goes off and comes back on", "Great TV at at a reasonable price.  Happy so far with purchase", "I love that I found an OLED that did not break the bank. The picture quality is amazing and VCast is great! The only downside is the sound and it\u2019s only a small complaint on the quality.", "Easy setup and there you go...I love VIZIO TV. I will continue to buy VIZIO TV's !", "Very good image quality, beautiful design on a affordable price", "Oled is king I\u2019ll never go back to traditional led TVs again it\u2019s just not even in the same ballpark you can\u2019t beat the picture quality of and oled", "\"I'm a true fan of vizio. My old 36\"\" Vizio lasted me a very long time and that's the reason why I decided to stick with vizio. Visuals are amazing on this OLED. There are some bugs but they can be repaired by software update patches released by vizio. I also bought the Vizio Atmos soundbar and its absolutely freegin awesome. Only issue I've experienced is the sound bar doesnt activate on its own and I usually have to cycle through the settings to reactivate through HDMI-ARC. Im.sure theres a fix for it. Overall I'm happy with it and still feel vizio makes great products.\"", "It\u2019s amazing! Works perfect, just as an elite controller should. The best part is the paint job! 10/10 recommend.", "This controller provides excellent fine motor control with adjustable thumbstick tension, and removable back peddles.  It works great especially for a first person shooting game like Halo infinite.  It\u2019s on the pricey side, but you know this is a premium product for serious gamers.", "Best Xbox controller I've owned. Worth every penny. Owned for a month with no issues. Only con is I wish there were replacement joysticks, I love these but i know I'm going to wear them out, and I won't have Master Cheif green ones to replace :/", "Great controller. Purchase was definitely worth it. The only problem was the finalizing my payment and the late shipment through GameStop.", "This controller is incredibly responsive. It\u2019s fully customizable with lots of additional features & settings that can be adjusted to your preferences. I was skeptical at first due to the price but after a fair amount of use I wouldn\u2019t game with anything else", "Love the controller no probs with it the first one was lost but customer service made sure I got another one and in a timely manner", "SO BEAUTIFUL! Great addition to my Halo collection. The detail is just amazing. Performs like any other elite series 2 but that color scheme is just phenomenal.", "great controller, beautiful design, ultimate customization", "Doesn\u2019t even feel like an elite controller. But it does feel like an advance one with the grips and joystick converters. Not really worth the money but the design is amazing and there is no battery pack in the back, it\u2019s all built in, like a phone. Over all I love it! I\u2019m such a Halo fan it was a no brainer not to get.", "It feels great, it enhances gameplay thanks to the paddles and customizability, and it looks absolutely beautiful.", "Tons of fun to play with my kids! They love the look and ease of play!", "Awsome title. Loads of fun! My kids and I love it!", "This game is amazing! Almost had given up on the Switch, but this game saved that from happening! It's a great game for people of all ages!", "Fun and cute, but some of the mechanics don't work that well (Tank Yoshi and the mutil-layer egg aiming). Still fun, but needs improvement in the mentioned areas. See Caddicarus' analysis.", "It's awesome! The graphics make everything look like cardboard!", "Fun title that is a good installment to the series. A little bit easy to beat, but has plenty of extras to keep entertained while going for that 100%", "This game was fir my youngest, he picked it out from good reviews online.", "It can be 1 or 2 players. It\u2019s pretty simple mechanics, but there are so many creative was to use them. And there is a lot of replay ability. Me and wife have a blast.", "It\u2019s a game that\u2019s for kids and for adults to enjoy", "Purchased this TV a couple of weeks ago as my existing TV was 10+ years old and needed an upgrade.  Had a salesman take the time to show me the differences between an OLED and other projection systems.  Couldn't be happier with the picture that I am not experiencing.", "My wife loves it. She even lets me play the co-op mode with her sometimes. I\u2019m not that into gaming, but this game is really fun!", "This OLED is Excellent, Very Easy to Operate. I imagine that Someone may Complain but I am certain that it will be a Tribal thing.", "Great tv. I like the vizio apps.the sound is nothing special but if you are buying an OLED you probably have another option. The best part is the deep true black. The colors are very vibrant. I am very satisfied.", "Has some bugs and I know Vizio will work on them a little faster. Especially with the new Xbox series x and ps5. Other than that can\u2019t beat the price for an Oled TV. Great picture. Now Vizio please get the VRR @ 4K120 to work and give us the option to change all picture setting in game mode. No settings should be blanked out.", "I bought this for my birthday and it has been amazing!", "I love the tv and everything about it. I am a big fan of Vizio TVs, except for the sound, you will need a soundbar.", "All my Vizio TVs have held up under use. Hoping the new OLEDs will get firmware updates and continue to make this TV great now and in the future", "Very good OLED tv for the price but it does have some issues with powering on.  If you leave it idle for too long it will \u201cgo to sleep\u201d and the only way to cut it back on is to power cycle.  Other than that I love it.", "Beautiful screen! Awesome price but full of bugs. On my set had to constantly unplug my tv from the  power supply to get it to come on. Worked well with my xbox series x just a few glitches here and there. No 4k 120 for the ps5 so I had to use the 4k 60 hdmi slot. I feel this tv is still in beta and needs alot of firmware updates to address system performance issues.", "I bought this tv because I wanted to try out OLED for the first time. I\u2019m glad I bought it. The colors and contrast are on point. The price compared to the competition in the same category can\u2019t be beat. Super happy.", "Everything I wanted from a controller, in an amazing custom paint job!", "The design is very remarkable great addition to the collection of Halo Series X Console Bundle it a must have.", "I love the pro controller and this one is absolutely beautiful. Must buy", "Works good its perfect for people who game hard-core because it don't ware out as fast and last a long time cheaply priced perfect for your gaming set up!", "I love the classic colors of master Chief! Looks great with my Halo Theme Xbox!", "AXYB buttons do no register unless they are 100% fully pressed in. Annoying there is no pressure sensitivity!", "This no longer available item is excellent and you should buy one, but you can\u2019t.", "Great controller love the way it feels and all the little halo touches it has.", "So far I love the feel and look of this controller. Need to wait and see how the grips hold up to give it a 5 star rating.", "I was lucky to cop a limited edition elite controller  waiting for halo campaign to used", "This game has amazing graphics and amazing levels.", "It fun for your family and if you have kids they will enjoy hours of fun", "I loved the Yoshi yarn game on the 3DS & I love the New Yoshi Yarn game on the switch.", "Great game love every minute of it fun and entertaining", "Excellent condition. Awesome game. My fiance is enjoying it a lot.", "One of the best games I've played in a while absolutely beautiful \u2764\ufe0f", "10/10, it is a very creative, thinking out of the box game, it might be a bit easy, but it is fun to and I will 100% it even if it's the last thing I do.", "OMG, this is the ultimate of fun, silly, fantasy escapism. Sit back, relax, and give yourself an hour to let Yoshi explore the hand-made world of tape, cardboard, and pipe cleaners", "Takes me back to the 90's. Thank you Nintendo! and thank you GameStop for always having great prices and what I want in stock!", "really cute game and its pretty easy for the non gamer . its great to have a son who can help you too", "I purchased several television and soundbars from Vizio from the M series and the SB38", "I purchased this OLED over a week ago along with the Vizio Elevate Soundbar for my new Xbox Series X. I truly appreciate the picture quality experience that this TV can offer. The performance of this TV and Soundbar surely surpass its price point. I strongly recommend this TV for anyone that wants the best performance for the money. I will dare to say that based on my research, this TV will absolutely rival other brands at much more expensive price points.", "I had purchased this knowing it was going to not be perfect but omg. I had to go in and change my ps4 setting for video to even use the menu settings at all. I also cannot use netflix, it won't open from smartcast but when I press the button on the remote it freezes the whole tv on a black screen. This is a serious deal breaking bug.", "I purchased this a week ago and so far so good it's to early to make a define decision.", "I wanted to buy this for long but I am a bit disappointed. I guess my expectations were high but not really sky high.", "11 months ago", "The Best: The TV offers great contrast and clarity. ", "4", "This screen is a beauty. Very sharp, good colors and decent brightness. I hook it up to my PC for gaming and occasionally have some quirks. In the middle of a game it says no signal detected and shuts off. Sometimes it isn't detected by the PC. ", "I bought this 2 weeks ago and has a great picture. It is good for gaming on the xbox series one. The only issue is the VRR does not work and has a distorted picture when I enable it.", "I love the pristine picture, with saturated accurate colors. However, I absolutely hate not being able to turn off the fluctuating luminance. The only thing that spoils a great review is the brightness that changes with how dark the screen is to increase contrast. The TV does not need it, and if I knew who the engineer was that omitted the off selection for this annoyance, I would offer him a Vizio necklace.", "The only issue I have is. I own both ps5 and xbox series x and if I use hdmi ports 2 and 3 4k 120hz I have to unplug the tv every time I turn the tv on I worked around this by using ports 1 and 4 so I'm stuck at 4k 60hz on both consoles unless I want to constantly unplug the tv for it to work but over all I love the oled tv and you have to get a polarized power cable because vizio gives you a non polarized power cable that does not fit the TV power port", "Great item and excellent condition. Works awesome!", "Very cool design, feels great and comfortable in my hands.", "This Halo Infinite Elite Series 2 controller is so awesome with the Halo theme on it, it's beautiful.  Being able to customize the controller to my liking ranging from the controller sticks, d-pad, and how short you want your trigger throw is freaking amazing compared to a normal controller.  Only con is that it's expensive, but once you open up the whole package and unboxing experience it is well worth the price.", "Packaging was 5 stars alone but the feel and customizability of the control and the design made it over the top and it came with the full game download", "Love this controller glad GameStop pro was lookin out and it came in a decent time", "The Microsoft Elite 2 Pro Controller is perfect for the console gamer of any level. The fact that it\u2019s the Halo Edition makes it that much better! I love the controller and I\u2019m glad they came out with this limited edition.", "This is a piece of art, amazing!", "Very well design and heavy feeling, it truly makes you feel like you have a better-quality controller compared to the regular Xbox Series X controller. Would recommend to any gamer specially Halo fan!", "This was my first elite controller and I love it, it\u2019s definitely a game changer and looks beautiful.", "The controller is great but I am experiencing stick drift just two days after receiving it.", "Awesome, love this character! Love the whole game!!!", "Excellent for a relaxing time. Can be challenging if you want to %100 every level.", "Fun and exciting game if you like Yoshi and his classic games", "The game is adorable, the music isn't ear-splitting, and the levels themselves are fun. However, it ends up becoming a chore if you intend to 100% the game with multiple scavenger hunts per stage with a flip-side that is dedicated to finding three dogs under a certain amount of time for the full reward. Ultimately, it's cute and full of heart, but is not recommended to just sit down and 100% in one sitting. It's quick, easy fun enjoyable in small bursts either alone or with a friend.", "I\u2019m not a big gamer. I was so excited when this came out I had to get it. I guess I just expected more", "Nostalgically entertaining and unique 3D adventure that will make it hard for you to put the controller down", "Bought this game for my 12 yr old's birthday.  He really likes to play in multiplayer mode with me.  Definitely fun bonding time!  So far it has been fairly easy to finish each section, without being too easy (working together helps).  I do hope it gets a little harder as we get a little further in.", "Good to see Yoshi on the switch, but it is a slight step down from Yoshi\u2018s woolly world", "Truly amazing. The art style is unique and the gameplay is equally fun as it is relaxing and rewarding.", "I got this game so me and my gf can play together. Its fun and quirky but gets challenging", "Some folks didn't like this game....thought it didn't measure up to the original or Forged Alliance. Boy, are they wrong! I thought this game was great! Maybe the tech tree is a tiny bit smaller, but the game more than makes up for it with new, cool units, great graphics and effects, and awesome explosions. In fairness, I was a little perturbed that that more than one engineer cannot build on the same structure, as in the previous games, but then again, the structures go up pretty quick. Happy hunting!", "Great game. Nothing bad about it. It has many great features and story mode is cool. I think it is awesome.", "This game, in my opinion, is WAAY better than C&C and is very good in gameplay and everything else. Some people say that he storyline is horrible, but that doesn't really effect me since I just play on the skirmish and online. The story line isn't really a big concern. I just play it when I'm bored.", "The story is extremely slow and confusing until you get later into it. It forces you to play as a certain faction first, then another and end with the Cybrans. You should definitely try out the originals, they are ten times better then this. Overall, the gameplay is about the same as the last game, the graphics are much better and the sound and music is again amazing. However, the story development needs more work.", "alright here comes the best game eva, anyway herz a shout out to all of the peeps that think this game is the best eva u rock 4 ur good reviews. anyway the graphics might not be as good as the first but the graphics to me doesn't matter at all since the campaign is awsome and a good storyline. along with the campaign the units and multiplayer maps and experimentals and ect. but i honestly i think the unit count is very low there should be a higher unit count because people have things to do units to make and probably alot of them too and places 4 them to go like in others bases and stuff.", "This game is the absolute best RTS game you can play. And I have played alot of RTS games, so I know what I'm talking about. This game has very good graphics, and they will be even more enjoyable the more you paly the game, considering that you notice things like shadows cast by the terrain, and details such as distortion coming out of a walkers exhaust pipes. This game also has an amazing command system. There are more controls and options you can use to make your army do anything imaginable. This game also includes extra experimental weapons, which they balanced much better than on the first one, and actually have a general purpose rather than to walk into the enemies base and kill. And most people have heard that the nukes on the second ones are pitiful compared to the first. The difference is that on the first one, it was a bright light and smoke covering a large area of the map. On this one, it might be only a little bit smaller, but it is insanely detailed, in the fact that an extremely large portion of the map gets lit up in red, and things are actually moving with the explosion as they would in real life. When it touches water it makes steam and jets it into the air, so nukes on this one are much more enjoyable to watch, regardless of what you've heard. All in all, 10 stars.", "I don't know why people don't like this game, because if you like real-time strategy or RTS, this is the game to get.                                                                                                                                                                                                      I usually only play online and play skirmishes to get better or if no one is as good as me because I can destroy anyone.                                                                                                                                                                                                  I am a veteran at Call of Duty Modern Warfare 1 and 2 so don't try and kill me or fight me.", "What Gas Powered Games have done here is amazing, this game is packed with more units, new features, less glitches, and a lot more excitment. what i was really taken with is that there is no +mass or -mass anymore, its all based on real numbers. the tech tree feature is amazing, allowing you to upgrade old units to make them more lethal later in the game. a lot of the good things are still their like the cybran ships being able to crawl onto land. however, the story is disappointing, character extremely lack any sort of personality and emotions. also, for high end computers, this game has surprising lower graphics, units like the UEF titan look a little bit more like legos, even though some units have good deatil, others are flat out bad, although you have to appreciate that they are trying to let computers with lower hardware able to run this game. online play and skirmish mode are fun.", "\"Supreme Commander 2 is different than it's \"\"predecessors\"\"", "2 player fun for dad and 10 year old. Replay value is high with extra modes after completion.", "My son been waiting on this game for a long time. But he got it now and he love it.", "I'm in love with everything from this game and I appreciate the replay value as well. You can go back to a level and find new tasks/goals", "Brings back so many memories, I absolutely love this game.", "It actually looks crafty and there is so much to explore and you can", "The cutesy graphics and creative levels definitely added to the child-like wonder and fun of the game. Even the creepier levels were cute, but still gave you goosebumps at the same time.", "I like the simple creativity, nothing too over the top just very creative. It\u2019s sort of too easy so it\u2019s something to pass time with. Overall a good purchase", "Fun imaginative and challenging at times great deal of replay ability", "Fantastic game! The level designs are inventive and memorable.  I haven't had this much fun with a game since the days of the NES/Genesis!", "This game is so much fun.  You can easily run though a level or you can take your time and find all the hidden things.  I love to play it and so does my daughter!", "I\u2019ve been very hesitant to upgrade to an OLED because I couldn\u2019t justify the cost. But when Vizio jumped into the OLED market, I was very excited. Other brands\u2019 \u201cbudget OLEDs\u201d cut corners, whereas Vizio\u2019s track record with reasonably priced premium TVs is outstanding.", "0", "This is my 3rd Vizio TV. 1st OLED. They are all 5 star products!", "Easy to set up, to program, and assemble. Smart TV is very convenient.", "I bought this TV right before Thanksgiving and have enjoyed it ever since. I wanted a Smart TV and this did not disappoint. I bought a smaller one for my bedroom.", "As the title states, the picture is good, as expected. The only downside so far is that there are SERIOUS handshaking issues between this tv and my PS5 console. Sometimes, Ive got a black screen, and must reboot the tv to get the PS5 display to come up. Also, the tv menu will lock you out of several key picture adjustments during PS5 use. With some adjustments to the firmware to fix these issues, this tv would be nearly perfect.", "I haven\u2019t had an issue with this television like others. From what I have read, most issues are about gaming compatibility. 4.7 / 10", "Severe Issues with settings. None remain when set, audio passthrough is a nightmare. Motion settings are impossible to turn off for all HDR formats. Doesn't handle 24p content well from anything other than blu-ray source.", "This is my fourth Vizio tv and they just keep getting better. Bread brand and quality product.", "I am very pleased with the quality and picture on this TV.  I was disappointed that the streaming software runs at 720p since this is a 4K TV.  I added a 4K Firestick to resolve the issue.  Otherwise I am very happy with the design and function of this TV.", "I bought it about three weeks ago, and sometimes I am impressed with the crisp colors produced. There are times not so much, I  was watching something on Netflix the other day, and all the color except red looked good. The red color was like pigmentated almost as if it were a hole where ever there was red. I also noticed that when streaming sports live action it blurs a lot. I  am not sure that isn't the feed, but it is annoying.", "Extremely great controller! It's my first pro controller and I loved it. The design and color make it complete. Had to get used to the paddles on the back, but afterwards it made doing certain things in games easier!", "Beautiful controller! A must have for any Halo fan!", "Right joystick jumps and feels stuck sometimes. Paint in that same joystick that is gunmetal is gone and when the stick is rotated you can see the silver beneath. Wish I could have returned, but with how these are gone everywhere I don\u2019t know how I would have gotten another one\u2026", "Great design and awesome feel. This controller would be perfect if not for the horrible quality control issue Microsoft has on their controllers. Mine had stock drift, a messed up button, and a bent paddle, so I\u2019m waiting on a replacement. Fingers crossed.", "A controller worthy of a spartan you'll never play the same ever again with interchangeable thumbsticks, d-pad and mappable paddles you'll be unstoppable in any engagement.", "Happy to add this to the Halo collection! She\u2019s a beauty.", "Solid feeling controller. Love the design and halo theme of it", "Multiple parts that can be swapped. Comes with an in game code that gives a weapon charm", "Best controller ever. Toss a Halo Infinite skin on it makes it that much better. Recommend to anyone.", "Thumbstick issues straight out of box. Had to send back to Microsoft to exchange for working one. After that it\u2019s wonderful. More of a quality control issue on Microsoft\u2019s end than gamestops fault, however when I reached out to GameStop about the purchase I was told they didn\u2019t have any to replace it with. Just a general pain in the butt just for me to get a working product that I paid a lot of money for.", "Typical, classic, Nintendo fun! Challenging? Not very. Enjoyable from beginning to end? Absolutely!", "Super fun, a lot of challenges and game time. Since I bought it I haven\u2019t put it down.", "Not a hard game but a good one to relax and play after work.", "If you like yoshi, you can\u2019t go wrong here. Game is a masterpiece and provides decent challenges for even the seasoned gamer.", "More whimsical Yoshi fun that innovates on the last game without changing what we know and love.  A bit easy but still fun & heartwarming.", "Fun game, but too short.  Beat the game after only three days of casual play.", "Yoshi\u2019s Crafted World is fun and a bit challenging.  My 10-year-old loves it and I can play it with him.  Yoshi!", "Really adorable game with an imaginative landscape. This game is cute and colorful and fun for all ages. Collectibles could be a little more satisfying however, it doesn\u2019t ruin the game. Developers did a great job but the game should be priced about $20 lower.", "A fun platformer with charming visuals, interesting puzzles, and a good level of difficulty!", "An extremely fun game not only for my little sister but for me too! Easy enough for her to enjoy but it has some challenges that allows me to have fun as well.", "Oled makes a big difference in the sharpness of the picture and it can be watched from an angle.  Very happy with my new TV", "\"I bought the 55\"\" for the bedroom and at this price you cant find a better Oled. Im was a Sony guy but now I dont have to pay the premium to be lol. Finally a company that is challenging the big dogs and winning!!!!", "I realize Visio is new to OLED and this is their first go at them .., that being said, this tv has potential and I knew saving money over LG would come with some growing pains. I\u2019ve experienced several anomalies that required a power cycle to correct. Some of those issues were sound no video on all inputs (including OTA & web channels), syncing with true 120fps 4K sources. ", "Some features are missing and broken but when it works its great!", "I\u2019ve had this tv for almost 2 months and completely happy with the performance and picture", "I\u2019m happy that I made this choice. I sincerely hope this product lasts more than 15 - 20 years", "Great picture lack of updates. Need support for 1440p and Vrr 4K 120. Also android fully baked in", "This TV is my first oled.  The picture is breathtaking but the television itself has some problems.  Sometimes the television will not connect to the smart cast. Sometimes the TV will not even power on without having to pull the power plug and plugging it back in. But overall I am happy with this television. We have been promised all these things to be fixed and a future firmware update. Fingers crossed.", "I was a bit nervous buying this set being that Vizo just started making OLED's. I can tell you know after I have it in my house. IT IS BEAUTIFUL! I can not believe the qualitly of the picture. I have this set  in my main room and we have a gaming 4k TV on the same wall. Side by side this display makes the other 4k look cheap (btw... the other set is a high end display made for gaming).", "so glad I decided to spend more to get the OLED. Picture is the brst.", "This is my second series 2 elite controller. The first worked perfectly but this one looked so awesome that I had to have it! The only issue is that the R thumbstick is a little sticky when pushing to the L. No other direction, only the left. It is like there is a bit of resistance I have to push through before it releases and goes to the left. My first elite series 2 controller doesnt have this issue. It hampers FPS games a little, but not terribly. Otherwise a great controller and terrific looking product if your a Halo fan. I'm just a little bummed about the aiming thumbstick being slightly off.", "The Elite series 2 was already the best Xbox controller, now has an amazing look.", "controller is awesome. but my Y button doesnt work all the time. its very frustrating.", "Work as great as the original Series 2 Elite Controller but that Halo detail. It was great to find a code inside that gives you a weapon charm that look exactly like the controller.", "Beautiful controller. If at all possible, why not buy the limited edition controller for a small amount more. Im a huge halo fan, so getting an extra controller in this caliber of beauty was an easy choice for me. Elite controllers are an amazing controller for sure, which is part of why there is too many reasons to get this controller, really.", "Like many Elite 2 controllers, this was totally unusable out of the box.  Stick drift was suuuuuuuuuuuuuuuuuuuuuper bad.", "Love this controller. The attention to detail is out of this world.", "Great elite controller for a supa halo fan-very stylish too", "Very cool and feels really nice and comfortable in hands", "Its absolutely beautiful! Great controller", "I loved Yoshi\u2019s Wooly World, but this game came across as very childish and no real goal that you are trying to reach.", "There's so much replay value with this game.", "Awesome game.  Little less challenging but that doesn't take away from the enjoyment of the game.  Highly recommend if your into Yoshi island style games.", "Great game but kind of easy compared to Yoshi\u2019s island", "Single player is tons of fun. Nothing sticks out as being bad other than being a little too easy for mature gamers. Co-Op is a jumbled mess of accidentally getting  stuck on people and losing your eggs unpredictably.", "Pretty fun typical Yoshi game that offers more variety than usual, still not Yoshi\u2019s Island levels but pretty good nonetheless. Worth my money.", "Once you get past the cuteness factor of the game, you'll find a very fun gameplay experience. Controls seem very responsive, and the 2 player mode is loads of fun and laughs. Great game to introduce a young child to gaming. A great addition to the Yoshi themed game library.", "I haven't been a huge fan of the series since it is a easier version A Mario title but this game has been surprisingly fun", "It\u2019s so cute. I love Yoshi.  This version is built using craft materials and can get quite challenging!  I love how detailed the graphics are! Fun, fun, fun!", "Great game and fun but unlocking different types of Yoshi\u2019s with yarn in the last game was a lot better than the costumes concept.", "Got my package, installed it and got a STEAM POWERED program that starts itself every time I start my computer [no option to turn that off] and emediately takes me to thier online site with only options to buy games. The was NO GAME on the disk. No information saying that it is an Online game only [no information saying it is even an online game on thier site.] I tried to check out the Forums, registering for thier forum kept takeing me to other sites. These other sites required me to reister. This repedative nonsence went on for 4 diff registration that finnaly returned me to the STEAM forums. Unfortunately I still wasn't allowed to access thier forums.  No tech support, no contact information ,no game.. No reason to even consider getting this product.", "I own both Supreme Commander and Forged Alliance and find both games superb. When i head there was a Supreme Commander 2 coming out of course I ran right out and got it. I can honestly say this is one of the worst war games period. My reasons include the fact you must unlock a LOT of stuff to even consider playing the quick battles. There's only 6 maps, yes i said 6. The fact you cant even choose what side you want to be on until you unlock the ability, and the WORST part is you cant even see a simple overview of the maps when you are selecting them your basically better off throwing darts at your comp screen to decide what your gonna do rather than actually getting to decide anything at all about the battle ahead. The point I'm making here is don't Waste your money... This game isn't even worth getting if it cost 2.50.", "played it today and i've never played a better RTS. im lovin it every step of the way and although its a little bit more 'cartoonish' than the last one, its still definatly a fun epic story lined game. it beats AoE, UaW, and matches EtW, and C&C. i really love playing it and my slightly old system can handle it perfectly. i was a little disappointed, i though the requirements would be a little higher and i definatly see a decrease in the quality. overall, 8 out of 10. AWESOME game. right now, im a little concerned with the new unit the cybranasourus rex (yeh, i probably spelled that wrong) it seemed a little like an out of place character to be put in the game. its still a pretty cool unit and theres so much more upgrade. the most important is the eco that they had. the last one sucked and was full of glitches. this one is MUCH more stable, its brings the good parts of halo wars and not the sucky parts (because seriously, halo wars sucked) buy NOW", "The frist two games of this year that I was waiting for were Supreme Commander 2 and C&C4. Both are god awful. Supreme Commander 2 is missing the best elements and nuances of it's two predecessors. I actually think that TA was the best of them all. Sad that games just get worse and worse as they come out with new titles. What happened to the unit types??!! There is not nearly as many unit types as SC or TA. Plus, what happened to the recycling of plants and rocks... the environmental resources you could live off until you got your resource production up and running? And why are there so few multiplayer maps?  I have an idea. Take the Total Annihilation engine, give it some new graphics,new sound, a new story line and new unit types... and don't change anything else...", "Don't know what the other guys here are talking about, the game is great, ya sure they took out some of the things the sup com pros loved, but the thing is, more people want to play RTS so you can't expect a newbie to grasp every concept of the game, unlike the pros. If they left some of the things from the old sup com in, it would be so unbalanced it wouldn't been as fun to play for the newbies.  Alright so lets get down to buisness, the storyline is great and the graphics blow sup com 1's out of the water, while supporting older computers that don't have as good of processors or graphics card. Win, Win situation. At least thats what I think, and that is why you're here isn't it ??   They added a new research screen to simplify it and added a whole bunch of new features like building add ons and new experimentals. FYI to all aion illuminate fans, they don't have naval anymore. I know, ouch right? Well I think we'll live.  On to sound. They did a really good job with the music this time, its about 10 times better than sup com 1 and the sound effects really match up and exceed what you think they will sound like, when lets say someone gets blown up by a nuke or someones commander goes into meltdown.  For all those hard core gamers out there, the 10 hour battles have gone away, I know, sad right? Well they replaced with a shorter even fiercer model of online game play, that really seems to fit, and when I mean shorter, I mean average of two hours. You can still build those big armies just faster. One thing I wanna finish up with is the Interface. They kept a lot of the interface from sup com 1 and FA, but also added the research screen which I talked about earlier. It works like this: You need research points to buy any sort of research upgrades and those research points automatically come along, but you can build research facilities that increase the speed at which you get them. You can spend research points on things like, personal shields for your units, or new buildings, sight upgrades, radar upgrades, and new schematics for buildings and units. Big FYI for all those 360 gamers lookin at this. The 360 version of this game is just as good if not better than the PC version.", "\"Make no mistake - this IS Supreme Commander Lite. It almost feels like a very weak demo of SupCom 1, but worse. Even with the new research trees, you'll still end up with no where near the amount of units to choose from that you had with SupCom 1 and its tiers. Yeah, sometimes the tiers were annoying to work through and it took far too long in most instances to get anywhere close to maximizing your faction's potential in a single match in the first one - but this \"\"sequel\"\" has completely gutted it altogether. You'll likely end up mashing your mouse button or hotkey to churn out more of the exact same units.. over... and over... and over again because there's barely anything to choose from for unit diversity. The game requires the Steam client and an internet connection just to play. While it's true that most people these days have an internet connection", "If you like multiplayer or lan-parties add this on to the list because you get a lot of fun in that little box! There are many nay-sayers but i really don't know what the heck they are talking about. Graphics are great, simple neat menu, intense tug-of-war games because its hard to dominate players that are sneaky!... It runs great on both my desktops and even my laptop! So if you have a decent machine you can easily run this game because its not demanding at all. Very fun to play against you friends and the online is pretty intense. Single player story is good and easy to get into because you dont need to have played the originals to understand whats going on or anything. As of right now you can save $** if you buy it which makes it even more worth the money. 10/10! pick one up maybe ill play against ya!", "There were so high hopes for this game, as SC 1 and FA had left me hungry for more games like TA, yet unfortunately the wait would lead to disappointment. For those who enjoyed the similarities between TA and SC1 will be the biggest disappointment here. The economy of the previously mention games is utterly gone. No worrying about balancing energy usage and mass income with building and firing weapons, its all been removed. Its now a simple straight up, build up army, build base defenses, go conqueror enemy. Also gone are the tech levels, and weaker starting units, and teching up. Instead its replaced by research points that gradually come in much like all the other resources.  Without that element nothing really stood out in the game. Without the challenging economy, the campaign portion of the game becomes simple, build defenses, build army, repair defenses occasionally, attack enemy. Musically nothing really stood out, there may of been a couple times when I stopped to notice it, but again nothing inspiring. Storyline it also seems kinda lacking, it comes off like a Final Fantasy storyline mashed into brief conversations between 18 missions. There just simply is not enough there to make a great story, which once again left me greatly disappointed. Graphically the game was nice, and the small scale compared to SC1, meant I could actually stay somewhat zoomed in, to actually see the units, and not just commanding by click on the small icons. The movies were decent, just way to few of em to tell a good story. The game controls fairly well, being rather simple game now, its easy to pick up and get right into. Those with SC1 knowledge will have no trouble picking it up, as the mechanics are still basically identical to the first. Those used to Starcraft or C&C type games might take a bit longer but overall its not a hard game to get into or to start playing. The game probably has some strengths in multiplayer, as the unit balance does seem good, but I have not done any of that yet. Overall SC2 is not a bad game, everything seems to work, the game loaded smoothly, the game had no noticle lag, or slowdowns, but there is just nothing in it that simply makes it stand out. The game itself was fun to play through, and I did enjoy the limited story, and I may still by the sequel when it comes out (of course the ending had a cliff hanger for a sequel... what game doesn't do that no a days) yet this probably won't be a game I will touch all to often again now that I have beaten it. My suggestion is wait for the price to drop on this one if you simply want to see the continued storyline from the first, as the game offers very little of anything else to draw players away from other games.", "\"First there was Total Annihilation; superb, deep, endless strategy, constantly evolving, hundreds of different units, quick to learn hard to master. Then Supreme Commander and Forged alliance; made Total Annihilation (TA) larger with a better AI, beautiful graphics and much of the same elements that made TA great.  Then Supreme Commander 2; What the hell happened here? You took almost everything that made the first two stand alone and dominate and tossed it out the window. My only guess is you tried to dumb this game down to the likes of a C&C or a Craft game so it could appeal to the zerg boys.... probably thanks to Square's involvement. Really Chris Taylor how much did it cost to convince you to kill your baby?! Graphics went from sci-fi futuristic to cartoonish. Threw out the unique resource allocation and made it a click and buy system with a \"\"Research\"\" resource which is another Craft game move that sucks. Took out almost 60% of the different units in the game an dumbed base creation and defense down to arrow towers CRAFT again!. All the maps appear to be zerg/rush maps. Threw out the tier system... Sheesh I can go on and on but I won't. Bottom line: If you loved what made Total Annihilation and Supreme Commander unique and fun", "\"Okay, so yeah, it's pretty much like the first two in the basics: the three factions, the basic units (Some of the basic units are straight out of SupCom 1 and Forged Alliance), and one big war. On almost everything else it's completely revamped. Upgrading has been replaced with \"\"Researching\"\"", "I bought this to play my ps5 and not only thengames look great but movies too", "Waiting for the firmware update, then I can update to 5 stars", "\"Great TV with all up to date technology. From Dolby Vision and Atmos, HDR10 + etc... Perfect for gaming HDMI 2.1. I trust in Vizio products I bought a 60\"\" in 2012 and still running (2021).\"", "I purchased the 65 inch OLED 1 week ago!  The TV is beautiful!  Deep blacks & colors are great right out of the box!  You will have to do nothing to get this TV to look great.  I wish they had offered a 75 inch OLED but I am sure this will come!  Picture processing is good as well!  I recommend this TV to my friends!", "I picked this OLED Vizio for the intensely beautiful picture and I have not been disappointed. It's incredible for gaming on my PlayStation, and watching vivid shows.", "Problems turning OLED tv on. So I returned it and got another one.  The screen had a green tint to it so I returned it and got my money back. Plus the VRR didn\u2019t work.", "I love how skinny it is and how much cooler it runs, the picture is awesome!! Gorgeous unit !", "Wonderful image, oodles of features and an asking price that\u2019s within  reach of the average consumer, what more Can you ask for.", "I\u2019ve always liked Visio. My first 50\u201d had one backlight diode burn out after 7yrs heavy use. Replaced with 50\u201d nano Visio. I was happy with the upgrade. Figured I could get a 55\u201d within the space constraint I had. Got this one as open box. And WOW! The picture POPS of vibrancy and consistent brightness.", "I got this TV 3 weeks ago and so far I love it/ easy to operate/ easy to hook up other devices to it //Great TV", "Beautiful controller. I only changed the D-Pad and still calibrating but it is perfect.", "Glorious equipment for slaying all who oppose Spartan 117!", "I got this as a gift for my boyfriends birthday. I don\u2019t play Xbox and I\u2019ve never played halo but I was completely BLOWN AWAY by this controller. It feels amazing I think the way it was designed was incredible and totally worth the money. My bf LOVED it and made me consider becoming an Xbox gamer.", "This controller is amazing and beautiful I\u2019m glad to have it", "Love the elite series 2 controller and with a halo paintjob.... it's almost perfect. I kinda wish this would have included the updated series x/s share button but that's a minor complaint. With the latest xbox update, it's now able to quickly connect to 2 paired devices which is probably the best feature of the updated series x/s controllers so I'm happy with that. If you love Halo and were thinking about getting an elite controller, this is the one you want.", "Its similar to the regular elite it just feels lighter quality feels slightly better and it looks so hecking cool in person so many details that the pictures dont do it justice", "Performs like you expect the Elite Series 2 to do so, but with the added benefit of looking wicked. By far the coolest controller I\u2019ve owned. Hopefully it will keep nice and not develop rub marks from fingers.", "I had the series one which still works great, but decided to upgrade for the better paddles and internal battery. I am very pleased with this product not only because its Halo but it does feel like a substantial improvement over the previous generation. I'm still trash though...", "Great for Halo fanatic.  It weighs a lot more than your standard controller.  Bought as Christmas present for the Halo fanatic.  Splurged on the 2 year warranty just in case too.", "It\u2019s a great looking controller but without the console to match, it will be lonely. Very hard to pick up the items you want unless you want to pay ridiculous prices from scalpers who seem to get these items with ease. But still a great looking controller.", "Pretty simple game, great for younger games, way too many things to have to collect.", "Good game. kinda on the kid side of game, my kids like it.", "Game is great for parents to play with their kids.", "Very fun! As someone playing through sekiro, this was a nice pallet cleanser.", "I had an open mind when deciding to play this game and after clearing the first world, it just wasn't for me. Compared to Woolly World, this game was lacking in several departments; the music was repetitive, the skill level was far too low even for just the first world and the game doesn't reward you nearly as much as Woolly World did in terms of amiibo. I'd recommend this for die-hard Yoshi fans or kids age 5 through 9.", "The kids (6 and 3) love it. And I love that they can play together. My 3 year old doesn\u2019t know what she\u2019s doing but my 6 year old helps her. Yoshi\u2019s crafted world game is also fun for parents :)", "Simply amazing. My son and I are loving this game. It's so creative and well thought out.", "So much fun! For all ages! We have from age 4 to 34 who love to play.", "Bought this game for my son, but i enjoy playing it too.", "My family and I really enjoy using the Nintendo Switch and I must say this is by far one of the best games ever! Super cute yet challenging at times. There\u2019s a gum ball where you can insert coins and collect costumes. There\u2019s also a flip side to the game where you interact and catch little puppies. Just when you think you\u2019ve completely the level there\u2019s other mini challenges like a scavenger hunt. You should purchase this game you won\u2019t regret it!", "So far I've enjoyed playing SC2. there are a handful of differences between it and its predecessors both good and bad, The battles aren't as big as the ones from Supreme commander, but they are still brilliant, the new research is fun, as well as expanding buildings with tactical add on pieces even if they are minor one's, and the fact you can replace your ACU without permanently losing it now, and the new upgrades for the ACU, and units. Most of the cons I've found so far are, requiring steam, the smaller battlefields, and other minor problems which may be fixed eventually in updates. It lacks the feeling of the original game but its still fun to play I'd recommend to everyone that they try the demo on steam first before deciding. Overall I rate this 7 out of 10.", "First off, you need to have Steam installed on your computer. Thanks for the heads-up on this Square. You buy a hard copy of the game but then have to log in to Steam to download it from their servers.....really? Some people are showing a 9 hour wait time to be able to play. Again, really? Second, they destroyed the economy and the basic gameplay of the original game and its expansion. None of it even matters any more. Its just a zerg fest. Most people think its due to the console being added to this title and thereby attempting to expand their market. They broke what made the first game such a huge hit. Gone are the days of epic battles for my 3rd point. Maps are now 5kmx5km. WAY too small. Fourth, you can't save/load in skirmish play. Soooo, if you have to leave in the middle of a longer lasting game (not real sure how this will happen being that everything is so small-but want to give them the benefit of the doubt for future content added updates), too bad. Can't save. Fifth, the voice acting and story line for the campaign is just plain stupid. I guess I could go on but I'm sure I've expressed my opinion enough for folks to understand where I'm coming from. This is just insulting to people who have been really looking forward to this title. There was a reason the first game was as much of a success as it was. Well, Square Enix effectively threw that out the window and scrapped it all. Good job.", "I haven\u2019t used it yet but the unboxing was amazing. This is a really nice looking controller. It really feels right.", "This controller is GAWGEOUS!!!!! I love the cosmetic design of it, the rubberized grips, the back paddles and the accessories! It comes with it's own wireless charger, interchangeable analog thumb sticks, and D-pad. The design is reflective of Master Chiefs armor. I LOVE IT!!!!", "Amazing controller well worth the money solid feel and looks fantastic i want to buy a second one already", "It came broken\u2026. Stick drift on the right thumb stick right out of the box.", "Quality feel and looks awesome. Also arrived early on the 15th was shipped next day air.", "Exactly what I was looking for in a controller and the Halo fan in me loves the Halo theme on the controller", "Its good just sucks how the bumpers dont like to work sometimes its vrandnew", "Beautiful controller (just need the console to go with it). GameStop packaged it well and sent it super fast. It actually arrived prior to release date. Now I just need the console!", "Great controller that feels better than the standard ones. Paddles are useful in gameplay and the color scheme is great. You also recieve a code for the controller as an accessort in Halo Infinite.", "High quality packaging, nice dock and very long usb-c cord. Even the packaging was superb. Everything was secure to make sure nothing would be damaged in shipping. It is very true to the pictures and works great!", "I had no problems after mounting the TV and the set up was a breeze", "Had this TV for a month now and it's worth every penny. Don't listen to all the negative you've been hearing about Vizio. They have done a really good job with all their new high end televisions.", "I just bought this item and am so excited to watch sports and movies on it!", "Compared to the LG CX and Sony A8H the picture quality is way better than Sony's OLED.  THOSE Reviews online are biased and not accurate IMO.  Not a fan of smartcast yet over android TV. TV Has some firmware glitches.  Sound from TV speakers is OK not as nice as the Sony's; however this is a one Heck of An OLED with no black Crush....", "We were looking at one but am the type of people who wi only purchase an item like this when the one we have goes bad. Now the old one will go into the basement.", "The best \u201cAmerican product 100% costumer satisfacci\u00f3n  guaranteed", "I bought this tv and set it up at home but it was quite obvious to me that the feed I was watching on this tv in the store was optimized for the tv for better picture. At home however, it was grainy and looked like motion flip art like the one you draw and flip through. The tv was so hot I thought I bought a hp laptop.", "This was my wife\u2019s and my anniversary gift to each other. We regularly watch movies, and we are amazed at how the cinematographer\u2019s vision is articulated with this tv.", "I\u2019ve had this TV for about a month of movies and gaming, couldn\u2019t be happier.", "The image on the tv is fantastic and the sleek slim design gives it that pop aesthetic that the \u201cworld\u201d within the TVs borders is almost life-like to the touch.", "Great controller! Only wish I had the halo Xbox to go with it", "This is the elite series 2 but they did an excellent job with the halo theme. The best controller with now an awesome new paint job.", "Fun game, really nice visuals. It's an easier platform so more people can enjoy it, but seasoned gamers will like the collectables available, which give replay value to the game and a bit more challenge.", "One of must fun Nintendo games I've played in a long time.", "Nintendo does it again with sweet crisp graphics and my kids love yoshi", "If you enjoyed Wooly World, you'll love Crafted world. This game is a great addition to the Yoshi series and adds fun mechanics unique to this game. It does have a 2 player mode and would be fun to play with a less experienced game. Overall presentation is great, control is simple, and platforming is fun. Nintendo game prices hardly comes down, so if price is a factor, pre-owned with PowerUp Rewards discount really helps mitigate the cost, and maybe invest those points. Either way, top notch Yoshi game and a must play for Yoshi fans.", "Great fun, reminds me of Yoshi's World from when I was a kid", "Love the extras each level has. Not a fan of yoshi smash level but in general love the game!!", "This is a proper modern evolution of the Yoshi formula.  Giving you access to the fore- and background when throwing eggs adds an extra dimension of exploration and the collectibles are definitely worth getting.  The flower requirement to progress to new areas is rarely difficult to fulfill, but it emphasizes the collection aspect in a game that gives you a lot of tools to do so and is chock-full of stuff to see.  If you've ever loved playing a platformer, you need to play this game.", "A few weeks before the game came out I downloaded the demo just to see if my six year old son was going to play it and he and when the game came out I got it for his bday and he have not put it down", "Great game! Side scrolling puzzle solver better than I anticipated and can\u2019t put it down. There is a gum ball machine for different costumes ADDICTING haha", "Yoshi\u2019s Crafted World is an amazing game! It is beautifully designed and appropriately challenging. The ability to play two players is also great as my wife and I like to game together. I would definitely recommend it to anyone who owns a switch, especially those who want to play some couch co-op.", "Bought this for a Christmas Gift for my husband and myself. ", "1 year ago", "Got this in time to have it up on the wall Christmas day. The family loved it!", "The app sometimes glitches green and I need to power cycle yhr TV to work right. Also, I can't seem to download other apps that seems to be essential. Example Crunchyroll.", "Bought the TV right before Christmas - just amazing clarity and color", "Excellent picture quality and very easy to set up!", "\"About 10 years ago I purchased my first Vizio 54\"\" just months after its release.  It held up well until one day it just didnt turn on.  Lights on", " when clearly the Amplifier is sending signal.  Looking forward to a future firmware to make this TV absolutely perfect!\"", "Very nice picture, nice sound, but, the OLED effect can cause severe headaches in certain people.  There should be some form of medical warning and available solutions.", "I purchased this 3 weeks ago and I love the picture quality. After contacting the boae surround  system its like you your in the movies! Great job vizio.", "I just bought this TV, did not plan on spending this much. This TV is worth every penny. The color is so vivid. Model is sleek and so much thinner than LED.", "I bought this one month ago and I'm glad I did this model.", "My son loves this game. Like Super Smash Bros with Kung Fu Panda characters.", "I got the game through PS Plus, and I was skeptical at first. However, after playing it with my friends for a little bit, it was some of the most fun I'd had playing a game ever. It's no Citizen Kane, but it does its job as a fun, simple fighting game well.", "We Bridges this for Christmas for my nephew everyone had a good time playing", "I bought this game for my grandson and he absolutely no loves this game...", "I bought this game for my daughter because she\u2019s very competitive. We thought it was family friendly but it\u2019s very hard to learn different moves. I had a hard time playing it also and I\u2019m good at playing games.  It\u2019s not the easiest game to play and in my opinion its not for kids either.", "My 5 ear old loves this game.  Controls are simple and each fight location has their own challenges.", "This game deserves 10 stars but I was only allowed to give 5. It is definitely better than smash. I think it should win game of the year.", "I sew the trailer and it was ok not the best and characters were alright. I heard that there was a lag in the game  but over all i give it 2 stars", "another super smash clone but horrible one at that", "i wouldn't buy this game if it was free. i dislike the game's audio and lasting appeal. so bad my children couldn't even bear it", "I have a LG OLED TV and I wish I waited for this TV. I'm very pleased. I hope the update will fix the power issues. I have to turn on multiple time before the picture would stay on.", "I\u2019ve had my VIZIO 55\u201d OLED for about 3 weeks. Clear picture from any place in the room. Color is so much better than the TV I replaced which was a VIZIO LED 55\u201d TV.", "Other than the Smartcast being a bit buggy, the picture is spot on!", "i have been facing multiple issues from the time i got this TV.", "Have had it for two weeks, perfect picture and great design. Loving it so far, great price for all the features and crystal clear picture. Just wish it had a HBO Max app preloaded in the main menu, but very easy to cast from my smart phone or iPad to the TV", "Vizio has stepped up their game, going head to head with the LG and Samsung on this one.", "Finally, someone has made an OLED TV that I could afford!", "Well worth the price. I was sold on the fact that you can see definition anytime there is a night scene and it\u2019s not just blurry.", "The colors are incredibly vivid, even with a standard HD signal. I also love that it has screen mirroring for my iPhone along with a bunch of other viewing options.", "Just had this installed yesterday the BestBuy's Geek Squad. Also installed a new sound bar. The picture is amazing and we are looking forward to seeing many of our favorite shows in a whole new light. The remote will take getting used to, but we'll learn. I wish there was an app for PBS installed. We'll have to see it by AirPlay.", "When the game trailer is a rip off of super smash bros, you know its going to flop. the chrachter selection is poor and the gameplay is choppy. I need my 20$ back...", "I really enjoy playing this game. It is fun and enjoyable for all ages.", "The game is cute but hasn\u2019t held my 6-year-old son\u2019s attention. He has beat Donkey Kong Country, Super Mario Odyssey, and SupernMario Deluxe. He only played a couple of levels of Yoshi and hasn\u2019t went back to it, over a week later.", "This game is similar to Yoshi's Woolly World.  The levels are made of things like cardboard, ribbon, straws, and construction paper.  Each level can be played in a normal mode or a reverse mode.  There are cute costumes you can unlock using coins that you collect throughout the levels.  It's a perfect game for parents to play with their kids.", "Got this for my 2 sons they love & have a lot of fun playing it together", "The game is wonderful to play through. Fun levels, extras, cute outfits, and even an easy mode for younger players. Just dont try to get everything, or you wont have a good time.", "This game is super fun and adorable. ", "This seems more like a kids game but everyone will enjoy. It\u2019s very entertaining but not very stressful. It looks so cheerful and colorful. And who doesn\u2019t like Yoshi with wings.", "Fun to play while letting those who want a challenge to be able to spend time to complete the game", "While it's easy enough for children to play, that doesn't take away from how fun it is for the whole family. Levels have a decent amount of replayability, and it's decently challenging in a casual way.  Would recommend to anyone.", "Fun game for kids and adults. More relaxed then Mario and very kid friendly!!", "Bought this on Black Friday after reviewing 4-5 other LED TV's.  I'm so glad that I did.  The OLED experience is simply stunning.  My previous TV was a Panasonic plasma which I held onto as long as I could because I didn't want to give up those deep blacks and contrast.  This TV has such great contrast - for example when you watch a dark scene with isolated bright spots (like lamps, office windows, etc) it will blow you away how bright those spots are against the deep black surroundings.  The panel is made by LG and you can get the same performance for a lot less money.", "I bought this a couple of weeks ago.  Easy to install and set up.  Fantastic picture!  We love the smart cast and look forward to our elderly relatives coming over.  We can FaceTime our loved ones and airplay it on the TV and everyone will be able to see.", "I love the tv but am on the fence on returning it or not. Fix everything people are complaining about. Also 1440p needs to be 120hz. Theres no reason why it shouldn't be. Get it together please", "I have a long time history of purchasing Vizio Television and each time of purchase I have upgraded having said that Vizio has shifted in the best way. Awesomeness!!", "\"I had a Vizio 65\"\" LED TV that I thought was still pretty good but I was intrigued by OLED. The set I bought looked great in the store and even better at home. And that's on everything", "Great picture quality and very easy to set up. Would highly recommend.", "This is the best tv I've ever owned! The picture quality is amazing! I don't have enough words to express how happy I am with this TV.", "Bought the oled Visio over the Samsung q series. Very happy except sometimes the input switches from one to another happen 2 times", "I set this TV up less than a month ago and still going through all the apps and everything it can do.", "I really want to love this TV. The picture quality is amazing. The smart cast interface is solid, and it's all packeged under an beatable price. ", " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "3", "Really fun 2 player game that seems well balanced. It looks great and feels rewarding to go collect stuff. It's really nice that the game seems to avoid many the co-op deaths that I'm used to in new super mario bros u deluxe and yoshis woolly world (we jump or egg each other and fall to our deaths).", "Its a deep 2D game with an interesting spin on yoshi island. Nintendo always amazes me with the great graphics with thier titles. Gameplay is smooth and overall fun is better with my wife.", "Simple, super fun platformer that\u2019s perfect for kids or couples to play!", "Great game for small children and entertaining for adults as well", "Great games for kids and parents to play together.", "Amazing game. Graphics are too cool. They're made out of cardboard, bottles, etc and the two player is fantastic. Highly recommend.", "I bought this game for my 8 yr old autistic daughter and she absolutely loves this game. It is her first video game bought soley for her and she just took right to it with no issues at all. For other games she has played it has been difficult for her to grasp what goes on on the screen and how that associates with what she is doing on the controller such as constantly running into walls on mario kart because it was difficult to for her to figure out how to steer but no such issues with this game and she absolutely loves it.", "It's sooo cute!! The levels are adorable but still challenging enough if you want to get 100%. My new go-to game for destressing~ <3", "This game is super fun and brings out the kid in me. Each level has multiple challenges, making the game seem like neverending fun. The voices are adorable and the choices are plentiful. Great game, highly recommended.", "It\u2019s a really relaxed game that you can pick up and play anytime. The graphics are amazing and unique. Overall, I\u2019d definitely recommend this game for anyone who is a Yoshi fan.", "Me and my 5 year old really enjoy this game, if you enjoy the Mario games this is one you can add to that list.", "An incredibly fun sequel to Yoshi's Woolly World.  Amazing graphics!", "The game is fun, and the graphics look great, some levels are hard for a children\u2019s game, but over the game is great.", "This game is a crafted masterpiece! The level of detail is gorgeous. Gameplay is a throwback to the classics while maintaining a modern feel. The two player mode is unique and available right at the start. The game is great for all ages and incredible for a good time or a family game night. I highly recommend this game!", "Entertaining game for all ages.  The levels are relatively easy to pass but become challenging if you are the type of gamer who goes for 100% completion.  The colorful graphics also help add to the fun nature of the game.", "Great game for me and my kids ages 6, 4 and 1. They can actually play it on their own and love it.", "Cute game. Just as fun if not more than Wooly World was.", "\"Whimsical, light-hearted platformer. Densely packed stages filled with collectibles, secrets, and uniquely beautiful art designs.  Tons of content adds replay value to keep you playing long after finishing the six to eight hour \"\"main\"\" adventure. Definitely a worthwhile purchase", "If you like the gameplay of Yoshi\u2019s Island, the art style of Yoshi\u2019s Woolly World, then Yoshi\u2019s Crafted World is the gamefor you... and the family!", "Sort of short, aimed more towards kids...but if you love Yoshi and want something to sit back before bed and relax and play, this is your game.  So charming, so chill, so Yoshi.", "Just bought tv a while back moved to the new house and now it won't turn on", "This TV replaced a smaller, older VIZIO I bought back in 2011/12. Was not looking for an OLED, but went with it since the price was so good. I could not be happier. The picture is GREAT. Everything we watch has looked amazing on it.", "The picture is exceptionally light and bright where it needs to be but the infinite dark reminds you it is an Oled, this tv IS IN a class of it's own!", "About my TV last month I love it love everything about it", "I am pleased with the quality of this unit. Best tv I have ever owned. Oled is off the charts, the colors pop and deep rich blacks. I'm creeping up on retirement and I didn't want to buy a quality tv on a fixed budget.", "The picture and the Vizio surround surround speakers are excellent.  Response to the remote for adjusting sound level is sluggish and remote has few features compared to other systems.", "For the picture this has been great for the price. The reason I give it 3 stars though is because I am very critical of when the operating system is not \u201csnappy\u201d.  For a modern TV, losing of apps and maneuvering through the UI should be quick. While this is better than my old Samsung TV OS, I still expected it to be quicker.   I also hate h to r banner style at the top. My first choice should be to pick an App rather than some curated selection when so turn on the TV. I haven\u2019t been able to find a feature to turn it off.", "It's better quality than I imagined! Amazing TV!", "So far I love it! The new tech for video games is awesome!", "This is my first OLED tv and I am loving it. I\u2019ve been using Vizio TVs for years and have never disappointed me. This one is super fast and there\u2019s no lag when selecting through the apps. The lag is something I hated on my previous Vizio TVs bu that\u2019s gone now. Now just bring HBO Max! One thing I don\u2019t like and hope that it\u2019s fixed in a future software update is that currently, 4K/120hz HDMI ports don\u2019t work on the PS5. Fix that and this TV will be perfect.", "It's comfortable and works great. My only frustration is that it doesn't seem to allow button remapping. I can set it up on the switch, and the buttons are changed on the switch paddles, but this controller doesn't allow the changes. Not sure if this is a switch issue or the controller. Otherwise it is great", "[This review was collected as part of a promotion.] This controller was bought for the intent to enhance the Switch Experience, and to add some more skill to certain games. The case did arrive slightly damaged, the inside plastic was torn. but the product remained in perfect condition. It is light, but doesn't mean it isn't quality. It brought a different set of skills to games that required more then a small handheld joystick. A little throwback to the classic design of a controller.", "[This review was collected as part of a promotion.] Received to try out on our gaming system and definitely enjoy it way better then the cord controller. Having wireless is more convient as you can move better and no worries about pulling a cord out of the system. The Over all grip is very comfortable and nice fitting. Not only is it convient, comfortable but also comes designed with Mario which is many favorites of alot of people. Alot of my family complement us on our new controller for the design and now wants one or something similar.", "[This review was collected as part of a promotion.] This controller was so eay to use, and dits just right in my hand. I love the colors it comes in and connects very easily.", "[This review was collected as part of a promotion.] I like having a controller to hold onto with the switch and this one gets the job done.  Set up was easy.  The only downside is no rumble, but the added buttons make up for it.  The retro mario theme is an added bonus and loved by husband and son alike.", "[This review was collected as part of a promotion.] The design on this remote is so cool. The batteries are the only drawback but that can be remedied by just buying rechargeable batteries, which I would highly recommend.", "[This review was collected as part of a promotion.] This is a great controller for the Nintendo switch. It has a great Mario design that my kids loved! It was easy to set up and it being wireless was even better. It seems to be very durable as well. And good thing because my kids are super rough on things aspect controllers. I will be purchasing a second one, so both my kids have them to play with.", "[This review was collected as part of a promotion.] This is a review for the Nintendo Switch wireless game controller. ", "[This review was collected as part of a promotion.] The pros: *feels almost identical to the official Nintendo pro controller.  ", "[This review was collected as part of a promotion.] I have been using this controller for my Nintendo Switch for a couple of weeks now and am very happy with the overall performance of it! It is very comfortable to hold and the buttons are set up perfectly.  It being a Bluetooth Wireless Controller is a huge plus! The Super Mario Bros. design is my favorite though! It's very attractive and I've received so many compliments on it!", "It\u2019s not entry level friendly but can be very rewarding.. I struggled at first, boy it was challenging but with lots of practice and doing tutorials/training I managed to not come in 12th or 10th place.. I now place at about 6th or 4th.. Boy does not wining  a race hurt but it\u2019s the grind and constant improvement.. Could lower the difficult and turn assist on but that would take the fun out of the challenge..I then went to YouTube to see pro gamers struggling or flipping cars as well so that made me feel a little better too..", "If your looking for a real rally experience buy Dirt. The handling on this game is cartoonish. You cut and you get penalties. Total garbage.", "Very detailed graphics, challenging driving, and numerous course selections. A lot of fun for multiplayer. The only semi con is that it is difficult to select changes to your driving car... but overall a must have.", "Simply gorgous to look at and play.  It says pure simulator on the box for a reason.  If you go in expecting anything less you will get plastasized.", "Good game, need to spend some more time playing it", "This is a good one. One of the best driving games I've played. The career mode is a bit of a pain but still pretty cool.", "The WRC 8 FIA World Rally Championship is a great game to play. The cars are awesome and the scenery is breathtaking. There's so much to do! I really have lots of fun playing it. Much improvement over the WRC 7 World Rally Championship. They did a really nice job in putting this game together.", "Great game. Easy to pick up and play, at home or on the go.", "ONE OF THE ABSOLUTE BEST IN THE YOSHI FRANCHISE, WELL WORTH THE WAIT.", "Cant go wrong with Yoshi. Cute, detailed and fun. You get what you see with this game. I love it.", "Super fun game that can be as easy or as challenging as you want it to be, depending on if your thing is to 100% a game or not. Another quality release on the Switch, highly recommended.", "Not a heck of a lot wrong with this game. I like to say this is the epitome of Weaponized Cuteness. The designers did a fantastic job with level design. It feels like they actually built every level in the game with cardboard and construction paper in reality and then put it into the game, and they stick with that through the entire game. The controls are tight and the yoshis are as adorable as ever.", "Very cute! And the right amount of challenges. Great game for all ages", "We love Yoshi!", "Excellent game especially for kids and new gamers looking to learn, but still complicated and fun enough for an experienced vet.", "Really boring and lackluster. Fun platforming but not much else. Good for kids, not for adults.", "Cute game I can play with the family. I love how interactive it is. You can knock over things in the foreground and background.", "This tv has been fantastic and especially since we recently purchased a 5.1 Dolby surround system. Mandalorian looks, and sounds amazing now after getting this tv. ", "Super impressed with the clarity and color of the picture.", "Great picture and easy to use enjoy it very much!!", "Bought for picture quality and I am not disappointed. It is fabulous. I am actually surprised at how wonderful the display is in my home. Very satisfied and would buy again. If it goes on sale anytime soon I will buy another one for another room in my home.", "I am really happy with my purchase. Visio knocked it out of the park with this one.", "It's a great tv. This is my first oled and it works great with my xbox series x. My only issue is that it keeps putting itself back on warm color temp very often.", "Bought this TV a couple of weeks ago to replace a five year old Visio.  Our previous TV was top of the line back then.(240 refresh rate, etc.)  This new TV is fantastic!  What a picture!  Well worth it.", "I bought the tv about a month ago and have never had as many problems with a tv in my life. Vizio has a reputable name so of course I wanted to give the oled a try. Day one when I got the tv home it wouldn\u2019t power up. So after plugging the tv up and unplugging it a few times I got it to power up. The oled does have a beautiful picture but now every morning when I want to turn on the tv it won\u2019t power up again. I have to unplug the tv for 30 minutes EVERY morning for it to come on now. While I\u2019m watching tv the sound just goes away at times and I have to reboot the tv sometimes 3 times before the sound comes back on. At times the hdmi won\u2019t recognize it has the cable or game system connected so I have to turn it off and on again when that happens. This is just unacceptable from vizio. I hear there will be firmware updates but how long will that take?  I don\u2019t know what to do should I return the tv and try another vizio oled or just stay clear of vizio because this is the beat quality they can produce right now", "I bought this TV several weeks ago and I couldn't be happier. The difference between OLED and anything else is astonishing. Highly recommended!", "I\u2019m having multiple issues with it. Tried to set it up with my Xbox X series too play in 4K resolution but the screen goes black. When I did change some settings to get the TV too play my Xbox in 4K it wouldn\u2019t turn back on after I had turned it off from playing. I had to physically unplug and plug it back into the wall too got it too come back on.", "[This review was collected as part of a promotion.] This controller works great with our Nintendo Switch! I love the fact that it is wireless and vibrates while we play. It is also easy to use and handle! We are a family of 4 so I will be buying 3 more of these soon! Highly recommend for anyone who has a Nintendo Switch!", "[This review was collected as part of a promotion.] I love the fact that it is wireless and I don't have to deal with wires being all tangled up. It's easy to hold, perfect size and weight for my hands. Very pleased with it.", "[This review was collected as part of a promotion.] The Enhanced Wireless Controller for Nintendo Switch is easy to set up and use.  I love the Mario on it.", "[This review was collected as part of a promotion.] Power A Enchanted Wireless Controller for Nintendo Switch works great! Love this item, it is easy to hold, and very easy to use and connect to console. Seems like it is very sturdy as well.", "[This review was collected as part of a promotion.] This item came in no time after ordering it which was a plus. It was easy to set up with the game system my boys were super excited and love it.. Now I\u2019m forced to buy another one so both of them can play together.", "[This review was collected as part of a promotion.] I just got the Enhanced Wireless Controller for Nintendo Switch and I must say I was surprised with the quality of it . It definitely makes playing so much easier especially when it comes to certain games.", "[This review was collected as part of a promotion.] This is a wonderful remote it\u2019s make playing the Nintendo switch so much easier. I love the remote it fits perfect in my hand as well my child\u2019s hand! This is so easy to use and much more better for the switch! I highly recommend this remote for anybody that has a Nintendo switch!", "[This review was collected as part of a promotion.] This works perfectly and has alot of extra controls and features.", "[This review was collected as part of a promotion.] I love this remote. It is easy to connect and use. The remote itself is well made and comfortable to hold. The fact that it is wireless is great and makes gaming more enjoyable. It does take batteries, but battery life is long. It is a perfect remote for any gamer.", "[This review was collected as part of a promotion.] I received this controller to test out and review. I suprised my 12 year old with it and he just loved it! He loves that it's wireless. He said it was so cool that he wanted to get his friend one for Christmas! So this is definitely kid approved. Thank you for this opportunity you made one kid very happy!", "This game is perfect for my first grader.  She can play alone, or we can add a Yoshi for a level and I can play with her.", "Awesome game.  Amateur to intermediate skill level with a few hard levels but once you get to the end you\u2019ll play like a pro.", "This game is so cute, easy and mellow. This game can be played with up to two players. My husband and I took turns playing with our 5yr old, he loved it!", "Fun and easy. Though the sound track sounds very uninspired. If only Crafted worlds soundtrack could take note from Yoshi Story.", "It\u2019s a real fun and easy game to play. I\u2019m not sure if there\u2019s a way to do increase difficulty since it only comes with two modes and I play classic. Regardless, the battles are fun, and if you want a game where you don\u2019t have to think way to hard this is it. I love the graphics and I love the creativity that goes into it.", "A charming easy to play title that's perfect for young  kids.", "Overall great game. Interesting and has different elements than other Yoshi games to date. My son absolutely loves it.", "They should know that it\u2019s fun & cute & for all ages.", "Beautifully developed with great music. It appears as only for kids but don\u2019t be fooled. This game has enough puzzles and the replay value is definatley there!", "At first glance you would think this is a kid game and has no entertainment value for adults. I will tell you first hand, that is not the case with this game. The visuals are stunning and there is plenty of action packed platforming for everyone.", "Where to start... do not buy this tv for a next gen console. You have to manually change the input setting from HDMI AUTO to HDMI 2.1 for the Xbox to recognize the 4K @ 120hz. If that wasn\u2019t annoying enough the specs said ALLM, HDR, and VRR. When you go to the TV info screen says no to HDR and VRR. Then proceeded to give the TV another chance by using the apps it offers. What a joke! The screen went green and kept flashing the picture. I tried five to six apps. All the same outcome. Finally on day three of owning it... it quit showing the picture for the Xbox. To confirm it wasn\u2019t the Xbox Series X I switched back to my Samsung Q70R TV which has a better picture and does everything, but 4K @ 120hz abs is still to this day running fine. Needless to say I shouldn\u2019t have bought a VIZIO in the first place like my gut told me. I wasted my gas and time on this TV.", "I bought this almost two weeks ago and next to my brothers LG Oled it holds its own for the price. As a pure Oled screen this is the way to go but It\u2019s not perfect which is to be expected for the price as a budget Oled. It\u2019s native apps that don\u2019t support the tv\u2019s high resolution will have noticeable pixels and it\u2019s already showing signs of Oled burn in if you keep the same image on for more than one minute, you should allow rest mode after 15 sec of inactivity, I\u2019m serious! Just be gentle with the tv and don\u2019t forget to turn it off and you will get an amazing tv.", "No other brand Tv can compete with the quality and price of this TV!", "For those having trouble gaming in 120hz, you have to change the settings to 2.1 on your hdmi 2. I almost didn't buy because the reviews on gaming saying it wouldn't do 120hz at 4k but it absolutely will and the Xbox verified that. Just change your settings to 2.1. The best picture quality on any TV I've ever owned. Truly amazing!", "I've been looking at the new OLED model tvs for a while and I'm so glad I finally purchased my very own OLED 4K tv.  The picture is incredible even if what you're watching isn't in High Def.  High def channels and movies look so good but the 4K programming is insanely sharp. It looks as if you're actually there", "This was a great purchase. Perfect blacks and beautiful color reproduction. I am impressed with the build quality and the attention to detailed such as the the wiring placement. Also the apps that\u2019s included are amazing. It also has Apple TV!! The only thing missing is a voice search on the remote. Other than that great purchase and extremely happy.", "So far so good.  Enjoying the difference that OLED offers.", "Just picked this TV up a couple weeks ago did a lot of research thanks to YouTube and saw that this was the TV to get for gaming A++", "120hrz, VRR, VRR+HDR, black screen but at 60htz it looks great! Vizio please fix.", "Excellent TV! Beautiful.picture. Easy to use, with enough extras .", "[This review was collected as part of a promotion.] This is a great addition to our Nintendo Switch. Easy to set up and easy to use. I highly recommend!!", "[This review was collected as part of a promotion.] I got this for my son and grandson who play the switch together. My son is an old school Nintendo fan so when I saw this with the old graphics I got it immediately. "], "data": [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 47, 2, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "review_description", "count": 435, "min": " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "max": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this."}, {"values": {"label": ["yes: I recommend this product", "2", "No: I don\u2019t recommend this product", "4", "5", "4.2727", "4.6556", " i say it should just have a completely different name slapped onto it. Then i would of not had any quarrels with it", "11 months ago", "1 year ago", " it's a rather unfortunate decision not only because you're excluding gamers but also because of potential happenstance scenarios. Steam goes down? Sorry", " you will hate and loath this game as I did. However if you owned any Craft game or C&C and thought the above mention games were too complex", " which really adds more hassle to the game", " but no one is home", "1", " not just 4K streams and DVD's.\"", " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", " especially if you plan to play the often chaotic but always entertaining simultaneous two player co-op mode.\"", "0", "4.875"], "data": [372, 1, 92, 3, 4, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "recommended_review", "count": 20, "min": " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", "max": "yes: I recommend this product"}, {"values": {"label": ["yes: I recommend this product", "4.2727", "Verified Purchaser", "4.6993", "4.6556", "363", "2390", " because i wouldn't be expecting something so different than what i knew. Now i own both of the \"\"previous\"\" games and they are both excellent", "5", "3", " you're out of luck. A few years down the road and something else happens(such as one of the companies going out of the business or whatnot) and you can't go back to play it for old times sake? Again", " strategic", " but also adds a new era of customization because instead of just going up levels 1", " type of.  So in the spirit of the shopping season i jumped at a another brand new Vizio product", " and to get 4K", "3 years ago", "32"], "data": [244, 6, 222, 1, 2, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "verifed_purchaser", "count": 17, "min": " and to get 4K", "max": "yes: I recommend this product"}, {"values": {"label": ["0", "Verified Purchaser", "363", "1", "306", "2390", "228881042", "2", "3", "228691813", "4", "127332001", "228459804", "228397838", "28", "5", "6", " and so when i found out about this \"\"sequel\"\" i ran out and bought it with out much looking into it", "127185338", "4.2727", "227806298", "227721000", "127127185", " out of luck. Move to an area with limited connectivity? Same thing. I wish developers would stop going with this route", " and epic for you", " 2", " this OLED 55\"\".  ", "7", "126525025", " I have to manually switch the input from Auto to 1.4", "226910861", "226824012", "122140626", "126297513", "126279514", "226623767"], "data": [318, 77, 6, 47, 1, 2, 1, 11, 5, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "helpful_count", "count": 36, "min": " 2", "max": "Verified Purchaser"}, {"values": {"label": ["0", "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "229167959", "228991912", "1", "194520876", "127408484", "2a736f40-6b79-5c49-b539-5eae6b06fe94", "2", "7", "4", "8", "6", "5", "865fb1f7-9fbc-5ec8-89fb-868f67495019", "18", "41", "3", "0a5b2e83-abcb-5537-a109-15a4b8c4f86d", "228476168", "c0fef563-2deb-5c01-acc6-9db6c6fa8368", "15bc27e2-a5ad-5a18-b47e-5f4cd100907c", "11", " i knew it had a different maker but i figured how bad could they have possibly made it... i mean it's Square Enix! Now don't get me wrong it is a good game", "4a650967-e873-5e06-a3d0-81e9530e5a78", "363", "c35409b8-9e25-5996-88e8-e3f1aa9e8065", "3adeb77d-d51a-53aa-9aa2-3908b384030d", "16", "9", " as it's very short-sighted. The graphics are significantly worse than the first one", " then give Supreme Commander 2 a try!  You should feel right at home in this slop show.\"", " 3", "227425437", "227210950", "15", "33722e22-472c-5b56-a877-599999791231", " then back to 2.1. This is very frustrating. ", "02481162-152d-5b33-ba5a-5136b0686613", "8a3401f7-4865-5764-904a-6f8cb7b42edd", "4.875", "0b338d34-27a3-56a0-9787-1d3b437f1ba9", "1962b25e-379f-515a-a961-26950bbd081d", "126289526", "95bf4328-d8c9-52b1-9074-0e246e0f9fe2", "226749057", "6e496bf1-e93c-58ac-8889-a3a9b9b69afa"], "data": [343, 77, 1, 1, 16, 1, 1, 1, 7, 2, 4, 2, 5, 3, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "not_helpful_count", "count": 47, "min": " 3", "max": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a"}, {"values": {"label": ["10 months ago", "fa660933-1130-5c66-9010-24d641f70bc7", "16e925e3-1e59-537e-aa67-1675b613d351", "7f69bc6a-f89c-53d4-a52a-39a8b8512c54", "16 hours ago", "1 day ago", "7 days ago", "9 days ago", "10 days ago", "17 days ago", "18 days ago", "2 years ago", "7ed32763-a3be-57d4-a35e-a166b90de2ee", "16/01/2022 16:17:57", "11 months ago", "21 days ago", "1 month ago", "16/01/2022 16:17:58", "cec7afe6-497f-5ac5-a9c8-b1ca19d4a4b0", "7 years ago", "9 years ago", "10 years ago", "11 years ago", " but i was expecting to buy SC2... Not SC2 revamped... i couldn't just jump into it", "16/01/2022 16:17:59", "228309057", "12 months ago", "16/01/2022 16:18:00", "227799226", "1 year ago", " even on the highest settings. There are ONLY small maps", "No: I don\u2019t recommend this product", " and Experimental", "2 months ago", "2903b4fb-38c1-5b18-86e4-223040292dc1", "3 years ago", "4 years ago", "5 years ago", "9aefa298-d085-5f90-b930-00b20da59e72", "16/01/2022 16:18:03", "0", "16/01/2022 16:18:04", "32", "16/01/2022 16:18:05", "512efb41-f0b9-5a8b-ac21-e6f988f04a2d", "4b63751b-d4c0-5c5f-9138-59a473a7daaa"], "data": [11, 78, 1, 1, 1, 1, 2, 1, 2, 1, 1, 136, 1, 2, 30, 2, 58, 3, 1, 1, 2, 3, 12, 1, 1, 1, 2, 3, 1, 83, 1, 1, 1, 13, 1, 22, 3, 2, 1, 2, 2, 2, 1, 3, 1, 1]}, "label": "reviewed_at", "count": 46, "min": " and Experimental", "max": "fa660933-1130-5c66-9010-24d641f70bc7"}, {"values": {"label": ["5", "4", "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "16/01/2022 16:17:56", "3", "16/01/2022 16:17:57", "2", "1", "16/01/2022 16:17:58", " i had to learn the new feel to the game. In SC2 you now get to your good units by having to research most of them", "538c1919-dad5-54d8-89b1-619b8c7656e3", " and no larger maps to choose from. In the first version you had a large selection of maps", " you can have multiple branches of different customizations", "16/01/2022 16:18:02", "16/01/2022 16:18:03", "1 year ago", "2 years ago", "122158646", "16/01/2022 16:18:05"], "data": [285, 62, 95, 2, 14, 2, 9, 19, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]}, "label": "rating", "count": 19, "min": " and no larger maps to choose from. In the first version you had a large selection of maps", "max": "c58d87e2-558d-5eaa-96b1-2264f00e7e67"}, {"values": {"label": ["4.2727", "ef72459e-8f5c-57dc-af42-0127d2903498", "4.6993", "4.6556", "3.4091", " and experimental units are really not that great", "16/01/2022 16:17:59", "16/01/2022 16:18:00", " in SupCom2 there are around 10-15", "0", " depending on your favored style of play. You can even simply upgrade what units you have instead of the old \"\"send oldies to suicide to make room for the new guys\"\" strategy. Actually", "3.3125", "5", "4", "4.875", "4.0345"], "data": [122, 103, 81, 131, 18, 1, 1, 1, 1, 1, 1, 11, 1, 1, 19, 7]}, "label": "average_rating", "count": 16, "min": " and experimental units are really not that great", "max": "ef72459e-8f5c-57dc-af42-0127d2903498"}, {"values": {"label": ["363", "4.6556", "306", "2390", "22", " yea they are all based of the old games models but i think that most kinda suck comparatively... like the experimental units", " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "0", " it is BETTER to keep the oldies instead of suiciding them", "32", "4.2727", "16/01/2022 16:18:04", "29"], "data": [122, 105, 81, 131, 18, 1, 1, 1, 1, 30, 1, 1, 7]}, "label": "reviews_count", "count": 13, "min": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "max": "4.6556"}, {"values": {"label": ["229196240", "229179703", "229174444", "95223899", "229131414", "229087196", "229080154", "229044038", "228960695", "198688597", "198672375", "196827630", "196827194", "196230804", "195216162", "195708350", "194329916", "194187129", "127432481", "127430959", "127420280", "127414142", "127414207", "127411122", "127409004", "127407425", "127405746", "228929144", "228928290", "228863224", "228776856", "228759010", "228750584", "228749581", "228724687", "228722869", "194027229", "194017047", "192503208", "192137369", "192087597", "192080051", "192046520", "192045625", "192042914", "192041796", "127405362", "127405229", "127404696", "127396175", "127396143", "127359093", "127348302", "127348104", "127347414", "228719614", "127345863", "228712408", "228703343", "228692495", "228632763", "228622725", "228576384", "228545194", "228523449", "192040841", "192039616", "192038437", "191969147", "191868187", "191531039", "191517192", "191510980", "191473354", "191467877", "127345574", "127333838", "127321759", "127320268", "127319595", "127299640", "127295961", "127293457", "127293081", "228523275", "228509090", "228499139", "228478134", "228397787", "228341387", "228321620", "191464723", "191463669", "191462968", "191459315", "191448343", "191443448", "191440654", "191439900", "191439828", "191439957", "127291762", "127286343", "127272761", "127262343", "127260250", "127259475", "127254841", "127250995", "127250993", "127250112", "38246272", "23501684", "23367706", "19236943", "19088941", "19030618", "15250428", "15250438", "15250426", " for so called \"\"game breakers\"\" as they were know for in the old games", "127238242", "127234219", "127230795", "127187464", "127183266", "127179492", "127178055", "127177220", "127161458", "228297521", "228244888", "228226690", "228181572", "228165736", "228114419", "228085186", "228057468", "227938540", "191439701", "191439022", "191438590", "191438462", "191438175", "191437894", "191437728", "191435985", "191434602", "191433776", "127153348", "127152461", "127151155", "127149546", "127147505", "127144002", "127140095", "127137390", "127131702", "127130838", "227875021", "227791669", "227778090", "227771273", "227732223", "227730979", "227715331", "191433462", "191432612", "191432155", "191353081", "191322300", "191322155", "191321523", "191169574", "190972289", "190971178", "127127997", "127125697", "127123561", "127120887", "127117350", "127029556", "127014676", "127012426", "126806434", "15250427", "15250430", "15250425", "15250424", "15250437", " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "15250432", "15250436", "11 years ago", " because the longer they stay on the battlefield", "227695298", "227689648", "227681843", "227672104", "227658242", "227639598", "227614951", "227582245", "227560725", "227547589", "190970117", "190958407", "190900156", "190899558", "190826055", "190820482", "190815305", "190807964", "190805061", "190803084", "126755575", "126755116", "126754711", "126754570", "126746667", "126742656", "126737441", "126736040", "126678115", "126641084", "15250434", "15250431", "190795136", "190786135", "190783552", "190766977", "190764517", "190762148", "190763953", "190763710", "190763007", "190761169", "227514155", "227512948", "227493289", "227489183", "227489075", "227469318", "227466484", "227455329", "227437332", "227433603", "190758968", "190758657", "126629986", "126619345", "126599299", "126597316", "126588300", "126586642", "126576266", "126565334", "126559156", "126552237", "227368178", "227336919", "227333306", "227330788", "227308429", "227300137", "227299158", "227277590", "227277469", "160658457", "157919507", "123364925", "118294186", "116746823", "116634709", "109093076", "108515660", "75707639", "227271113", "227216898", "227212033", "227210524", "227187244", "227186461", "227165525", "227162981", "227149188", "74341808", "126539613", "126536245", "126530828", "126528004", "126526950", "126518100", "126506130", "126498760", "126495952", "227144955", "227115495", "227099195", "227073234", "363", "226961718", "226957452", "226923078", "226915139", "126476050", "126473103", "126440879", "126432204", "126430601", "126410978", "126386211", "126374385", "126350389", "126348541", "126347731", "126346918", "126344921", "126343579", "126337946", "126325080", "126323055", "2390", "126315942", "126302586", "226900312", "226893604", "226870200", "226863307", "226855621", "226844023", "226834410", "226813954", "226754257", "190364463", "122923657", "122567098", "122446616", "122436959", "122339952", "122182335", "122102991", "154204652", "141605618", "138719704", "137193968", "136798584", "136465444", "136365231", "126301922", "126301717", "126291693", "126283489", "126279116", "126277361", "126273657", "226733824", "226732965", "226732331", "226732189", "226723463", "226718702", "226704721", "226700717", "226700432", "122087294", "122023762", "122010486", "121995492", "121974894", "121930697", "121884814", "121884636", "121868056", "121864917", "126268175", "126265497", "126261158", "126253606", "126259865", "126258810", "126258784", "126256170", "126249716", "126252644", "226679986", "226677148", "226674137", "226672941", "226663884", "226662940", "226662747", "226661973", "226608892", "121860312"], "data": [1, 1, 1, 106, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "comment_id", "count": 395, "min": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "max": "95223899"}, {"values": {"label": ["d749678d-aeba-5a6b-b8e2-8d2121463672", "9f20312c-1047-5824-97d2-d5563b8fd046", "178b3b03-2c56-5abc-a016-c74c2633c9c2", "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "bc017585-3bc1-5a37-9e58-f0bed6de9a72", "4167ea1c-87b6-5dbd-a04b-56fc7d1948e9", "b4c20627-111c-5ad9-809f-11d6a82c675d", "ea9ef1ba-d537-5b73-ab71-790616ef3258", "3e14ceea-0717-51ac-9edf-6b0d17b9f978", "3bdf13c6-ed6c-5df7-a7cb-f87507d4b133", "92688319-f675-53b8-9468-2e7b1ea9bbc4", "ff2acd3f-f96f-5935-bdfc-8e29e518fb60", "a3a3d750-800d-5eef-a917-fd5b00598f06", "ebae6bfc-540e-5f39-9ce2-2d46db50b49a", "78865f85-196f-515f-90ed-a8dad95d9065", "89ac96f3-a6a7-5f6e-ac22-302869e30bc7", "65c38814-b259-591c-ae59-a3f0fbae81d0", "902d7992-f6fd-55bd-b5d7-408db5a49648", "540015d7-27e3-50f6-b66b-8646416c0cfb", "00bd1c61-b1e9-5996-9cb2-68f647941463", "5cf58f8e-75b2-555b-b9ac-0edb49219337", "992506c3-cb1d-5a05-afc6-cce6a4a437fd", "70c3cefe-763a-5aca-9b7d-5bd2b36c5595", "c1aea343-68b1-58fa-8a7d-07f265e664cb", "fec5af3e-7f63-5e5d-9649-1b81750f3e24", "bc585083-82d6-5cb5-af8a-7f19120e6f3a", "d92ea3bf-7fab-56df-802f-973a7be01387", "4eeca482-acc8-54f0-bf9c-1552ad6304c3", "b6503cc7-6b14-5ea4-ae9e-5e984741ae65", "4840bb9f-8063-54f1-aafd-dc779ba006b8", "5dfb09b5-3b7b-5c92-8d69-2e487ee55948", "58e11806-69db-59a1-bf1b-1931387149b4", "1b36ae98-a3b9-586b-b75c-92d0b0a64fbe", "ce1ab1c3-34c5-5b21-90d3-be7a37b215d1", "926fe7c6-6345-529c-91bc-35736576d50f", "b74cf53c-979d-5157-b1b1-28572636ecef", "f6a47493-63ec-510b-aba2-8a68eff9bc34", "9699ef26-f730-5927-bf3e-7cdf8ecbb2a5", "3de73f9b-98c9-56e2-805a-e539ab1e5e33", "a2bc0bcb-0540-5dca-b1c2-06430afdd624", "8c024bd3-193e-5631-802c-3a989f6d4f73", "1a337911-6166-5983-b5cf-944db19384c8", "8c51c627-f616-5bdf-aeff-d93bf787994c", "dfa3ef96-f70e-5e78-9ee8-8d0c57f017c2", "8c35296d-ba41-5598-a513-740f8566113e", "6ebdfa30-4058-5fa6-b76a-d8bc6977e810", "960cbf7c-2354-567a-ba9c-537f3e63810f", "69500d83-dab7-5078-9aa1-5e2200736382", "d361c95b-fd18-5024-a6fe-f997562e2d3b", "c74037cf-5c28-5aa1-894a-c9abd50cdc79", "ab03b0d3-cc3b-5cf9-9894-200631099bb4", "296f57cd-b10f-5bd0-8dd9-78048b7c2e37", "667613eb-326c-5e9c-a48d-bdd2461a770c", "603d6f26-ffc4-5059-8cd8-ed6ddd671e63", "7e989ba1-5dbc-561a-b719-01ed3cda849b", "4f131751-4d8a-5bfd-af50-9d2ce3dd046a", "8cbb57c6-0882-59dd-af92-73b57a213812", "86570fa2-2141-573f-93ea-6368fedc9d0d", "a3955d77-2dea-561b-823c-41bc60377780", "9e0d282d-056f-55c9-a62d-13e79bbb844c", "ee801ec0-c5cf-5655-8498-a9770f1a6921", "4ef37b88-1ab9-5d98-adfd-5a7790b9cdfc", "232f5009-6c44-540a-9e7a-040e815522eb", "bb5c5e36-48cd-533e-8b32-ac1840944224", "ce94d9a4-0183-5315-8521-941c99a5aa68", "0fcf6665-8e4c-55e5-8723-8ea686ad425a", "524f0643-9cda-5306-81ab-277f533b47da", "fd3b358c-a67f-5475-a1cd-04c862f97b4e", "aed215bd-32e5-5577-be72-8fe1a4273d12", "87901149-9f7d-5db6-9c6b-7f516bda5b83", "db0b55df-7fd4-5d5c-90d3-eac2b049be4c", "c026bcd2-f440-5b87-95d0-a9dbdd87d4fe", "0d5805fa-77a0-581e-9f6a-b5441020925d", "20b6e8de-5239-5339-97cd-f4a96cf19873", "d7a8c6c4-234e-5c12-a8d0-af859409bd8a", "09c6537e-9796-5aca-a264-354c489b7706", "b6dae06e-562f-5f67-b905-6a267a1b3147", "6ff43da6-1ce0-54d4-9080-221feba20bd8", "9dc8e634-e9bc-584c-b64b-bb39c8f54fce", "3025b560-5f5b-560b-9b15-d3c2ed1468b0", "2dee6b9f-1dd6-500a-9518-e48555992512", "348d2ec6-347b-50e5-9fe8-388a58176915", "de401188-0285-5ddd-93d8-f84f18f155e2", "6879d252-929f-560d-a2f6-c29114a460cf", "065df515-c00f-5674-8005-0e71aac9b6cc", "7b762f11-3f30-5648-898e-b365a7eaedd8", "df5e5870-c422-5585-9dbd-2f01e48ee872", "b9a43399-3aea-58dc-b1c2-96e5bab6e7f4", "e3d25147-7e31-5ade-b955-8c6c07276063", "37ab8cbb-cbe6-5514-bb5a-3223ae898d16", "156a2f4b-a3ee-5a50-8bf2-f2311c908491", "3da6f23f-4693-549c-9b9f-0faa66b56124", "66f84845-97c8-5cca-8bf1-4cc4cdfceead", "8a38edf4-1d13-54d2-a32c-f98303cbd0ac", "b25ea776-319f-5907-bb36-8330e0b9e736", "b7379f49-dc90-56f4-8823-769c4832168b", "92468c29-d5fb-59dc-a142-1e67d15d1ee1", "81bfcb3b-43a9-55da-84ca-2712183f9869", "77925e75-8d4b-5970-9020-ddd3517955c7", "22f370a8-e30f-5cea-9d38-0d7b9da2fd0b", "3c5e7a8f-7138-5143-a3dd-81d9f2bf87e6", "77005922-343e-5afd-8604-de6116cb0a81", "ead016dd-471c-550c-8335-e80ade7ecbb9", "3f2ea70f-6737-57b4-bbff-c6b5af771f90", "14829c73-4cad-510d-9d51-01ef577acadf", "fe7a0330-a5dd-530e-9497-80d37d07253b", "e59c376b-a912-50c5-9d04-8f7f3e7a6d45", "5104f652-46d7-5b1e-bdf2-55b7f55d4b22", "780060a5-4afc-5712-9c61-66c3df2f51ff", "333d879a-9b72-50d3-a5d7-faa0961846ca", "41044c39-03df-5ca0-b0da-9219160fa67b", "c64a9e38-39cc-50ef-9d30-1eed268a4a24", "8e31a70f-17f9-53d5-9f0f-3b578d7433e8", "42674a2c-bab8-5cd9-b2f4-a5b33733beb4", "322502c8-f81a-51b5-b3bf-e6e61a83b045", "c397a7c1-d874-554e-9004-4d7a2422f5d3", "8e0bfb12-1204-59aa-ae95-fc75ec400ba0", "c0b37854-ae65-508d-a8d8-05183e6ca822", "8af5ed1a-cca6-5a39-bcf8-bb9c25ec7806", "c5dd07cc-ca1f-52d8-82df-d13c4e129265", " u can make them with very little ease and there not nearly as effective as they use to be.... which i guess is the trade off for it", "928838d7-ee40-5739-a91c-37320381b139", "0a0d4148-507a-575b-8ca1-9ce89095fc80", "f30f8cd1-56b3-5068-bcd7-d59438a6da70", "caa8b6bd-4ca5-5ed9-b467-f4fc59e596ff", "b6fc226c-c88b-5332-88db-545da41ae9b3", "b0620603-ee01-512d-bdfe-b37993ab43ff", "41b29280-1727-5bba-ac8a-17e914bd2d00", "0efc324a-3a27-5e05-b98d-8cb6cd444775", "3bfce4cc-4c76-5c78-bc93-d740963116f3", "b72f7138-db42-5954-9039-1eebfbe44ba6", "750791b6-adfe-5127-aa53-9a502824f996", "83cdeff3-bf81-5aab-a214-4f778969e26c", "2f8a681e-1bd7-5a6c-a446-4ac731ed373b", "ef6ab344-54b7-5244-a7be-81066f12b6ba", "d29dc126-1eca-5ed3-8156-9f4d98d42b09", "21bbb55e-c631-5317-bbbe-e966c51ddc36", "7fc9e390-1992-5327-9a3f-8730d97e32b3", "e00ba275-4a07-5d26-b371-4317a039c78c", "e6b35618-1a65-58b4-b82f-91fe5c64d444", "85d2e8a6-54a4-5cfd-85b8-a40628881808", "de5d066a-fb60-5496-a2af-4708d4867650", "a803b874-c886-57b3-b93b-16a92cb2c4af", "9d0a0700-633a-5cb9-b33f-88479669ad1c", "78a38873-09a0-5f5c-8680-56bd3d8182bb", "0b9eb2b5-8735-5a5c-b3c1-e574976ff59a", "6680ec17-93e7-5d88-be84-252b6dcf4afa", "830e77d9-5c67-518a-a24d-48656e6ec23a", "9f9fe687-9b39-54dc-a594-be74dc951e9f", "7a0bc368-d016-51c1-a93a-e5255b8818b6", "c68ab9a9-35ca-50e7-8d99-61aa90cc6170", "3c2570e7-dcf8-5ca5-a2e5-cab3f469a020", "eb70dff8-04e8-5a64-a14e-63186d060a0e", "70075879-a707-5623-93eb-21a98adec3ff", "b2f4b512-cb05-54e0-8cdc-5513f11da130", "ca9738d7-fa47-5310-94c9-9abdf85f4aec", "7cdfe34c-abaf-5aef-9de4-e655f148a573", "92c805bc-a7f5-5195-a86c-1bae32b5992c", "342a7542-8347-5f47-a2a1-3210f50a807f", "7c0656aa-e5d5-5531-a479-c2da27eda948", "6344ef26-f49a-5fe7-adf8-f78f0291da78", "9d8c6279-b9ad-5934-8270-e45b1a2514a7", "bb1ba1ea-fdb3-5210-a1f0-c5dde357c6c5", "59c37463-7e8e-5dac-b39d-25c12a73e452", "4336655c-bf54-5815-8b4c-c7257f8ee373", "161d1563-a683-5027-9a7b-226dd83bacc9", "a9ead4c5-5697-5920-8415-47091cdf9b62", "be7a52a7-154c-5468-83e5-ce5d947f712d", "ee96d446-bfa0-5374-b74e-a26f96eab46d", "79fbee79-80ae-5908-8cda-70f9293e272f", "7e71ba28-f137-5fdd-80ab-d91a69dcd9ad", "10273c14-150a-59ac-86f3-2040fae23777", "1a5bd81d-12a7-5f67-b456-c557a1b6029b", "ce147da5-c01e-5a86-a357-f8d3ece4a123", "df892d55-bd89-528b-8528-ebb70103f590", "5465f272-2a25-544e-a43e-a137e0899216", "9603729f-86c8-5e52-a9c4-aea8bc2c705e", "4af31d2f-d9c0-55f4-9083-3945e69aede0", "7be993e6-155e-5555-998b-cedcee64ef71", "60e522b6-7f19-5e3f-8456-548142cd2603", "00a29941-a023-5474-a4bb-3c28f9699a6c", "bc7017a3-b713-5c27-9b55-944deacc859b", "11ca20bc-d09d-5da2-9f77-75560a67b0f2", "4ca56a88-18eb-5e1a-af3e-f09fb8a295b1", "a9aaf6b6-d248-5257-81b4-4261997b6957", "43d68c51-de66-5084-bb9b-beb70dd04227", "74124d14-3a82-5efd-8d25-925413486048", "65a5e017-1707-51de-9fa4-f01bd77a9e1c", "a6daf2c6-b2e0-56b6-942a-20ec613b3e8c", " don't make the same mistake I did. Do not buy this game.\"", "7d45dc21-cb6d-566e-829c-0b6a8f1fcb9d", "fe7d8b34-e569-5186-8dce-57c70a13d88c", "1", " the deadlier they become thanks to experience now. The much-famed and even moreso whined-about economy that made SupCom 1 and Forged Alliance so famous (or infamous", "6dbed12c-450d-541a-a190-c15f03c40aa6", "ddd95f84-96b2-5c7d-bb7c-53c36e6df414", "c636381d-0229-527d-99a8-bff81d749a13", "4d3e75a4-f345-5e58-bdec-b17eba6b54e8", "c434c843-886f-51ac-be66-1444953b1f34", "e98cc6f9-fb85-5bc5-8a5f-709d56e7a08a", "ab190533-6515-5e00-991f-36666c9cb8f4", "b69b8ac8-89ff-5e89-9697-52a682ad0e76", "b707b4b5-8acc-5c69-9279-f1029422274c", "ce132a16-19ad-5dc1-a222-9a18b7751770", "51346905-fab9-5ddd-bdc0-a3e78448129b", "6f4b378a-4b78-5beb-bcc2-2aea05ea730a", "15117320-4aa0-5f15-8d9f-44eb7891adfd", "7578b6e5-5098-5f49-b320-ee99268986f4", "e19bd9fd-6c3b-596b-9014-d6d8e6238e37", "31786614-0e1e-5a38-9e27-8f23084e6ee1", "3ae8c7e2-1f22-5cd8-9992-6d5f03e37b8b", "df9c8e11-c20e-5a8b-b090-975550d21a38", "9d91f740-ff30-5f49-a9e7-32cf33d739c5", "fed5a40d-6b6a-5212-aab1-7d644fd4c0d0", "017d9f32-3702-5eb4-b1fb-7426864383c7", "21945403-7c2d-5e53-bdec-30fc9caec384", "f9469cbd-8ad3-5f74-9b6d-3aefeaf073c7", "2c072257-f611-5e72-a1ab-5dc75ef88f59", "1fc8da0f-ab3c-5904-b6d7-e967083ec472", "3d6378f1-c8fb-53b7-9080-d2429741d858", "2d87329c-fbd9-571f-981d-46ff995fd728", "d9d6ab84-c03e-5838-a724-e49e367d0fdd", "03ef4326-bd0d-5d6d-8a82-673db2023dca", "1892e4f2-a10d-5cbe-ae9e-af24f821912b", "b773b1a6-5b9a-5f68-9670-3489f0334157", "d0cf2335-6dea-596b-8480-460279c701a9", "7597e0e9-5e76-5dde-8bf8-327904575e9f", "269f8e2e-b3e2-54a2-af5b-504e0de18999", "a2db9996-35e7-58d7-ada1-a48703f0843e", "c61a0a2e-6150-5816-827e-7d7fc7f7f94e", "2926a631-7fde-5f98-beff-434285a55c73", "c89c209b-87b7-51c6-b645-604bd2589c10", "fa3daaef-6785-5e0d-a7a0-53a2605e5a60", "6ac96e96-d51b-5c49-8a2a-f21a298a2960", "d433a372-ec33-57de-af65-ddd03d8458ed", "be19f9b0-7d18-50c2-8f4f-d22f83fd1081", "a56d9282-4860-5371-9f05-a9bd99c99914", "58a3cd56-3757-5683-bf5e-043f7dc92826", "a9fd61c1-57e1-5036-8cf4-01149ac3e34d", "c3f3597b-51a8-5aec-a613-90242e40e8d8", "cec310ca-6de1-5376-8bfb-8be08ffd1b87", "fe663898-37db-56ab-9d32-c3d52f93b4e5", "d95796b1-88cb-5c86-bc22-0bc9db290b2f", "4a2b7da3-cc8e-59cd-9dc0-ffa2af5d19c6", "0790d8e1-1514-528a-8f1e-1e5dc035db8b", "4984011a-1fca-57b5-89a6-e76c780daaf7", "7ca99b13-422b-5892-a441-b2dd7bf7a000", "f5f793cc-dd08-5247-9ace-2498e78f061d", "d8b5b07f-b13b-58cc-b896-615b9ad105d5", "de0956d4-0d06-55f1-afce-9551324185ce", "2dc7e561-ee75-5e53-ad76-2859903df7c3", "f255781b-e9a0-57c1-a451-7a35a3332573", "aaaaa9b0-6933-56cd-982c-9093972c44ea", "173c87ef-e2a6-5ad3-89a4-432c8c9b8d3b", "a5a4fa33-a821-53a1-82a9-e28573bb422f", "5cb903ed-3a8c-5949-adae-8c1573defb6d", "0458081f-b0d0-51c3-a5bf-819b1d1ea16b", "0370dddc-2aae-508a-b44d-122e6d641c33", "3b4eb371-c531-5ab8-ac2b-889dd0e24cfd", "11982b37-c606-5a12-a2fe-1999da7e9a6a", "049e260f-a2e3-5ee2-8422-c0b928f66317", "5542b8bf-ac17-55f6-937a-1d90f91b9677", "9bd8d11d-12c7-5078-8ffd-a76aad22839c", "deb423a5-9af3-5ba2-b788-afb7f1433960", "27f54783-5943-5768-8473-f46535b7d205", "984c0a44-286b-5f5c-a04b-21f0ec500bb6", "6ba4d664-9c8a-50a0-80af-696a0a693e1f", "1e939271-deb9-5fe8-a1c4-aa8dbdf78342", "23d9c3da-b664-52b4-bf69-0f8a7d077f90", "9bd2d34a-5e61-57c4-9d29-646e5cf6ba26", "b1f8541f-3d73-58d4-8fd2-91efc595fc96", "88ef6fb7-c95f-5675-9d98-c4a50cfd519a", "b337caff-962c-5242-b3d0-8abebb580064", "e04f8d1a-9267-530b-b5c0-10346dd373e0", "df5a7b8a-f709-59f5-b49d-dc724ec76b61", "859ac623-c5af-5604-91d5-8a99eb2504d5", "5f3917ab-9dd6-5929-9744-e3a2e874d7b4", "a99d570c-bdbd-5227-8609-ece8f499ebb5", "587a3ddd-1619-5729-88bf-61b91642d4c9", "33f65eb0-1f44-526d-9319-c906125ee5c6", "da0393de-bb8b-55f8-86de-58d92cfe4241", "2f7efb29-de97-5904-833a-c9a78dcb9212", "7615eeb0-1644-5875-856a-08aeefb4355c", "77d0486c-c3fa-55ce-a778-25a9ff85e1d6", "821dde30-9ad1-59e3-b367-e0a36dc2691b", "584ee887-b8e9-5831-b34c-9054af211b2e", "83fda476-c6ad-5de0-beb9-24a7cd48fdd2", "9a3be338-8648-50e4-a0f5-805fd576c024", "b79f70f4-fd02-53b5-8027-838f4073ed73", "123e30f0-b2b1-5458-8d8a-faee417f379a", "27ea1f05-cdda-5466-ba89-1578af352018", "71a0a99a-e767-5285-ad31-aabfed1b91d7", "05ca2650-238f-588e-a873-7007194759d7", "dbb361d8-d468-5822-a0a8-10bbb1e5c348", "bb53d5c0-348a-5800-87a7-d4eb984ca544", "89c9e45b-2b49-5be2-9e62-52634bc7fad7", "11338a10-215e-5f67-a575-5237fef59b16", "ece4609f-bd97-5a47-82b3-c1f5352598f3", "f3a80eb1-718b-5c8d-b318-b18bc83fb20e", "a77123ba-ba04-5c96-9775-f7933c733a37", "227010137", "93e6fc6f-7bf6-5a2e-b4a0-834fc2475980", "7b9af1f2-7b3d-5164-80f0-800133b61ce4", "f864ba04-27e1-5673-875f-6fd69443fb3e", "922e0d7d-c3f4-5b50-a543-e756033d3a1c", "4773a39c-0194-5088-af97-1597830af3cb", "23759918-be89-5c65-9bf4-80ffb801cdff", "378bfa7c-9e8d-5d24-9947-c0515f458a2c", "bc495ea9-fc64-52df-a68f-c177f7c045d4", "9d54e2ee-64d7-501b-adbe-31c0969dbe17", "1babf017-7fdf-5c87-8652-1407fa60eb90", "d7029cd7-b7f2-5db5-8963-596a04b78acd", "e1f7d79c-f4a9-505d-9273-c1de69d35bda", "8e92998d-0da9-5f08-b431-fcde798123c9", "7f06208f-0a2b-54ba-94ea-112a39a0c52e", "a4ae2322-89b3-504a-b7e0-9fa33a9ca17e", "138dec55-89dd-5a19-b289-861f05404137", "1df8ba9d-c4b7-5f94-ac1b-796c510d5a5e", "46be1ec8-0af4-56f1-89c5-a57e8a345971", "1704cd22-d544-5d71-9815-f5eb2372a044", "bd6cd803-2b83-5424-9c1e-5d536f889b79", "a8cb85ec-1fb1-592d-86dd-ad1977d95f62", "126319104", "aac40f5b-5309-54ee-b48f-8cef2b574aa1", "48d6e2a3-a18e-56d1-a6c2-3f3d10c0238f", "9b0e9798-1104-51bb-bb02-c4791677f066", "ab53e60a-a8f5-514d-b991-35bb8c11d5b5", "07271c3d-9b17-5d98-8c25-bdd77055b420", "213d7265-2a67-5a82-8be4-aedcc9d26874", "6a01d10d-880f-5927-a855-9877f163f764", "ccbc3319-a7f8-55cd-99c4-8df80b9f986e", "653adbc8-2641-556e-95bb-4e98b787d90b", "090663b7-8c74-501b-8c5c-ad3a2534b71f", "8a8d8b55-7214-5e92-b9ed-733d6bf7071a", "8625e7a7-4e27-5d30-a05b-fe5bf7c2cadd", "9bf14046-e0c5-500a-9dcf-e9c0e6afb859", "814c2ff9-f939-5b24-8c3e-41e751846aa3", "89ff972f-705a-50a7-8f9d-f001de728a39", "a881b3e6-56f2-5ed3-99fb-dc2394c9a4eb", "6ffa7acb-1ab2-53b2-b96c-7d8ffc9cad47", "11608ce6-435a-5fa7-8361-78c102e07aa6", "330fc9b1-4297-500d-b450-59e0c113c0c8", "29596331-f93b-5f15-b930-ea33a3c3da35", "e77e4e5f-c996-51ef-bb79-6354405c211b", "f2fad2ce-ed9a-598f-9e5a-a3ad7ea6a717", "6b553447-1f16-512b-b18d-81f6ffac6d98", "0cf0d647-5307-585d-8435-a37e7f419aa3", "4fd68a13-9df5-5e86-b0a8-836bae43d243", "36b7fb9b-c0eb-5073-b128-5bd4c7d72748", "3f2027c9-d810-5e8b-b6ea-5a2af73af35f", "dc10d9ff-527d-5235-8da4-213d2422ccc5", "fd6bea00-05a9-5cd4-98f9-5f0d4ed43eb0", "29337594-2061-52d7-9c1a-b31c9022a6b3", "c0601d16-e5fe-5975-a114-e857b25aef61", "c2e549f2-3344-5ca7-9e6a-2b4bd5a25504", "ea57e9d3-97b4-56a0-b046-1b7024e7f67a", "7c5e8e10-dca1-528f-875b-96f7b995033a", "60bdb40e-e15c-5bfa-967b-9aa559482629", "23656563-b23a-5a13-b5c5-5ab4eaabf6e9", "74c08633-86e1-5e62-a815-f443ab052ecd", "3ff9d937-f377-5e4e-b3a8-ba7eb733ad07", "2620434c-3ae6-501e-ae0e-15e040f9a198", "2cd61b63-9d87-5b31-a9f0-29eb39dc6df2", "3dab1ab5-cb69-58f7-819d-dff2b315d6af", "8592ca19-f069-5470-92be-ef5503f7df48", "3add2868-0cfc-5f48-8791-d926b2dbded2", "ad9b54e3-4762-590b-a852-63af3528cbbd", "385e416e-b857-55ee-ac2a-0576072e6373", "e052cd77-4a49-532c-879f-d46458da984a", "afd78dcb-1b2b-5967-bdaf-e82cc7a64652", "db126a54-89c7-5ad8-ba95-641b8c223538", "19ee363b-60a8-5ded-96af-6f28febe3495", "2d355f38-1266-5775-9058-b21faddb6072", "bef4412d-50fc-579b-a749-e67a52661770", "7b82a6a3-87e7-5cfe-876f-56a53ab2eecd", "fd975a90-b8e3-5159-8130-c50c5ac945eb", "bd4d2b81-94df-5627-889b-21872c0e777d", "ef5055a5-a02c-5472-87a9-158244c487f6", "86d8bb86-c5df-535b-9e95-d709cf4b5922", "17905c2b-6d32-56c8-b6eb-5d4ab9f2f219", "19a05085-2d6f-5a53-9fe9-8dc9942c7879", "e5c8c18d-9848-59fe-9d4a-12c604a675b0", "e6a73770-f7cd-564e-bf77-367069bbcb04", "fee58b67-3483-5b70-bcb6-74e5f0e93fdb", "f882a003-351a-5ef7-b7b7-757d81ef4495", "d736627e-a587-5ffc-b505-49e31c8867f4", "995d0ca0-de0d-58fa-90d5-7d9799b0e36d", "29f3ac3e-d2fb-5187-a780-1670136e97a0", "206cfb0b-c2bd-5c16-8699-f8f01d670f44", "268a103b-4fb8-5479-8872-9cb3d3383705", "8cceda67-4c9c-5187-8a0e-fae36799ed85", "bef97385-8ff8-50e6-940f-f0f05b81a9c4", "53298df5-7dec-51dc-b18f-29b2a7165011", "47719f17-1a09-557b-a952-c2ed310910b1", "a0548af2-8959-52a2-ab05-c73a838d9145"], "data": [1, 1, 1, 106, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "uniq_id", "count": 395, "min": " don't make the same mistake I did. Do not buy this game.\"", "max": "ff3fad3f-62ee-54c5-bab0-6009af0cf671"}, {"values": {"label": ["16/01/2022 16:17:56", "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "16/01/2022 16:17:57", "16/01/2022 16:17:58", "16/01/2022 16:17:59", " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "16/01/2022 16:18:00", "No: I don\u2019t recommend this product", "3.4091", " lol) has been DRASTICALLY simplified", "16/01/2022 16:18:01", "16/01/2022 16:18:02", "16/01/2022 16:18:03", "16/01/2022 16:18:04", "2bb7b6b6-1b88-5903-a898-0a754ac687d8", "16/01/2022 16:18:05", "16/01/2022 16:18:06"], "data": [13, 106, 52, 45, 47, 1, 55, 1, 1, 1, 32, 29, 27, 43, 1, 45, 1]}, "label": "scraped_at", "count": 17, "min": " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "max": "b5141b5e-d8d2-578f-a02e-1e47f25018ab"}, {"values": {"label": ["0.0 - 49.8", "49.8 - 99.6", "99.6 - 149.4", "149.4 - 199.2", "199.2 - 249.0", "249.0 - 298.8", "298.8 - 348.6", "348.6 - 398.4", "398.4 - 448.2", "448.2 - 498.0"], "data": [51, 50, 50, 50, 49, 50, 50, 50, 50, 50]}, "label": "index_stringindexer_transform", "count": 10, "min": 0.0, "max": 498.0}, {"values": {"label": ["0.0 - 3.7", "3.7 - 7.4", "7.4 - 11.1", "11.1 - 14.8", "14.8 - 18.5", "18.5 - 22.2", "22.2 - 25.9", "25.9 - 29.6", "29.6 - 33.3", "33.3 - 37.0"], "data": [407, 62, 5, 3, 4, 4, 3, 4, 4, 4]}, "label": "name_stringindexer_transform", "count": 10, "min": 0.0, "max": 37.0}, {"values": {"label": ["0.0 - 2.1", "2.1 - 4.2", "4.2 - 6.3", "6.3 - 8.4", "8.4 - 10.5", "10.5 - 12.6", "12.6 - 14.7", "14.7 - 16.8", "16.8 - 18.9", "18.9 - 21.0"], "data": [362, 78, 33, 13, 3, 2, 2, 2, 2, 3]}, "label": "brand_stringindexer_transform", "count": 10, "min": 0.0, "max": 21.0}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [280, 132, 22, 38, 11, 10, 2, 1, 2, 2]}, "label": "sku_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}, {"values": {"label": ["0.0 - 41.5", "41.5 - 83.0", "83.0 - 124.5", "124.5 - 166.0", "166.0 - 207.5", "207.5 - 249.0", "249.0 - 290.5", "290.5 - 332.0", "332.0 - 373.5", "373.5 - 415.0"], "data": [126, 41, 42, 41, 42, 41, 42, 41, 42, 42]}, "label": "reviewer_name_stringindexer_transform", "count": 10, "min": 0.0, "max": 415.0}, {"values": {"label": ["0.0 - 39.2", "39.2 - 78.4", "78.4 - 117.6", "117.6 - 156.8", "156.8 - 196.0", "196.0 - 235.2", "235.2 - 274.4", "274.4 - 313.6", "313.6 - 352.8", "352.8 - 392.0"], "data": [147, 39, 39, 39, 39, 40, 39, 39, 39, 40]}, "label": "review_title_stringindexer_transform", "count": 10, "min": 0.0, "max": 392.0}, {"values": {"label": ["0.0 - 43.4", "43.4 - 86.8", "86.8 - 130.2", "130.2 - 173.6", "173.6 - 217.0", "217.0 - 260.4", "260.4 - 303.8", "303.8 - 347.2", "347.2 - 390.6", "390.6 - 434.0"], "data": [109, 43, 44, 43, 43, 44, 43, 44, 43, 44]}, "label": "review_description_stringindexer_transform", "count": 10, "min": 0.0, "max": 434.0}, {"values": {"label": ["0.0 - 1.9", "1.9 - 3.8", "3.8 - 5.7", "5.7 - 7.6", "7.6 - 9.5", "9.5 - 11.4", "11.4 - 13.3", "13.3 - 15.2", "15.2 - 17.1", "17.1 - 19.0"], "data": [464, 15, 7, 2, 2, 2, 2, 2, 2, 2]}, "label": "recommended_review_stringindexer_transform", "count": 10, "min": 0.0, "max": 19.0}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [466, 15, 6, 3, 1, 2, 2, 1, 2, 2]}, "label": "verifed_purchaser_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}, {"values": {"label": ["0.0 - 3.5", "3.5 - 7.0", "7.0 - 10.5", "10.5 - 14.0", "14.0 - 17.5", "17.5 - 21.0", "21.0 - 24.5", "24.5 - 28.0", "28.0 - 31.5", "31.5 - 35.0"], "data": [453, 15, 7, 3, 4, 3, 4, 3, 4, 4]}, "label": "helpful_count_stringindexer_transform", "count": 10, "min": 0.0, "max": 35.0}, {"values": {"label": ["0.0 - 4.6", "4.6 - 9.2", "9.2 - 13.8", "13.8 - 18.4", "18.4 - 23.0", "23.0 - 27.6", "27.6 - 32.2", "32.2 - 36.8", "36.8 - 41.4", "41.4 - 46.0"], "data": [448, 14, 5, 5, 4, 5, 5, 4, 5, 5]}, "label": "not_helpful_count_stringindexer_transform", "count": 10, "min": 0.0, "max": 46.0}, {"values": {"label": ["0.0 - 4.5", "4.5 - 9.0", "9.0 - 13.5", "13.5 - 18.0", "18.0 - 22.5", "22.5 - 27.0", "27.0 - 31.5", "31.5 - 36.0", "36.0 - 40.5", "40.5 - 45.0"], "data": [385, 58, 15, 8, 10, 5, 5, 4, 5, 5]}, "label": "reviewed_at_stringindexer_transform", "count": 10, "min": 0.0, "max": 45.0}, {"values": {"label": ["0.0 - 1.8", "1.8 - 3.6", "3.6 - 5.4", "5.4 - 7.2", "7.2 - 9.0", "9.0 - 10.8", "10.8 - 12.6", "12.6 - 14.4", "14.4 - 16.2", "16.2 - 18.0"], "data": [380, 81, 23, 4, 2, 2, 2, 2, 2, 2]}, "label": "rating_stringindexer_transform", "count": 10, "min": 0.0, "max": 18.0}, {"values": {"label": ["0.0 - 1.5", "1.5 - 3.0", "3.0 - 4.5", "4.5 - 6.0", "6.0 - 7.5", "7.5 - 9.0", "9.0 - 10.5", "10.5 - 12.0", "12.0 - 13.5", "13.5 - 15.0"], "data": [253, 103, 100, 18, 18, 1, 2, 1, 2, 2]}, "label": "average_rating_stringindexer_transform", "count": 10, "min": 0.0, "max": 15.0}, {"values": {"label": ["0.0 - 1.2", "1.2 - 2.4", "2.4 - 3.6", "3.6 - 4.8", "4.8 - 6.0", "6.0 - 7.2", "7.2 - 8.4", "8.4 - 9.6", "9.6 - 10.8", "10.8 - 12.0"], "data": [253, 105, 81, 30, 18, 8, 1, 1, 1, 2]}, "label": "reviews_count_stringindexer_transform", "count": 10, "min": 0.0, "max": 12.0}, {"values": {"label": ["0.0 - 39.4", "39.4 - 78.8", "78.8 - 118.2", "118.2 - 157.6", "157.6 - 197.0", "197.0 - 236.4", "236.4 - 275.8", "275.8 - 315.2", "315.2 - 354.6", "354.6 - 394.0"], "data": [145, 39, 40, 39, 39, 40, 39, 40, 39, 40]}, "label": "comment_id_stringindexer_transform", "count": 10, "min": 0.0, "max": 394.0}, {"values": {"label": ["0.0 - 39.4", "39.4 - 78.8", "78.8 - 118.2", "118.2 - 157.6", "157.6 - 197.0", "197.0 - 236.4", "236.4 - 275.8", "275.8 - 315.2", "315.2 - 354.6", "354.6 - 394.0"], "data": [145, 39, 40, 39, 39, 40, 39, 40, 39, 40]}, "label": "uniq_id_stringindexer_transform", "count": 10, "min": 0.0, "max": 394.0}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [161, 99, 45, 88, 32, 56, 14, 1, 2, 2]}, "label": "scraped_at_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}], "stageId": "678c3d1a820abd653b9b85bf", "FESamplePath": "/FileStore/platform/sampleData/678c3d1a820abd653b9b85bf_AutoFE/part-00000-77160c74-9d0c-46b9-81b6-16c14a2fede6-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/678c3d1a820abd653b9b85bf_AutoFE/part-00000-77160c74-9d0c-46b9-81b6-16c14a2fede6-c000.csv", "originalcount": 5321, "graphdata": {"index": {"label": ["0", "1", "2", "3", "FYI...the 65\u201d HD television I had to replace was a Samsung that was about 4 or 5 years old that stopped working after some loud cracking and popping noises that sounded like the transformer on an overhead power line blowing out. However", "4", "5", "6", "7", "8", "I am so happy to have this wonderful big one for my first OLED TV", "9", "10", "11", "12", "13", "14", "15", "16", "17", "This thing is only $20 more than the ES2", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "The \u201ccrafted world\u201d is exceptionally detailed", "The gameplay is tight", "Most importantly", "28", "29", "30", "31", "32", "He agreed this morning while watching NASCAR that I was right. Yeah for me.\"", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "Wonderful OLED TV\"", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "More color Yoshi\u2019s to choose from and a forward and backwards game in every course. It\u2019s a lovable game to play!\"", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "Pros:", "1. The picture is absolutely gorgeous and you can tune it further to your choice.", "2. The Smartcast interface is decent.", "3. The remote is also not bad at all.", "4. Very quick to connect apple play. ", "5. There are ample connection options for my bedroom", "Cons:", "1. Cast is buggy. I can never get it to run first time. This is where I would focus most of the development time if I were Vizio.", "2. Smart Cast does not have a browser app that is accessible easily.", "3. There is no easy way to add more apps that are not already in the Vizio library.", "4. The detail picture quality will not go up to the level you get out of a top line OLED. ", "5. The bezel is still not near zero bezel size. It is sizable to be noticeable.", "Overall", "95", "The Good: Smart casting features. ", "The Bad: Pre-calibrations could improve", "THE UGLY: Very Very buggy software. Doesn't start a lot of times and have to re-plug many times. Brings me Anxiety.\"", "96", "A few quirks with the PS5 too. Sometimes when I power on the TV it also turns on the PS5. Sometimes when I power on the PS5 the TV turns on too. Neither seems to be consistent. ", "Needs and HBO Max app. Also needs to be able to disable inputs from the list like in previous Vizio models. ", "All minor issues and possibly handled via software or firmware updates. The hardware is solid though.\"", "97", "98", "99", "100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "120", "121", "122", "123", "124", "125", "126", "127", "128", "129", "130", "131", "132", "133", "134", "Make", "Stuff in your house.\"", "135", "136", "137", "138", "139", "140", "The important thing you might not first look for in a TV is how black the blacks are", "The only issue I have is the speakers leave a bit to be desired. They\u2019re ok", "141", "142", "143", "144", "145", "146", "147", "148", "149", "150", "151", "152", "153", "154", "155", "156", "157", "158", "159", "160", "161", "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "The picture is beyond amazing!! OS is smooth and video games look so darn good! Im buying the 65\"\" for the front room next week!\"", "172", "I\u2019d love to be able to recommend merely because of the picture and viewing angles alone", "173", "174", "175", "176", "177", "178", "I am so glad I gave it a chance!\"", "179", "180", "181", "182", "183", "184", "185", "186", "187", "188", "189", "190", "191", "Going back and forth between each level", "in between each secret is so satisfying.\"", "192", "193", "194", "195", "196", "197", "198", "199", "200", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "212", "213", "214", "215", "216", "217", "218", "219", "220", "221", "222", "223", "224", "225", "226", "227", "228", "229", "230", "231", "232", "233", "234", "235", "236", "237", "238", "239", "240", "241", "242", "243", "244", "245", "246", "247", "248", "249", "250", "251", "252", "253", "254", "255", "256", "257", "258", "259", "260", "261", "262", "263", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "It's great...color", "275", "276", "277", "278", "279", "With its easy to mount", "Out of the box it had a firmware update. and then a week later another.  the 2nd was a bit rude", "I am using the amazing OLED with a brand new 4k reciever with eARC.  So everying goes through the Amplifiter through a high end HDMI ARC certified cable to the TV's HDMI 1 (eArc).  Most days its running fantastic and smooth as expected.  Although", "280", "281", "282", "283", "284", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "1) airplay doesnt work 90% of the times unless i go into admin & privacy and reboot the TV.", "2) even after reboot it doesnt work 50% of the times", "3) same issue with chrome cast as well", "4) TV screen turns off while mirroring screen via my Ipad every 10-15 minutes.", "5) while connected to HDMI port when im in zoom meeting using TV as external monitor", "6) Home button doesnt work 50% of the times", "298", "299", "300", "301", "302", "303", "304", "305", "306", "307", "308", "309", "310", "Love how everything looks like crafts. ", "As a Yoshi/Poochy fan I enjoy the Yoshi games.\"", "311", "312", "313", "314", "315", "316", "317", "318", "319", "320", "321", "322", "323", "324", "HOWEVER", "This is still a really good TV. But the growing pains right now would keep me from recommending it to others. (I'm coming from a 2018 Vizio P series)\"", "325", "326", "327", "328", "329", "330", "331", "332", "333", "334", "335", "336", "337", "338", "339", "340", "341", "342", "343", "344", "345", "346", "347", "348", "349", "350", "351", "352", "My only critique is that I wish it performed @ a 1440p resolution. Everything else is great!\"", "353", "354", "355", "356", "357", "358", "359", "360", "361", "362", "I like that this is wireless with sensors ", "This controller has Bluetooth", "The motion controls are awesome", "This has a design that feels good in the hands", "My nephews prefer this over the other wireless controller we have", "363", "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "*the added mappable buttons could come in handy even though I haven't used those yet.", "*the cost is much less than the Nintendo pro controller. ", "The cons:", "*slightly unconventional setup. ", "It's not a problem though if you read the instructions. ", "*its lighter in weight which makes me wonder about durability. ", "Makes a perfect 2nd controller for kids.\"", "364", "365", "366", "367", "368", "369", "370", "371", "372", "373", "374", "Great sequel to Wooly World\"", "375", "376", "The addition of being allowed to manually aim your eggs removes some of the frustration that earlier titles had and there are collectible items in abundance for completionists. That all said", "The biggest hiccup in the game I think is the mini quests you get. Each level has multiple different set pieces that a robot will want you to collect. The issue is you can only do one at a time so the game asks you to play through one level at least 6 or 7 times and it can get rather tedious at times. My suggestion is that if you are collecting everything", "In the end the game is a relaxing adventure through a handcrafted (Almost literally) world that never fails to charm. Perfect for players of all ages", "377", "378", "It's a great game for kids and adults!\"", "379", "380", "381", "382", "The one thing that would truly be the cherry on top", "383", "384", "385", "386", "387", "388", "389", "390", "391", "392", "393", "394", "395", "396", "397", "398", "399", "400", "401", "402", "403", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417", "418", "419", "420", "Thx", "Xbox Series x\"", "421", "422", "423", "He absolutely loves it. It linked up easily and is user friendly. ", "He loves the two on the fly buttons he can map to Make his play more custom. "], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "name": {"label": ["VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", " my 42\u201d VIZIO that I bought in \u201808 doesn\u2019t even have a single bad pixel. Food for thought.\"", " of which screen is fantastic and very light compared to my previous one indeed.\"", "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", " and you know they could\u2019ve easier made it $100 more and still sold out. Amazing.\"", "Yoshi's Crafted World - Nintendo Switch", " with cardboard cutouts", " with seamless reaction times and plenty of opportunities to save yourself from mistakes.  Easy enough for kids to pick up", " this game is fun!\"", "yes: I recommend this product", "No: I don\u2019t recommend this product", " for the price it is a good deal.\"", "Supreme Commander 2", " followed by how light the screen can be without a terrible contrast. This TV fit the bill for both. Also", " but if you want a theater experience", " truth is because of the issues at present with the firmware", " finding every nook and cranny ", " sound and price. We have had Visos in the past and have been very pleased.\"", " easy setup", " as it occurred in the middle of a show without warning.", " the TV has 2 behaviors that need adjusting", "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", " i will have to reboot more than once", " it throws message no signal detected and turns off TV after few minutes", " unless TV is rebooted\"", " there are a few headaches that is keeping me from recommending it", "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", " so I'm not tied down with a cord.  ", " mappable buttons", " this is a smart product!", " it is not bulky or hard to work.  ", " and they kind of fight over it.  They really like the retro Mario on the controller", "WRC 8 FIA World Rally Championship - PlayStation 4", " the game is not meant for those looking for a challenge. I don't need dark souls levels of difficulty", " don't try to get it all at once because I assure you you will be back through that level multiple times.", " but if you're looking for a challenge I would look elsewhere.\"", " would be to have a microphone on the remote control to search for a program like the roku\u2019s do. ", " it is a good sized tv with an amazing picture. Well worth it.\""], "data": [140, 1, 1, 82, 1, 140, 1, 1, 1, 45, 2, 1, 22, 1, 1, 1, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 22, 1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 1]}, "brand": {"label": ["VIZIO", "yes: I recommend this product", "Microsoft", "Nintendo", " Pinterest worth constructions", " but easily enjoyed by gamers of all ages", "No: I don\u2019t recommend this product", "Verified Purchaser", "Square Enix", " this TV is fully ready for the Max features of the Series X and PS5.", " buy a sound bar or speakers.\"", " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", " the show just begins with its amazing ink black levels", " not sure if its me or a firmware update.  They are: the screen goes blank when new input isnt supplied", "Little Orbit", " while im still in between the meeting.", " the first is the HDMI 2.1 port. The OLED h-1 has 4 HDMI ports", "PowerA", " fully programmable", " and make fun of me because it was brand new \"\"in my day\"\".  This is fun", "Maximum Games", " but at least some sort of resistance would have been nice. Levels can basically be run through rather blind if you're not hunting for every red coin or flower. Even the challenge levels at the end of the game don't really have much bite to them."], "data": [140, 56, 82, 140, 1, 1, 2, 6, 22, 1, 1, 1, 1, 1, 11, 1, 1, 22, 1, 1, 7, 1]}, "sku": {"label": ["328244", "yes: I recommend this product", "307392", "Verified Purchaser", "191609", " and vibrant colors that pop on everything from the tiny Switch screen to a 70\u201d flatscreen TV.", "0", "522023", "No: I don\u2019t recommend this product", " beautiful imagery from its 1080P to its upscaling to 4k", " ie your movie is paused. And you need to press the OK on the remote to wake it up.  Having your show resume", "119061", " #1 is eARC (awesome)", "231963", " and more.  ", " so I'd definitely recommend this product.\"", "205005"], "data": [140, 50, 82, 3, 140, 1, 16, 22, 1, 1, 1, 11, 1, 22, 1, 1, 7]}, "reviewer_name": {"label": ["Leeford", "DJM7", "EC82", "Weeto", "0", "LexusSC400", "Ninjaafro", "von R", "Ohio Erik", "jonck", "Bob279", "NuggetsOne", "AJ V", "Always a fool", "RootM0d", "Ozlas", "Odium Prius", "Ryan CIN3MATIX", "Punkwaste", "CosmicOwl", "Skyturtle97", "Pitbull91101", "Mykd", "Chigg", "Prieto56", "Iz B", "Angel Marred", "Derrick Evans", "Jeremy Green", "zachR", "1", "Carl78", "Alejandro Rivera", "Pixle101", "Sillypajamas", "John4", "Mike1921", "Bmitch20", "karena", "Babes70", "Koky87", "Dcm388", "SunnyS", "Spenceleoz", "Rich190", "DrKillem", "Areria", "eyesayahh", "Animehipster", "Moi93", "Geo R", "JohnHalo117", "GrabAzzery", "Chaz54", "Jukeman79", "dfint", "SamuraiMatt", "DKCBatch", "VileMKII", "LRoberto", "Philliptate7", "Toxicbug", "Bardot", "tackomoto", "Bob81", "Porkchop76", "Bino7899", "Doblado98", "Super Awesome!", "jpc3", "Terry T.", "Canothegreat", "shane19", "R Robles", "IanMan141", "Anonymous", "Gaming reviews6", "twojoesf", "Marco AP", "I own this", "Fa crediblenick", "516", "M4lmx81", "NicoleD90", "MDB3", "Bigbadbarry", "Scott79rod", "BubbaHero4All", "Diana finley", "HeliosExe", "platygirl", "2-Apr", "Candice S", "Woodbine23", "Maximus", "Pat23", "woodbine23", "Rajib", "KristovM", "goobs150", "sftaylor614", "Johnboi781", "Harbinger86", "King TJ 09", "Biobroly24", "Killerxxx08", "Parker86", "PUGLOVERRG", "Kamna", "Natees", "Nate Corneliusen", "Racheljay11", "D3vonator", "Vegas momma", "Henrio", "Jeefly", "BoJackson87", "tankgod1", "16nflp", "Joey3245", "chiknwingding", "GeneralM99", "fiddlegammer11", "Commando38", "CoD4 Veteran 13", "TheGamerGalore", "agent00aa", "jonso", "KingEdd", "Ems C", "Leon81", "Kids love i", "Marshmilo", "makeshift SP", "Marc reed", "Kwoodky", "Marieleisele", "Jb2827", "TCTV", "Mofa", "Cat711", "FXDLS110", "GASMAN", "ectaylo", "Melony", "Slair", "ll1cool1", "DK4345", "Hothroy", "Zanderspike", "N Zero", "daSurge", "James0023", "Adyn Evans", "glumee", "Azucarmamacita", "dahc", "killer_kenne", "JustWill1982", "Theraven16", "Penutt2", "TheMonty", "Drdrums", "Midwestmikey", "Chrissy in ny", "Vman", "T. Lawson", "deshon", "MPock", "DaBurghLover", "Buck Bull Stallion", "MrGregory2000", "cliff90", "Barry1226", "Timbo88", "Assassionator", "Brannon M", "Johnson1720", "Disappointeddd", "JLAxxSPARTAN", "Henroc", "Seena", "RandiBeth", "Elope90", "Cfm1985", "BubonicChronic", "Buttztallion", "Digmyearth", "JackB72", "RobertKW", "Angelrose2", "Noz 37", "AikenAidan", "Kyoungblood", "SumoSpike", "Deathsprophet", "Bumzab", "nonxaznxboi", "Kerican", "Cycephenom", "DemonWolfC6", "Gamerguy", "Mkaz", "MRDSIGN", "Rcmm", "Angela W", "Shaun7979", "Blurr60", "Twan", "Res136", "Jcompu466", "Astraeus", "dRn00bies", "Nicole F", "David Armando", "spartan19", "BxBNicX", "The name John was taken", "Jrjbaj", "PetLover62", "Gamer Man77", "Patrick Giles", "Blackfeather666", "Dadadum", "Mr Dingus", "DarkEmpressAly", "mariofamily", "DaddyRay78", "Amanda Cooper", "JA II", "MM213", "Androl123", "RayMel5", "VALumiere", "Mikeiceman", "PM117ER", "Patrick w7", "JakeO62", "Rambo34", "jws1025", "Mattoxbox", "Ellie RA", "mdfsandman", "thearchie32", "boilerone", "Quando", "None, none", "Jos\u00e9viera264", "The truth", "A-bomb", "John26", "dmartinez097", "JPez1", "Luccon7", "xTheSandman72", "Doomcrew", "Da1trueS4nch3Z", "NexusWolf", "The1stAv3ng3r", "JCMB", "cheeseman585", "Sixkids", "Jerk unit", "TheArgyleWizard", "CampM", "Carebear43055", "CWB!", "RickZ", "The Doctor", " to its true 4K Glory. ", " doesnt do it.  and the 2nd is that a few times now", "TOGA Sarge", "JMCH", "Margot", "Skeet96", "MikeOxlong69", "TimB76", "LivinLow", "Neco46", "Cbj4892", "Shaqcool", "Unlockable51", "AceZero17X", "DumbMarsupial", "mn1meii", "Greg11", "Drew6977", "Shafi", "RedRaider", "cccmak126", "RomS", "Fivonefivo", "Imagine1959", "TomDawg1", "KarateBear", "ChristyJay", "AnnB", "Sleepy Ninja", "SD Dad", "Nyxian", "Izzy28", "lenosaurio", "Kelchyd", "Mipsie", "Heather0101", "Hutchworld", "Stude", "Ybreeze5", "Kenny H", "StevieC", "Jethro2312", "ACyberPoet", "Jojo2414", "Chasd", "McFang", " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "phyra", "Anthony87", "Richard947", "Jon bc", "Justmeow0417", "halfjew22", "Eglandon", "Kittencakes", "FireWife", "Brennan91", "Josr85", "Yoshi Fan1", "ShadowKnight92", "R00T666", "Mr Eric", "Dadgames", "Weasel771q", "Anthony Nussbaum", "kschneider1231", "Rwarmander", "Randy cox", "IrishRunner", "Ray T", "SDotRinney", "Prakers", "PaulS", "Whydoihavetohaveanickname", "Britan91", "Ezirkle", "Carlos G.", "Radwithab", "Meadow", "Jess2274", "MandM", "Cheeks784", "cwinniebear24", "Mommyof2boyz", "DiamondAries999", "yes: I recommend this product", "RachelA1020", "Court the Sport", "NSU_Ant", "IAMTHEWHEELMAN", "Alllly", "The monumental", "Sarge97502", "Holden Macaque", "Christow", "ghostdph", "carauza", "Charlie from VA", "emperordesslok", "Jack Badgerlord Fox", "SusieK", "Mebunny", "Drumfreak117", "TitusJ99", "MotherMayI", "LaBestia", "Lauri49", "jmrichard427", "Tom42", "Cowboy101084", "Mugen", "Suzey", "Concerned vizio tv owner.", "mh061", "Golam41", "KLP26", "Mdcsooc7", "Joedtip", "Cvoshell4", "Missy23", "Kiki2014", "Mama", "M3WILKERSON", "Beau C", "Lisalou5150", "Videogamegente", "JJ77GB", "JDHarsh", "Greenender23", "Arjei Lynne", "Abish", "Simi90", "Davebasura", "JCMA", "Pappabear03187", "Liberty25", "Ghost Dylan", "Jasper L.", "VinnyD", "adrianiii", "Bgerald", "JON205", "Joey D215", "TomsVizio", "Ricw", "JustJess76", "Pvtcarlswife"], "data": [1, 1, 1, 1, 23, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 14, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "review_title": {"label": ["look out gamerz, here comez awsome", "Great looking screen!", "Quality", "Unbelievable picture quality!", "0", "Vizio OLED", "Bugs", "Glass like screen", "Amazing 4k picture", "Great features", "Great picture and a good price", "Awesomeness!", "Fantastic product", "Not all as it seems", "Beautiful design - Awesome feel - Must get one!", "Simply amazing", "Limited Edition Halo Controller", "Beautiful Elite Series 2", "Firing on all cylinders.", "Rad sauce", "Excellent purchase.", "Yoshi switch game", "Awesome game if you like the Mario brothers games.", "Awsome game...", "Awesome Game for Children!", "Poochy", "Not bad", "Opinion on Yoshi Crafted World", "Another Win-tendo Jewel!!", "Good game", "Best Nintendo game I ever played!", "Brilliant picture", "Absolutely amazing picture quality", "This tv is vibrant", "10 months ago", "Great picture, confusing to turn on", "Nice tv", "Gorgeous picture!", "Love this TV!!", "Great tv for value", "Best tv for the price", "TV is awesome!!", "Xbox Elite Controller 2 - Halo Edition", "Premium Halo Xbox Elite Controller", "Amazing!", "Great controller but late shipping", "Best Controller", "Great controller", "Halo Elite Series 2 Controller", "Buy one if you can find it!", "Halo Infinite Controller:)", "A High Quality Masterpiece", "Yoshi party", "BUY IT", "Tank Yoshi and the layered egg aiming", "Yoshi's Crafted World", "Good", "Super awesome", "1 or 2 player fun!", "Game play", "Love It", "Fun repeat play factor", "Outstanding!", "Deep blacks", "Great TV for the price", "Amazing tv", "11 months ago", "Great features!", "Great price, Vizio is a reliable brand", "Good TV for the Price but has some issues", "Beautiful oled screen", "Looks great!", "Best Controller!", "Elite  Series 2 Halo Wireless Controller", "Amazing", "Great looking controller!", "Buttons don\u2019t register", "Excellent controller", "Awesome controller", "Solid controller", "This is awesome design", "Awesome!", "Family time", "Yoshi Fun!", "2 years ago", "Awesome", "Great game!", "Yoshi's crafted world", "gud", "Yoshi's Crafted World... Buy it TODAY", "Classic", "Yoshi's crafted world is fun", "Excellent product", "Awesome Features!", "Buggy like no tomorrow", "Almost but not quite", "Great Clarity, Very Very buggy software.", "Gorgeous screen with a few quirks", "Vizio OLED TV", "Love / Hate Relationship", "Excellent tv great picture", "Love it", "Incredible controller!", "Halo Infinite Elite Series 2 Controller", "Halo lovers & competitive players dream", "Xbox elite series 2", "Microsoft Elite 2 Pro Controller Halo Edition", "Beautiful controller", "Worth every penny.", "It's alright", "Easy to pick up, hard to master", "Fun new twist on a Yoshi", "It\u2019s okay", "A Unique 3D Adventure that's hard to resist", "Cute Yoshi game", "A wonderful game", "Yoshi", "Great Game!", "Great game.", "Not as good as it looks", "I don't see how people can't like it", "Great...but...", "Best RTS game made so far", "good, but a little disappointed", "SC2? or sometihng completely  different?", "Crafted Family Fun", "He love it", "Big replay value", "Retro", "Kids love it", "Awesome, Nothing too Over the top", "The game", "Gotta get it!", "Great fun for everyone.", "Reasonable pricing, great OLED", "Very Nice", "Awesome picture", "Great Picture", "Picture is good, the firmware needs improvement", "Really Good TV, I\u2019m not a gamer.", "Great Picture/Horrible Software", "Beautiful picture and great sound!", "Beautiful picture, disappointing software...", "Great colors sometimes", "Xbox Halo Elite Series 2 Controller thoughts.", "Oh so pretty!", "Issues with mine, probably not everyone.", "Great Halo Controller", "Finish the fight!", "Master Chief approves", "Love this controller.", "Coolest controller", "Halo Infinite Elite Controller", "Great once I got the working product.", "Nintendo Just KNOWS Fun!", "Yoshis crafter world", "Cute and fun", "Yoshi crushes another one outta the park!!", "More Yoshi fun.", "Yoshi\u2019s Crafted World", "Beautiful game but a bit overpriced.", "Don\u2019t miss this if you like platformers!", "Great game for kids and adults", "Oled 55in TV", "Blown Away!!!!", "1 year ago", "Awesome picture, firmware need work", "OK Updates would make it better", "Excellent Oled", "Super crisp picture quality", "Okay", "Vizio oled h1", "World Class Display OLED", "Best Picture Ever", "Sticky R thumbstick Resistance.", "Great controller now a little better", "Y button doesnt work all the time.", "Xbox Halo Elite 2 Controller", "Halo LE Elite 2", "Faulty product with known issues", "Xbox Elite Controller Series 2 Halo Edition", "Elite controller", "Halo Elite controller", "Amazing!!", "Not a good game", "I love it!", "Yoshi has never been better.", "Easy but fun", "A fun single player game", "It do like be so it be good", "Cute, crafty fun!", "Surprisingly fun", "You won\u2019t be disappointed if you\u2019re a Yoshi fan!", "Great game and fun", "So where is the GAME?", "This is the WORST SC game peroid!", "dont touch it? i think i will", "Another Dissapointment of 2010 Gaming", "Sorry I'm having a hard time speaking its so Awesome!!", "Do not touch this game with a 10-foot pole", "Tons of fun", "SC 2 - mediocre game.", "Way to destroy the best RTS series ever made!", "Nothing like the first two!", "Great picture quality", "Just short of 5", "Great Value For OLED", "Beautiful Thing", "Incredibly Beautiful Display", "To many problems out the box.", "Skinny", "Price to feature king!", "Great picture", "Great video!", "Beautiful", "Solid slaying ordanince", "GAME CHANGER.", "Very Good", "Weapon of choice for Halo Infinite", "Best controller ever", "Sickest looking Halo Controller Ever", "Solid improvement over the Series 1", "Halo Fanatic Gift", "Getting what you want", "Simple game for Beginning Gamers", "#1", "Fun!", "It's okay, but not the best Yoshi title.", "Yoshi\u2019s crafted world", "Yoshi's Crafted World Review", "Yoshis Crafted World", "Great", "One of the best games!", "A fun RTS", "Sooooo disapointing", "Really nice Controller", "The best Xbox Controller for a Halo fan!!!", "Halo infinite Elite Controller", "Looks pretty - never worked", "Fast shipping. Awesome controller", "Exactly what I was looking for", "Bumpers", "Halo Elite Controller", "High quality controller", "Great picture.  easy setup", "Worth the Money!!!", "Great picture!", "No Slouch", "Wonderful Christmas present from the kids", "Bad picture", "Amazing TV", "Great features, awesome picture, and easy set up.", "Pristine Image!", "Amazing controller", "Fun game!", "Green mean Machine.", "Yoshi is awesome", "A wonderful addition to the Yoshi game series", "Great game", "Love Yoshi!!", "A Modern Take on Yoshi's Story", "Good investment", "A definitely must pickup", "Fun, Beautiful, and Appropriately Challenging", "Love it.", "Great picture Quality", "Need better smart app!", "Great features & Amazing color and clarity", "Great so far!", "Stunning Picture", " the TV just doesnt see any input on HDMI 1", "Mr", "Color", "Fun!!", "Fun With Friends", "Super fun", "Very Hard to Play!", "Nice casual game", "Game of the year", "It ok", "HORRENDOUS!!!!", "horrible", "Great price", "Crystal clear 4k", "Lot of issues with new OLED TV", "Great OLED TV", "Perfect.", "Affordable OLED", "Excellent picture! Very crisp and defined", "Great tv", "Amazing picture", "Bad Trailer, Horrible Game", "Fun", "Couldn\u2019t hold interest", "Fun for all ages", "Yoshi is great", "Great for playing, nightmare for completing", "Yoshi Crafted World", "Super cute and relaxing", "Absolute gem", "Kids will love it!!", "Stunning picture", "Fantastic TV", "Great tv but needs patches as soon as possible", "Love the cost and love the quality overall", "Amazing how far TV has come in just a few years", "EXCELLANT OLED UHD TV", "Absolutely love this TV!", "So many features", "Troublesome TV with amazing potential", " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "Fun 2 player", "Nintendo impressed me again.", "Nintendo fun for everyone!", "Perfect for the little ones", "Family game", "Great graphics, 2 player gameplay awesome", "Awesome game", "Sooo cute~ <3", "Brings out the kid in a 33 year old.", "Unique and colorful world", "Great game for all ages", "Overall Gameplay", "Yoshi at his best!", "Great game for the family", "Another Great Nintendo Game", "Fun to relax with", "Won't turn on", "Love this thing", "The picture!", "Great picture great sound overall a great TV", "Beyond excellent", "Beautiful picture and sound.  Sluggish controls", "Great picture but OS is a bit slow", "Excellent picture quality!", "Enhances Game Play and Fits Perfectly in Hands", "Wirelesa Nintendo Switch Controller", "Eaysy to Use", "excellent value for the cost", "Such a great design", "Enhanced Wireless!!!", "Very good but not perfect.", "3 years ago", "Amazing Controller!", "Like DarkSouls but with Cars! :) Love it!!!!", "Skip it.", "Lots of Fun", "Let the dirt fly and the motor cry", "Wrc8", "Crazy good WRC game.\\m/", "WRC 8 FIA World Rally Championship is great game.", "Yoshi\u2019s crafted world game", "GET THIS GAME!", "Its yoshi!", "Another quality Switch release", "Weaponized Cuteness at it's Finest", "Cute stuff", "Love love love", "Awesome game for all", "Yoshi's Flabby World", "Crafty Business", "Great tv quality - could use a microphone remote", "Beautiful color!", "Fantastic picture", "Great but...", "What a picture!", "Terrible software", "Beautiful Picture", "Great Features!", "Great Features", "Great product!", "Love", "Great product!!", "So retro!", "Works great", "Love it!", "Great for younger kids", "Fun game, awesome graphics", "Cute and fun!", "Needs a better soundtrack.", "Just my thoughts", "Short and sweet", "Beautifully Developed!", "My Yoshi Experience", "OLED55H-1 Sucks!", "Has everything you want for an Oled Tv", "All the bells and whistles!", "Great picture! Great sound!", "Great Choice", "Awesome TV for the PS5 !", "Almost great for gaming", "Great controller!!", "Great bonus features and love graphics"], "data": [56, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 5, 1, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 6, 3, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "review_description": {"label": ["My new OLED is a upgrade and it's great!  This is my third Vizio TV to replace my first one that went blank after 12 years of stellar service. (I'm even thinking of getting it repaired if possible for the great grand kids.)   I have always liked the picture quality and the price of Vizio's. You cant go wrong.", "Rating is really a 4.5 but that's unavailable. The unit looks great both in and off. It is short on physical features (Bluetooth and whatnot) but I use both external sound and media units. This is a great OLED to buy if you want a great TV at a reasonable price.", "I\u2019m quite pleased with the entire product as a whole. The quality of picture and sound really speaks for itself when in use.", "I\u2019ve only had my new Visio OLED65 mounted and operating for 3 days now and I\u2019m like a kid who after Christmas can\u2019t get enough of his favorite gift. The brightness and clarity of the picture is another huge by step forward in the evolution of  the television. I find myself seeking out programming that will showcase the quality of the picture regardless of the genre or intended audience. Some of the newer, computer generated cartoons, lack any redeemable qualities (imho) save for the incredible graphics, which are stunningly colorful, bright, and almost as vivid as real life. Nature documentaries and shows involving space, especially when shot in 4K are almost mesmerizing. When I bought my 65\u201d HD tv about 10 years ago I thought I was witnessing the best quality picture that could be produced by anything this side of a mirror. I was wrong, and happily so. If you\u2019re on the fence, like I was, about whether to replace a broken or outdated television with another of similar HD quality, that is to say \u201cstandard high definition\u201d...don\u2019t even waste your time. It\u2019s increasingly difficult to find as 4K is becoming ubiquitous, so that is pretty much a given. On the subject of spending your hard earned money on the more expensive OLED technology....if you have the means, or can somehow figure out how to acquire the means...my advice is definitely do so. Whether you\u2019re into movies, sports, gaming, or even nature/space shows, you will be amazed at the latest leap in picture quality and brightness. And VIZIO offers all the quality at a substantial savings. Putting the absolute best technology within the reach of those of us for whom the strength of the stock market makes absolutely no difference to our bottom line. ", "10 months ago", "The picture is very crisp and the blacks very dark.  Beautiful color.  The Vizio SmartCast app is fantastic.  The response from selections is much faster than the traditional supplied remote.  They update it from time to time with most recent voice search function", "Picture quality is amazing, however within a week from purchasing the tv will not turn on unless I unplug and plug it back in.", "Image is so clear I feel like I\u2019m on the set of the shows.", "I purchased this TV about 2 weeks ago and am blown away by the crisp, 4k picture.  I would definitely recommend this TV to someone considering an upgrade.", "I got this today 2/25 for my birthday present from my son as a surprise gift, without any prior guess or information at all. My previous one in my master bed room was quite old Samsung 50\u201d PD TV, which was ok but heavy and bulky compared to this. ", "Best price on an OLED tv. Has a great picture and is easy to navigate the menus and connect via apple or Android devices. I always bought LG OLED tvs because I liked their quality and features. But so far, Vizio is just as good and a better price.", "Just like the elite controller v2 but halo edition one of the best controllers out there if you do not have one elite\u2019s controller\u2019s are must have.", "First foray with the elite controller. Nothing but impressed. The weight in the hand, the grip, the buttons, and changeable joysticks are all amazing. Even better is the Masterchief finish. If you can't find the halo edition I'd recommend trying the regular elite series 2, I'll never use a different Xbox controller again.", "Really bought this for the blue mode leds, just to find out they are still white leds with a blue coating on them and not that bright. All in all still an elite controller.", "At first I was asking myself why spend the crazy money on a controller!  I too am now a believer.  From the case to cable to finally making its way to the actual controller - it is special in every way.  There is so much detail to this controller.  Lets not forget it is a limited edition and carries a beautiful Halo design.", "The build of this controller is perfect and the details are amazing.", "Cortana herself lives within this controller. I am one with Halo", "This controller has always been great but this one is a work of art.", "Even lighter than my previously owned Elite Series 2, thought it would be heavier. The buttons, the triggers, the analogue sticks, everything operates better than the original Elite Series 2 at launch. ", "14 days ago", "These controllers I think are worth the money. One of my favorite things is that I no longer need double A batteries. It comes with a charging port. And how I can customize the buttons is rad", "Love the controller use it everytime I play. The remote plays excellent. Be carefull of the back buttons though do to being removable I feel like they will wear out faster than most.", "Yoshi game was awesome and still playing it thank u sooo much GameStop :))", "Great game. You will enjoy it. Good price worth it I Always have enjoyed the super Mario series since Mario brothers in the arcade", "My son loves to play this game, he's been playing it every day since he got it... Great Job!!!", "The game is great for a family and younger children. My 4 year old wnjoys the game.", "It would be better if Poochy was in all of the levels.", "It's cute and fun, but feels a little lacking in fulfilling its potential.", "Good game including game play and music also music", "The quirky style that shined in Yoshi\u2019s Wooly World has gotten a serious upgrade in this new gem from Nintendo.  Like all it\u2019s first-party titles, this game is nearly flawless.", "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "2 years ago", "She loves it good game. It easy to play and addicting.", "Yoshi\u2018s crafted world is the best Nintendo game I ever played since Yoshi\u2018s woolly world! Lots of hard challenges to complete and it\u2019s so much fun! I love this game!", "I recently bought this TV and was blown as easy with the picture quality. I never want not to go back to LED.", "I went from an old LCD TV to this Ola TV and the picture quality is amazing this TV has a deep as blocks of ever seen the sound quality is fantastic I could not be happier!", "Bought this yesterday and I am really excited. I saw how clear the picture was and had to have it. Won out over my husband who wanted the Sony.", "5", "I've had this TV for 3 weeks now, so far I really like the picture. it's hooked up to a vizio 2.1 sound bar. it is confusing when I 1st turn the TV on,  I get the Vizio sign on the screen, a few moments later the picture comes on with the TV speakers, then the tv shuts off, a few seconds pass and he comes back on with the sidebar act of and everything is OK then don't understand why it goes off comes on goes off and comes back on", "Great TV at at a reasonable price.  Happy so far with purchase", "I love that I found an OLED that did not break the bank. The picture quality is amazing and VCast is great! The only downside is the sound and it\u2019s only a small complaint on the quality.", "Easy setup and there you go...I love VIZIO TV. I will continue to buy VIZIO TV's !", "Very good image quality, beautiful design on a affordable price", "Oled is king I\u2019ll never go back to traditional led TVs again it\u2019s just not even in the same ballpark you can\u2019t beat the picture quality of and oled", "\"I'm a true fan of vizio. My old 36\"\" Vizio lasted me a very long time and that's the reason why I decided to stick with vizio. Visuals are amazing on this OLED. There are some bugs but they can be repaired by software update patches released by vizio. I also bought the Vizio Atmos soundbar and its absolutely freegin awesome. Only issue I've experienced is the sound bar doesnt activate on its own and I usually have to cycle through the settings to reactivate through HDMI-ARC. Im.sure theres a fix for it. Overall I'm happy with it and still feel vizio makes great products.\"", "It\u2019s amazing! Works perfect, just as an elite controller should. The best part is the paint job! 10/10 recommend.", "This controller provides excellent fine motor control with adjustable thumbstick tension, and removable back peddles.  It works great especially for a first person shooting game like Halo infinite.  It\u2019s on the pricey side, but you know this is a premium product for serious gamers.", "Best Xbox controller I've owned. Worth every penny. Owned for a month with no issues. Only con is I wish there were replacement joysticks, I love these but i know I'm going to wear them out, and I won't have Master Cheif green ones to replace :/", "Great controller. Purchase was definitely worth it. The only problem was the finalizing my payment and the late shipment through GameStop.", "This controller is incredibly responsive. It\u2019s fully customizable with lots of additional features & settings that can be adjusted to your preferences. I was skeptical at first due to the price but after a fair amount of use I wouldn\u2019t game with anything else", "Love the controller no probs with it the first one was lost but customer service made sure I got another one and in a timely manner", "SO BEAUTIFUL! Great addition to my Halo collection. The detail is just amazing. Performs like any other elite series 2 but that color scheme is just phenomenal.", "great controller, beautiful design, ultimate customization", "Doesn\u2019t even feel like an elite controller. But it does feel like an advance one with the grips and joystick converters. Not really worth the money but the design is amazing and there is no battery pack in the back, it\u2019s all built in, like a phone. Over all I love it! I\u2019m such a Halo fan it was a no brainer not to get.", "It feels great, it enhances gameplay thanks to the paddles and customizability, and it looks absolutely beautiful.", "Tons of fun to play with my kids! They love the look and ease of play!", "Awsome title. Loads of fun! My kids and I love it!", "This game is amazing! Almost had given up on the Switch, but this game saved that from happening! It's a great game for people of all ages!", "Fun and cute, but some of the mechanics don't work that well (Tank Yoshi and the mutil-layer egg aiming). Still fun, but needs improvement in the mentioned areas. See Caddicarus' analysis.", "It's awesome! The graphics make everything look like cardboard!", "Fun title that is a good installment to the series. A little bit easy to beat, but has plenty of extras to keep entertained while going for that 100%", "This game was fir my youngest, he picked it out from good reviews online.", "It can be 1 or 2 players. It\u2019s pretty simple mechanics, but there are so many creative was to use them. And there is a lot of replay ability. Me and wife have a blast.", "It\u2019s a game that\u2019s for kids and for adults to enjoy", "Purchased this TV a couple of weeks ago as my existing TV was 10+ years old and needed an upgrade.  Had a salesman take the time to show me the differences between an OLED and other projection systems.  Couldn't be happier with the picture that I am not experiencing.", "My wife loves it. She even lets me play the co-op mode with her sometimes. I\u2019m not that into gaming, but this game is really fun!", "This OLED is Excellent, Very Easy to Operate. I imagine that Someone may Complain but I am certain that it will be a Tribal thing.", "Great tv. I like the vizio apps.the sound is nothing special but if you are buying an OLED you probably have another option. The best part is the deep true black. The colors are very vibrant. I am very satisfied.", "Has some bugs and I know Vizio will work on them a little faster. Especially with the new Xbox series x and ps5. Other than that can\u2019t beat the price for an Oled TV. Great picture. Now Vizio please get the VRR @ 4K120 to work and give us the option to change all picture setting in game mode. No settings should be blanked out.", "I bought this for my birthday and it has been amazing!", "I love the tv and everything about it. I am a big fan of Vizio TVs, except for the sound, you will need a soundbar.", "All my Vizio TVs have held up under use. Hoping the new OLEDs will get firmware updates and continue to make this TV great now and in the future", "Very good OLED tv for the price but it does have some issues with powering on.  If you leave it idle for too long it will \u201cgo to sleep\u201d and the only way to cut it back on is to power cycle.  Other than that I love it.", "Beautiful screen! Awesome price but full of bugs. On my set had to constantly unplug my tv from the  power supply to get it to come on. Worked well with my xbox series x just a few glitches here and there. No 4k 120 for the ps5 so I had to use the 4k 60 hdmi slot. I feel this tv is still in beta and needs alot of firmware updates to address system performance issues.", "I bought this tv because I wanted to try out OLED for the first time. I\u2019m glad I bought it. The colors and contrast are on point. The price compared to the competition in the same category can\u2019t be beat. Super happy.", "Everything I wanted from a controller, in an amazing custom paint job!", "The design is very remarkable great addition to the collection of Halo Series X Console Bundle it a must have.", "I love the pro controller and this one is absolutely beautiful. Must buy", "Works good its perfect for people who game hard-core because it don't ware out as fast and last a long time cheaply priced perfect for your gaming set up!", "I love the classic colors of master Chief! Looks great with my Halo Theme Xbox!", "AXYB buttons do no register unless they are 100% fully pressed in. Annoying there is no pressure sensitivity!", "This no longer available item is excellent and you should buy one, but you can\u2019t.", "Great controller love the way it feels and all the little halo touches it has.", "So far I love the feel and look of this controller. Need to wait and see how the grips hold up to give it a 5 star rating.", "I was lucky to cop a limited edition elite controller  waiting for halo campaign to used", "This game has amazing graphics and amazing levels.", "It fun for your family and if you have kids they will enjoy hours of fun", "I loved the Yoshi yarn game on the 3DS & I love the New Yoshi Yarn game on the switch.", "Great game love every minute of it fun and entertaining", "Excellent condition. Awesome game. My fiance is enjoying it a lot.", "One of the best games I've played in a while absolutely beautiful \u2764\ufe0f", "10/10, it is a very creative, thinking out of the box game, it might be a bit easy, but it is fun to and I will 100% it even if it's the last thing I do.", "OMG, this is the ultimate of fun, silly, fantasy escapism. Sit back, relax, and give yourself an hour to let Yoshi explore the hand-made world of tape, cardboard, and pipe cleaners", "Takes me back to the 90's. Thank you Nintendo! and thank you GameStop for always having great prices and what I want in stock!", "really cute game and its pretty easy for the non gamer . its great to have a son who can help you too", "I purchased several television and soundbars from Vizio from the M series and the SB38", "I purchased this OLED over a week ago along with the Vizio Elevate Soundbar for my new Xbox Series X. I truly appreciate the picture quality experience that this TV can offer. The performance of this TV and Soundbar surely surpass its price point. I strongly recommend this TV for anyone that wants the best performance for the money. I will dare to say that based on my research, this TV will absolutely rival other brands at much more expensive price points.", "I had purchased this knowing it was going to not be perfect but omg. I had to go in and change my ps4 setting for video to even use the menu settings at all. I also cannot use netflix, it won't open from smartcast but when I press the button on the remote it freezes the whole tv on a black screen. This is a serious deal breaking bug.", "I purchased this a week ago and so far so good it's to early to make a define decision.", "I wanted to buy this for long but I am a bit disappointed. I guess my expectations were high but not really sky high.", "11 months ago", "The Best: The TV offers great contrast and clarity. ", "4", "This screen is a beauty. Very sharp, good colors and decent brightness. I hook it up to my PC for gaming and occasionally have some quirks. In the middle of a game it says no signal detected and shuts off. Sometimes it isn't detected by the PC. ", "I bought this 2 weeks ago and has a great picture. It is good for gaming on the xbox series one. The only issue is the VRR does not work and has a distorted picture when I enable it.", "I love the pristine picture, with saturated accurate colors. However, I absolutely hate not being able to turn off the fluctuating luminance. The only thing that spoils a great review is the brightness that changes with how dark the screen is to increase contrast. The TV does not need it, and if I knew who the engineer was that omitted the off selection for this annoyance, I would offer him a Vizio necklace.", "The only issue I have is. I own both ps5 and xbox series x and if I use hdmi ports 2 and 3 4k 120hz I have to unplug the tv every time I turn the tv on I worked around this by using ports 1 and 4 so I'm stuck at 4k 60hz on both consoles unless I want to constantly unplug the tv for it to work but over all I love the oled tv and you have to get a polarized power cable because vizio gives you a non polarized power cable that does not fit the TV power port", "Great item and excellent condition. Works awesome!", "Very cool design, feels great and comfortable in my hands.", "This Halo Infinite Elite Series 2 controller is so awesome with the Halo theme on it, it's beautiful.  Being able to customize the controller to my liking ranging from the controller sticks, d-pad, and how short you want your trigger throw is freaking amazing compared to a normal controller.  Only con is that it's expensive, but once you open up the whole package and unboxing experience it is well worth the price.", "Packaging was 5 stars alone but the feel and customizability of the control and the design made it over the top and it came with the full game download", "Love this controller glad GameStop pro was lookin out and it came in a decent time", "The Microsoft Elite 2 Pro Controller is perfect for the console gamer of any level. The fact that it\u2019s the Halo Edition makes it that much better! I love the controller and I\u2019m glad they came out with this limited edition.", "This is a piece of art, amazing!", "Very well design and heavy feeling, it truly makes you feel like you have a better-quality controller compared to the regular Xbox Series X controller. Would recommend to any gamer specially Halo fan!", "This was my first elite controller and I love it, it\u2019s definitely a game changer and looks beautiful.", "The controller is great but I am experiencing stick drift just two days after receiving it.", "Awesome, love this character! Love the whole game!!!", "Excellent for a relaxing time. Can be challenging if you want to %100 every level.", "Fun and exciting game if you like Yoshi and his classic games", "The game is adorable, the music isn't ear-splitting, and the levels themselves are fun. However, it ends up becoming a chore if you intend to 100% the game with multiple scavenger hunts per stage with a flip-side that is dedicated to finding three dogs under a certain amount of time for the full reward. Ultimately, it's cute and full of heart, but is not recommended to just sit down and 100% in one sitting. It's quick, easy fun enjoyable in small bursts either alone or with a friend.", "I\u2019m not a big gamer. I was so excited when this came out I had to get it. I guess I just expected more", "Nostalgically entertaining and unique 3D adventure that will make it hard for you to put the controller down", "Bought this game for my 12 yr old's birthday.  He really likes to play in multiplayer mode with me.  Definitely fun bonding time!  So far it has been fairly easy to finish each section, without being too easy (working together helps).  I do hope it gets a little harder as we get a little further in.", "Good to see Yoshi on the switch, but it is a slight step down from Yoshi\u2018s woolly world", "Truly amazing. The art style is unique and the gameplay is equally fun as it is relaxing and rewarding.", "I got this game so me and my gf can play together. Its fun and quirky but gets challenging", "Some folks didn't like this game....thought it didn't measure up to the original or Forged Alliance. Boy, are they wrong! I thought this game was great! Maybe the tech tree is a tiny bit smaller, but the game more than makes up for it with new, cool units, great graphics and effects, and awesome explosions. In fairness, I was a little perturbed that that more than one engineer cannot build on the same structure, as in the previous games, but then again, the structures go up pretty quick. Happy hunting!", "Great game. Nothing bad about it. It has many great features and story mode is cool. I think it is awesome.", "This game, in my opinion, is WAAY better than C&C and is very good in gameplay and everything else. Some people say that he storyline is horrible, but that doesn't really effect me since I just play on the skirmish and online. The story line isn't really a big concern. I just play it when I'm bored.", "The story is extremely slow and confusing until you get later into it. It forces you to play as a certain faction first, then another and end with the Cybrans. You should definitely try out the originals, they are ten times better then this. Overall, the gameplay is about the same as the last game, the graphics are much better and the sound and music is again amazing. However, the story development needs more work.", "alright here comes the best game eva, anyway herz a shout out to all of the peeps that think this game is the best eva u rock 4 ur good reviews. anyway the graphics might not be as good as the first but the graphics to me doesn't matter at all since the campaign is awsome and a good storyline. along with the campaign the units and multiplayer maps and experimentals and ect. but i honestly i think the unit count is very low there should be a higher unit count because people have things to do units to make and probably alot of them too and places 4 them to go like in others bases and stuff.", "This game is the absolute best RTS game you can play. And I have played alot of RTS games, so I know what I'm talking about. This game has very good graphics, and they will be even more enjoyable the more you paly the game, considering that you notice things like shadows cast by the terrain, and details such as distortion coming out of a walkers exhaust pipes. This game also has an amazing command system. There are more controls and options you can use to make your army do anything imaginable. This game also includes extra experimental weapons, which they balanced much better than on the first one, and actually have a general purpose rather than to walk into the enemies base and kill. And most people have heard that the nukes on the second ones are pitiful compared to the first. The difference is that on the first one, it was a bright light and smoke covering a large area of the map. On this one, it might be only a little bit smaller, but it is insanely detailed, in the fact that an extremely large portion of the map gets lit up in red, and things are actually moving with the explosion as they would in real life. When it touches water it makes steam and jets it into the air, so nukes on this one are much more enjoyable to watch, regardless of what you've heard. All in all, 10 stars.", "I don't know why people don't like this game, because if you like real-time strategy or RTS, this is the game to get.                                                                                                                                                                                                      I usually only play online and play skirmishes to get better or if no one is as good as me because I can destroy anyone.                                                                                                                                                                                                  I am a veteran at Call of Duty Modern Warfare 1 and 2 so don't try and kill me or fight me.", "What Gas Powered Games have done here is amazing, this game is packed with more units, new features, less glitches, and a lot more excitment. what i was really taken with is that there is no +mass or -mass anymore, its all based on real numbers. the tech tree feature is amazing, allowing you to upgrade old units to make them more lethal later in the game. a lot of the good things are still their like the cybran ships being able to crawl onto land. however, the story is disappointing, character extremely lack any sort of personality and emotions. also, for high end computers, this game has surprising lower graphics, units like the UEF titan look a little bit more like legos, even though some units have good deatil, others are flat out bad, although you have to appreciate that they are trying to let computers with lower hardware able to run this game. online play and skirmish mode are fun.", "\"Supreme Commander 2 is different than it's \"\"predecessors\"\"", "2 player fun for dad and 10 year old. Replay value is high with extra modes after completion.", "My son been waiting on this game for a long time. But he got it now and he love it.", "I'm in love with everything from this game and I appreciate the replay value as well. You can go back to a level and find new tasks/goals", "Brings back so many memories, I absolutely love this game.", "It actually looks crafty and there is so much to explore and you can", "The cutesy graphics and creative levels definitely added to the child-like wonder and fun of the game. Even the creepier levels were cute, but still gave you goosebumps at the same time.", "I like the simple creativity, nothing too over the top just very creative. It\u2019s sort of too easy so it\u2019s something to pass time with. Overall a good purchase", "Fun imaginative and challenging at times great deal of replay ability", "Fantastic game! The level designs are inventive and memorable.  I haven't had this much fun with a game since the days of the NES/Genesis!", "This game is so much fun.  You can easily run though a level or you can take your time and find all the hidden things.  I love to play it and so does my daughter!", "I\u2019ve been very hesitant to upgrade to an OLED because I couldn\u2019t justify the cost. But when Vizio jumped into the OLED market, I was very excited. Other brands\u2019 \u201cbudget OLEDs\u201d cut corners, whereas Vizio\u2019s track record with reasonably priced premium TVs is outstanding.", "0", "This is my 3rd Vizio TV. 1st OLED. They are all 5 star products!", "Easy to set up, to program, and assemble. Smart TV is very convenient.", "I bought this TV right before Thanksgiving and have enjoyed it ever since. I wanted a Smart TV and this did not disappoint. I bought a smaller one for my bedroom.", "As the title states, the picture is good, as expected. The only downside so far is that there are SERIOUS handshaking issues between this tv and my PS5 console. Sometimes, Ive got a black screen, and must reboot the tv to get the PS5 display to come up. Also, the tv menu will lock you out of several key picture adjustments during PS5 use. With some adjustments to the firmware to fix these issues, this tv would be nearly perfect.", "I haven\u2019t had an issue with this television like others. From what I have read, most issues are about gaming compatibility. 4.7 / 10", "Severe Issues with settings. None remain when set, audio passthrough is a nightmare. Motion settings are impossible to turn off for all HDR formats. Doesn't handle 24p content well from anything other than blu-ray source.", "This is my fourth Vizio tv and they just keep getting better. Bread brand and quality product.", "I am very pleased with the quality and picture on this TV.  I was disappointed that the streaming software runs at 720p since this is a 4K TV.  I added a 4K Firestick to resolve the issue.  Otherwise I am very happy with the design and function of this TV.", "I bought it about three weeks ago, and sometimes I am impressed with the crisp colors produced. There are times not so much, I  was watching something on Netflix the other day, and all the color except red looked good. The red color was like pigmentated almost as if it were a hole where ever there was red. I also noticed that when streaming sports live action it blurs a lot. I  am not sure that isn't the feed, but it is annoying.", "Extremely great controller! It's my first pro controller and I loved it. The design and color make it complete. Had to get used to the paddles on the back, but afterwards it made doing certain things in games easier!", "Beautiful controller! A must have for any Halo fan!", "Right joystick jumps and feels stuck sometimes. Paint in that same joystick that is gunmetal is gone and when the stick is rotated you can see the silver beneath. Wish I could have returned, but with how these are gone everywhere I don\u2019t know how I would have gotten another one\u2026", "Great design and awesome feel. This controller would be perfect if not for the horrible quality control issue Microsoft has on their controllers. Mine had stock drift, a messed up button, and a bent paddle, so I\u2019m waiting on a replacement. Fingers crossed.", "A controller worthy of a spartan you'll never play the same ever again with interchangeable thumbsticks, d-pad and mappable paddles you'll be unstoppable in any engagement.", "Happy to add this to the Halo collection! She\u2019s a beauty.", "Solid feeling controller. Love the design and halo theme of it", "Multiple parts that can be swapped. Comes with an in game code that gives a weapon charm", "Best controller ever. Toss a Halo Infinite skin on it makes it that much better. Recommend to anyone.", "Thumbstick issues straight out of box. Had to send back to Microsoft to exchange for working one. After that it\u2019s wonderful. More of a quality control issue on Microsoft\u2019s end than gamestops fault, however when I reached out to GameStop about the purchase I was told they didn\u2019t have any to replace it with. Just a general pain in the butt just for me to get a working product that I paid a lot of money for.", "Typical, classic, Nintendo fun! Challenging? Not very. Enjoyable from beginning to end? Absolutely!", "Super fun, a lot of challenges and game time. Since I bought it I haven\u2019t put it down.", "Not a hard game but a good one to relax and play after work.", "If you like yoshi, you can\u2019t go wrong here. Game is a masterpiece and provides decent challenges for even the seasoned gamer.", "More whimsical Yoshi fun that innovates on the last game without changing what we know and love.  A bit easy but still fun & heartwarming.", "Fun game, but too short.  Beat the game after only three days of casual play.", "Yoshi\u2019s Crafted World is fun and a bit challenging.  My 10-year-old loves it and I can play it with him.  Yoshi!", "Really adorable game with an imaginative landscape. This game is cute and colorful and fun for all ages. Collectibles could be a little more satisfying however, it doesn\u2019t ruin the game. Developers did a great job but the game should be priced about $20 lower.", "A fun platformer with charming visuals, interesting puzzles, and a good level of difficulty!", "An extremely fun game not only for my little sister but for me too! Easy enough for her to enjoy but it has some challenges that allows me to have fun as well.", "Oled makes a big difference in the sharpness of the picture and it can be watched from an angle.  Very happy with my new TV", "\"I bought the 55\"\" for the bedroom and at this price you cant find a better Oled. Im was a Sony guy but now I dont have to pay the premium to be lol. Finally a company that is challenging the big dogs and winning!!!!", "I realize Visio is new to OLED and this is their first go at them .., that being said, this tv has potential and I knew saving money over LG would come with some growing pains. I\u2019ve experienced several anomalies that required a power cycle to correct. Some of those issues were sound no video on all inputs (including OTA & web channels), syncing with true 120fps 4K sources. ", "Some features are missing and broken but when it works its great!", "I\u2019ve had this tv for almost 2 months and completely happy with the performance and picture", "I\u2019m happy that I made this choice. I sincerely hope this product lasts more than 15 - 20 years", "Great picture lack of updates. Need support for 1440p and Vrr 4K 120. Also android fully baked in", "This TV is my first oled.  The picture is breathtaking but the television itself has some problems.  Sometimes the television will not connect to the smart cast. Sometimes the TV will not even power on without having to pull the power plug and plugging it back in. But overall I am happy with this television. We have been promised all these things to be fixed and a future firmware update. Fingers crossed.", "I was a bit nervous buying this set being that Vizo just started making OLED's. I can tell you know after I have it in my house. IT IS BEAUTIFUL! I can not believe the qualitly of the picture. I have this set  in my main room and we have a gaming 4k TV on the same wall. Side by side this display makes the other 4k look cheap (btw... the other set is a high end display made for gaming).", "so glad I decided to spend more to get the OLED. Picture is the brst.", "This is my second series 2 elite controller. The first worked perfectly but this one looked so awesome that I had to have it! The only issue is that the R thumbstick is a little sticky when pushing to the L. No other direction, only the left. It is like there is a bit of resistance I have to push through before it releases and goes to the left. My first elite series 2 controller doesnt have this issue. It hampers FPS games a little, but not terribly. Otherwise a great controller and terrific looking product if your a Halo fan. I'm just a little bummed about the aiming thumbstick being slightly off.", "The Elite series 2 was already the best Xbox controller, now has an amazing look.", "controller is awesome. but my Y button doesnt work all the time. its very frustrating.", "Work as great as the original Series 2 Elite Controller but that Halo detail. It was great to find a code inside that gives you a weapon charm that look exactly like the controller.", "Beautiful controller. If at all possible, why not buy the limited edition controller for a small amount more. Im a huge halo fan, so getting an extra controller in this caliber of beauty was an easy choice for me. Elite controllers are an amazing controller for sure, which is part of why there is too many reasons to get this controller, really.", "Like many Elite 2 controllers, this was totally unusable out of the box.  Stick drift was suuuuuuuuuuuuuuuuuuuuuper bad.", "Love this controller. The attention to detail is out of this world.", "Great elite controller for a supa halo fan-very stylish too", "Very cool and feels really nice and comfortable in hands", "Its absolutely beautiful! Great controller", "I loved Yoshi\u2019s Wooly World, but this game came across as very childish and no real goal that you are trying to reach.", "There's so much replay value with this game.", "Awesome game.  Little less challenging but that doesn't take away from the enjoyment of the game.  Highly recommend if your into Yoshi island style games.", "Great game but kind of easy compared to Yoshi\u2019s island", "Single player is tons of fun. Nothing sticks out as being bad other than being a little too easy for mature gamers. Co-Op is a jumbled mess of accidentally getting  stuck on people and losing your eggs unpredictably.", "Pretty fun typical Yoshi game that offers more variety than usual, still not Yoshi\u2019s Island levels but pretty good nonetheless. Worth my money.", "Once you get past the cuteness factor of the game, you'll find a very fun gameplay experience. Controls seem very responsive, and the 2 player mode is loads of fun and laughs. Great game to introduce a young child to gaming. A great addition to the Yoshi themed game library.", "I haven't been a huge fan of the series since it is a easier version A Mario title but this game has been surprisingly fun", "It\u2019s so cute. I love Yoshi.  This version is built using craft materials and can get quite challenging!  I love how detailed the graphics are! Fun, fun, fun!", "Great game and fun but unlocking different types of Yoshi\u2019s with yarn in the last game was a lot better than the costumes concept.", "Got my package, installed it and got a STEAM POWERED program that starts itself every time I start my computer [no option to turn that off] and emediately takes me to thier online site with only options to buy games. The was NO GAME on the disk. No information saying that it is an Online game only [no information saying it is even an online game on thier site.] I tried to check out the Forums, registering for thier forum kept takeing me to other sites. These other sites required me to reister. This repedative nonsence went on for 4 diff registration that finnaly returned me to the STEAM forums. Unfortunately I still wasn't allowed to access thier forums.  No tech support, no contact information ,no game.. No reason to even consider getting this product.", "I own both Supreme Commander and Forged Alliance and find both games superb. When i head there was a Supreme Commander 2 coming out of course I ran right out and got it. I can honestly say this is one of the worst war games period. My reasons include the fact you must unlock a LOT of stuff to even consider playing the quick battles. There's only 6 maps, yes i said 6. The fact you cant even choose what side you want to be on until you unlock the ability, and the WORST part is you cant even see a simple overview of the maps when you are selecting them your basically better off throwing darts at your comp screen to decide what your gonna do rather than actually getting to decide anything at all about the battle ahead. The point I'm making here is don't Waste your money... This game isn't even worth getting if it cost 2.50.", "played it today and i've never played a better RTS. im lovin it every step of the way and although its a little bit more 'cartoonish' than the last one, its still definatly a fun epic story lined game. it beats AoE, UaW, and matches EtW, and C&C. i really love playing it and my slightly old system can handle it perfectly. i was a little disappointed, i though the requirements would be a little higher and i definatly see a decrease in the quality. overall, 8 out of 10. AWESOME game. right now, im a little concerned with the new unit the cybranasourus rex (yeh, i probably spelled that wrong) it seemed a little like an out of place character to be put in the game. its still a pretty cool unit and theres so much more upgrade. the most important is the eco that they had. the last one sucked and was full of glitches. this one is MUCH more stable, its brings the good parts of halo wars and not the sucky parts (because seriously, halo wars sucked) buy NOW", "The frist two games of this year that I was waiting for were Supreme Commander 2 and C&C4. Both are god awful. Supreme Commander 2 is missing the best elements and nuances of it's two predecessors. I actually think that TA was the best of them all. Sad that games just get worse and worse as they come out with new titles. What happened to the unit types??!! There is not nearly as many unit types as SC or TA. Plus, what happened to the recycling of plants and rocks... the environmental resources you could live off until you got your resource production up and running? And why are there so few multiplayer maps?  I have an idea. Take the Total Annihilation engine, give it some new graphics,new sound, a new story line and new unit types... and don't change anything else...", "Don't know what the other guys here are talking about, the game is great, ya sure they took out some of the things the sup com pros loved, but the thing is, more people want to play RTS so you can't expect a newbie to grasp every concept of the game, unlike the pros. If they left some of the things from the old sup com in, it would be so unbalanced it wouldn't been as fun to play for the newbies.  Alright so lets get down to buisness, the storyline is great and the graphics blow sup com 1's out of the water, while supporting older computers that don't have as good of processors or graphics card. Win, Win situation. At least thats what I think, and that is why you're here isn't it ??   They added a new research screen to simplify it and added a whole bunch of new features like building add ons and new experimentals. FYI to all aion illuminate fans, they don't have naval anymore. I know, ouch right? Well I think we'll live.  On to sound. They did a really good job with the music this time, its about 10 times better than sup com 1 and the sound effects really match up and exceed what you think they will sound like, when lets say someone gets blown up by a nuke or someones commander goes into meltdown.  For all those hard core gamers out there, the 10 hour battles have gone away, I know, sad right? Well they replaced with a shorter even fiercer model of online game play, that really seems to fit, and when I mean shorter, I mean average of two hours. You can still build those big armies just faster. One thing I wanna finish up with is the Interface. They kept a lot of the interface from sup com 1 and FA, but also added the research screen which I talked about earlier. It works like this: You need research points to buy any sort of research upgrades and those research points automatically come along, but you can build research facilities that increase the speed at which you get them. You can spend research points on things like, personal shields for your units, or new buildings, sight upgrades, radar upgrades, and new schematics for buildings and units. Big FYI for all those 360 gamers lookin at this. The 360 version of this game is just as good if not better than the PC version.", "\"Make no mistake - this IS Supreme Commander Lite. It almost feels like a very weak demo of SupCom 1, but worse. Even with the new research trees, you'll still end up with no where near the amount of units to choose from that you had with SupCom 1 and its tiers. Yeah, sometimes the tiers were annoying to work through and it took far too long in most instances to get anywhere close to maximizing your faction's potential in a single match in the first one - but this \"\"sequel\"\" has completely gutted it altogether. You'll likely end up mashing your mouse button or hotkey to churn out more of the exact same units.. over... and over... and over again because there's barely anything to choose from for unit diversity. The game requires the Steam client and an internet connection just to play. While it's true that most people these days have an internet connection", "If you like multiplayer or lan-parties add this on to the list because you get a lot of fun in that little box! There are many nay-sayers but i really don't know what the heck they are talking about. Graphics are great, simple neat menu, intense tug-of-war games because its hard to dominate players that are sneaky!... It runs great on both my desktops and even my laptop! So if you have a decent machine you can easily run this game because its not demanding at all. Very fun to play against you friends and the online is pretty intense. Single player story is good and easy to get into because you dont need to have played the originals to understand whats going on or anything. As of right now you can save $** if you buy it which makes it even more worth the money. 10/10! pick one up maybe ill play against ya!", "There were so high hopes for this game, as SC 1 and FA had left me hungry for more games like TA, yet unfortunately the wait would lead to disappointment. For those who enjoyed the similarities between TA and SC1 will be the biggest disappointment here. The economy of the previously mention games is utterly gone. No worrying about balancing energy usage and mass income with building and firing weapons, its all been removed. Its now a simple straight up, build up army, build base defenses, go conqueror enemy. Also gone are the tech levels, and weaker starting units, and teching up. Instead its replaced by research points that gradually come in much like all the other resources.  Without that element nothing really stood out in the game. Without the challenging economy, the campaign portion of the game becomes simple, build defenses, build army, repair defenses occasionally, attack enemy. Musically nothing really stood out, there may of been a couple times when I stopped to notice it, but again nothing inspiring. Storyline it also seems kinda lacking, it comes off like a Final Fantasy storyline mashed into brief conversations between 18 missions. There just simply is not enough there to make a great story, which once again left me greatly disappointed. Graphically the game was nice, and the small scale compared to SC1, meant I could actually stay somewhat zoomed in, to actually see the units, and not just commanding by click on the small icons. The movies were decent, just way to few of em to tell a good story. The game controls fairly well, being rather simple game now, its easy to pick up and get right into. Those with SC1 knowledge will have no trouble picking it up, as the mechanics are still basically identical to the first. Those used to Starcraft or C&C type games might take a bit longer but overall its not a hard game to get into or to start playing. The game probably has some strengths in multiplayer, as the unit balance does seem good, but I have not done any of that yet. Overall SC2 is not a bad game, everything seems to work, the game loaded smoothly, the game had no noticle lag, or slowdowns, but there is just nothing in it that simply makes it stand out. The game itself was fun to play through, and I did enjoy the limited story, and I may still by the sequel when it comes out (of course the ending had a cliff hanger for a sequel... what game doesn't do that no a days) yet this probably won't be a game I will touch all to often again now that I have beaten it. My suggestion is wait for the price to drop on this one if you simply want to see the continued storyline from the first, as the game offers very little of anything else to draw players away from other games.", "\"First there was Total Annihilation; superb, deep, endless strategy, constantly evolving, hundreds of different units, quick to learn hard to master. Then Supreme Commander and Forged alliance; made Total Annihilation (TA) larger with a better AI, beautiful graphics and much of the same elements that made TA great.  Then Supreme Commander 2; What the hell happened here? You took almost everything that made the first two stand alone and dominate and tossed it out the window. My only guess is you tried to dumb this game down to the likes of a C&C or a Craft game so it could appeal to the zerg boys.... probably thanks to Square's involvement. Really Chris Taylor how much did it cost to convince you to kill your baby?! Graphics went from sci-fi futuristic to cartoonish. Threw out the unique resource allocation and made it a click and buy system with a \"\"Research\"\" resource which is another Craft game move that sucks. Took out almost 60% of the different units in the game an dumbed base creation and defense down to arrow towers CRAFT again!. All the maps appear to be zerg/rush maps. Threw out the tier system... Sheesh I can go on and on but I won't. Bottom line: If you loved what made Total Annihilation and Supreme Commander unique and fun", "\"Okay, so yeah, it's pretty much like the first two in the basics: the three factions, the basic units (Some of the basic units are straight out of SupCom 1 and Forged Alliance), and one big war. On almost everything else it's completely revamped. Upgrading has been replaced with \"\"Researching\"\"", "I bought this to play my ps5 and not only thengames look great but movies too", "Waiting for the firmware update, then I can update to 5 stars", "\"Great TV with all up to date technology. From Dolby Vision and Atmos, HDR10 + etc... Perfect for gaming HDMI 2.1. I trust in Vizio products I bought a 60\"\" in 2012 and still running (2021).\"", "I purchased the 65 inch OLED 1 week ago!  The TV is beautiful!  Deep blacks & colors are great right out of the box!  You will have to do nothing to get this TV to look great.  I wish they had offered a 75 inch OLED but I am sure this will come!  Picture processing is good as well!  I recommend this TV to my friends!", "I picked this OLED Vizio for the intensely beautiful picture and I have not been disappointed. It's incredible for gaming on my PlayStation, and watching vivid shows.", "Problems turning OLED tv on. So I returned it and got another one.  The screen had a green tint to it so I returned it and got my money back. Plus the VRR didn\u2019t work.", "I love how skinny it is and how much cooler it runs, the picture is awesome!! Gorgeous unit !", "Wonderful image, oodles of features and an asking price that\u2019s within  reach of the average consumer, what more Can you ask for.", "I\u2019ve always liked Visio. My first 50\u201d had one backlight diode burn out after 7yrs heavy use. Replaced with 50\u201d nano Visio. I was happy with the upgrade. Figured I could get a 55\u201d within the space constraint I had. Got this one as open box. And WOW! The picture POPS of vibrancy and consistent brightness.", "I got this TV 3 weeks ago and so far I love it/ easy to operate/ easy to hook up other devices to it //Great TV", "Beautiful controller. I only changed the D-Pad and still calibrating but it is perfect.", "Glorious equipment for slaying all who oppose Spartan 117!", "I got this as a gift for my boyfriends birthday. I don\u2019t play Xbox and I\u2019ve never played halo but I was completely BLOWN AWAY by this controller. It feels amazing I think the way it was designed was incredible and totally worth the money. My bf LOVED it and made me consider becoming an Xbox gamer.", "This controller is amazing and beautiful I\u2019m glad to have it", "Love the elite series 2 controller and with a halo paintjob.... it's almost perfect. I kinda wish this would have included the updated series x/s share button but that's a minor complaint. With the latest xbox update, it's now able to quickly connect to 2 paired devices which is probably the best feature of the updated series x/s controllers so I'm happy with that. If you love Halo and were thinking about getting an elite controller, this is the one you want.", "Its similar to the regular elite it just feels lighter quality feels slightly better and it looks so hecking cool in person so many details that the pictures dont do it justice", "Performs like you expect the Elite Series 2 to do so, but with the added benefit of looking wicked. By far the coolest controller I\u2019ve owned. Hopefully it will keep nice and not develop rub marks from fingers.", "I had the series one which still works great, but decided to upgrade for the better paddles and internal battery. I am very pleased with this product not only because its Halo but it does feel like a substantial improvement over the previous generation. I'm still trash though...", "Great for Halo fanatic.  It weighs a lot more than your standard controller.  Bought as Christmas present for the Halo fanatic.  Splurged on the 2 year warranty just in case too.", "It\u2019s a great looking controller but without the console to match, it will be lonely. Very hard to pick up the items you want unless you want to pay ridiculous prices from scalpers who seem to get these items with ease. But still a great looking controller.", "Pretty simple game, great for younger games, way too many things to have to collect.", "Good game. kinda on the kid side of game, my kids like it.", "Game is great for parents to play with their kids.", "Very fun! As someone playing through sekiro, this was a nice pallet cleanser.", "I had an open mind when deciding to play this game and after clearing the first world, it just wasn't for me. Compared to Woolly World, this game was lacking in several departments; the music was repetitive, the skill level was far too low even for just the first world and the game doesn't reward you nearly as much as Woolly World did in terms of amiibo. I'd recommend this for die-hard Yoshi fans or kids age 5 through 9.", "The kids (6 and 3) love it. And I love that they can play together. My 3 year old doesn\u2019t know what she\u2019s doing but my 6 year old helps her. Yoshi\u2019s crafted world game is also fun for parents :)", "Simply amazing. My son and I are loving this game. It's so creative and well thought out.", "So much fun! For all ages! We have from age 4 to 34 who love to play.", "Bought this game for my son, but i enjoy playing it too.", "My family and I really enjoy using the Nintendo Switch and I must say this is by far one of the best games ever! Super cute yet challenging at times. There\u2019s a gum ball where you can insert coins and collect costumes. There\u2019s also a flip side to the game where you interact and catch little puppies. Just when you think you\u2019ve completely the level there\u2019s other mini challenges like a scavenger hunt. You should purchase this game you won\u2019t regret it!", "So far I've enjoyed playing SC2. there are a handful of differences between it and its predecessors both good and bad, The battles aren't as big as the ones from Supreme commander, but they are still brilliant, the new research is fun, as well as expanding buildings with tactical add on pieces even if they are minor one's, and the fact you can replace your ACU without permanently losing it now, and the new upgrades for the ACU, and units. Most of the cons I've found so far are, requiring steam, the smaller battlefields, and other minor problems which may be fixed eventually in updates. It lacks the feeling of the original game but its still fun to play I'd recommend to everyone that they try the demo on steam first before deciding. Overall I rate this 7 out of 10.", "First off, you need to have Steam installed on your computer. Thanks for the heads-up on this Square. You buy a hard copy of the game but then have to log in to Steam to download it from their servers.....really? Some people are showing a 9 hour wait time to be able to play. Again, really? Second, they destroyed the economy and the basic gameplay of the original game and its expansion. None of it even matters any more. Its just a zerg fest. Most people think its due to the console being added to this title and thereby attempting to expand their market. They broke what made the first game such a huge hit. Gone are the days of epic battles for my 3rd point. Maps are now 5kmx5km. WAY too small. Fourth, you can't save/load in skirmish play. Soooo, if you have to leave in the middle of a longer lasting game (not real sure how this will happen being that everything is so small-but want to give them the benefit of the doubt for future content added updates), too bad. Can't save. Fifth, the voice acting and story line for the campaign is just plain stupid. I guess I could go on but I'm sure I've expressed my opinion enough for folks to understand where I'm coming from. This is just insulting to people who have been really looking forward to this title. There was a reason the first game was as much of a success as it was. Well, Square Enix effectively threw that out the window and scrapped it all. Good job.", "I haven\u2019t used it yet but the unboxing was amazing. This is a really nice looking controller. It really feels right.", "This controller is GAWGEOUS!!!!! I love the cosmetic design of it, the rubberized grips, the back paddles and the accessories! It comes with it's own wireless charger, interchangeable analog thumb sticks, and D-pad. The design is reflective of Master Chiefs armor. I LOVE IT!!!!", "Amazing controller well worth the money solid feel and looks fantastic i want to buy a second one already", "It came broken\u2026. Stick drift on the right thumb stick right out of the box.", "Quality feel and looks awesome. Also arrived early on the 15th was shipped next day air.", "Exactly what I was looking for in a controller and the Halo fan in me loves the Halo theme on the controller", "Its good just sucks how the bumpers dont like to work sometimes its vrandnew", "Beautiful controller (just need the console to go with it). GameStop packaged it well and sent it super fast. It actually arrived prior to release date. Now I just need the console!", "Great controller that feels better than the standard ones. Paddles are useful in gameplay and the color scheme is great. You also recieve a code for the controller as an accessort in Halo Infinite.", "High quality packaging, nice dock and very long usb-c cord. Even the packaging was superb. Everything was secure to make sure nothing would be damaged in shipping. It is very true to the pictures and works great!", "I had no problems after mounting the TV and the set up was a breeze", "Had this TV for a month now and it's worth every penny. Don't listen to all the negative you've been hearing about Vizio. They have done a really good job with all their new high end televisions.", "I just bought this item and am so excited to watch sports and movies on it!", "Compared to the LG CX and Sony A8H the picture quality is way better than Sony's OLED.  THOSE Reviews online are biased and not accurate IMO.  Not a fan of smartcast yet over android TV. TV Has some firmware glitches.  Sound from TV speakers is OK not as nice as the Sony's; however this is a one Heck of An OLED with no black Crush....", "We were looking at one but am the type of people who wi only purchase an item like this when the one we have goes bad. Now the old one will go into the basement.", "The best \u201cAmerican product 100% costumer satisfacci\u00f3n  guaranteed", "I bought this tv and set it up at home but it was quite obvious to me that the feed I was watching on this tv in the store was optimized for the tv for better picture. At home however, it was grainy and looked like motion flip art like the one you draw and flip through. The tv was so hot I thought I bought a hp laptop.", "This was my wife\u2019s and my anniversary gift to each other. We regularly watch movies, and we are amazed at how the cinematographer\u2019s vision is articulated with this tv.", "I\u2019ve had this TV for about a month of movies and gaming, couldn\u2019t be happier.", "The image on the tv is fantastic and the sleek slim design gives it that pop aesthetic that the \u201cworld\u201d within the TVs borders is almost life-like to the touch.", "Great controller! Only wish I had the halo Xbox to go with it", "This is the elite series 2 but they did an excellent job with the halo theme. The best controller with now an awesome new paint job.", "Fun game, really nice visuals. It's an easier platform so more people can enjoy it, but seasoned gamers will like the collectables available, which give replay value to the game and a bit more challenge.", "One of must fun Nintendo games I've played in a long time.", "Nintendo does it again with sweet crisp graphics and my kids love yoshi", "If you enjoyed Wooly World, you'll love Crafted world. This game is a great addition to the Yoshi series and adds fun mechanics unique to this game. It does have a 2 player mode and would be fun to play with a less experienced game. Overall presentation is great, control is simple, and platforming is fun. Nintendo game prices hardly comes down, so if price is a factor, pre-owned with PowerUp Rewards discount really helps mitigate the cost, and maybe invest those points. Either way, top notch Yoshi game and a must play for Yoshi fans.", "Great fun, reminds me of Yoshi's World from when I was a kid", "Love the extras each level has. Not a fan of yoshi smash level but in general love the game!!", "This is a proper modern evolution of the Yoshi formula.  Giving you access to the fore- and background when throwing eggs adds an extra dimension of exploration and the collectibles are definitely worth getting.  The flower requirement to progress to new areas is rarely difficult to fulfill, but it emphasizes the collection aspect in a game that gives you a lot of tools to do so and is chock-full of stuff to see.  If you've ever loved playing a platformer, you need to play this game.", "A few weeks before the game came out I downloaded the demo just to see if my six year old son was going to play it and he and when the game came out I got it for his bday and he have not put it down", "Great game! Side scrolling puzzle solver better than I anticipated and can\u2019t put it down. There is a gum ball machine for different costumes ADDICTING haha", "Yoshi\u2019s Crafted World is an amazing game! It is beautifully designed and appropriately challenging. The ability to play two players is also great as my wife and I like to game together. I would definitely recommend it to anyone who owns a switch, especially those who want to play some couch co-op.", "Bought this for a Christmas Gift for my husband and myself. ", "1 year ago", "Got this in time to have it up on the wall Christmas day. The family loved it!", "The app sometimes glitches green and I need to power cycle yhr TV to work right. Also, I can't seem to download other apps that seems to be essential. Example Crunchyroll.", "Bought the TV right before Christmas - just amazing clarity and color", "Excellent picture quality and very easy to set up!", "\"About 10 years ago I purchased my first Vizio 54\"\" just months after its release.  It held up well until one day it just didnt turn on.  Lights on", " when clearly the Amplifier is sending signal.  Looking forward to a future firmware to make this TV absolutely perfect!\"", "Very nice picture, nice sound, but, the OLED effect can cause severe headaches in certain people.  There should be some form of medical warning and available solutions.", "I purchased this 3 weeks ago and I love the picture quality. After contacting the boae surround  system its like you your in the movies! Great job vizio.", "I just bought this TV, did not plan on spending this much. This TV is worth every penny. The color is so vivid. Model is sleek and so much thinner than LED.", "I bought this one month ago and I'm glad I did this model.", "My son loves this game. Like Super Smash Bros with Kung Fu Panda characters.", "I got the game through PS Plus, and I was skeptical at first. However, after playing it with my friends for a little bit, it was some of the most fun I'd had playing a game ever. It's no Citizen Kane, but it does its job as a fun, simple fighting game well.", "We Bridges this for Christmas for my nephew everyone had a good time playing", "I bought this game for my grandson and he absolutely no loves this game...", "I bought this game for my daughter because she\u2019s very competitive. We thought it was family friendly but it\u2019s very hard to learn different moves. I had a hard time playing it also and I\u2019m good at playing games.  It\u2019s not the easiest game to play and in my opinion its not for kids either.", "My 5 ear old loves this game.  Controls are simple and each fight location has their own challenges.", "This game deserves 10 stars but I was only allowed to give 5. It is definitely better than smash. I think it should win game of the year.", "I sew the trailer and it was ok not the best and characters were alright. I heard that there was a lag in the game  but over all i give it 2 stars", "another super smash clone but horrible one at that", "i wouldn't buy this game if it was free. i dislike the game's audio and lasting appeal. so bad my children couldn't even bear it", "I have a LG OLED TV and I wish I waited for this TV. I'm very pleased. I hope the update will fix the power issues. I have to turn on multiple time before the picture would stay on.", "I\u2019ve had my VIZIO 55\u201d OLED for about 3 weeks. Clear picture from any place in the room. Color is so much better than the TV I replaced which was a VIZIO LED 55\u201d TV.", "Other than the Smartcast being a bit buggy, the picture is spot on!", "i have been facing multiple issues from the time i got this TV.", "Have had it for two weeks, perfect picture and great design. Loving it so far, great price for all the features and crystal clear picture. Just wish it had a HBO Max app preloaded in the main menu, but very easy to cast from my smart phone or iPad to the TV", "Vizio has stepped up their game, going head to head with the LG and Samsung on this one.", "Finally, someone has made an OLED TV that I could afford!", "Well worth the price. I was sold on the fact that you can see definition anytime there is a night scene and it\u2019s not just blurry.", "The colors are incredibly vivid, even with a standard HD signal. I also love that it has screen mirroring for my iPhone along with a bunch of other viewing options.", "Just had this installed yesterday the BestBuy's Geek Squad. Also installed a new sound bar. The picture is amazing and we are looking forward to seeing many of our favorite shows in a whole new light. The remote will take getting used to, but we'll learn. I wish there was an app for PBS installed. We'll have to see it by AirPlay.", "When the game trailer is a rip off of super smash bros, you know its going to flop. the chrachter selection is poor and the gameplay is choppy. I need my 20$ back...", "I really enjoy playing this game. It is fun and enjoyable for all ages.", "The game is cute but hasn\u2019t held my 6-year-old son\u2019s attention. He has beat Donkey Kong Country, Super Mario Odyssey, and SupernMario Deluxe. He only played a couple of levels of Yoshi and hasn\u2019t went back to it, over a week later.", "This game is similar to Yoshi's Woolly World.  The levels are made of things like cardboard, ribbon, straws, and construction paper.  Each level can be played in a normal mode or a reverse mode.  There are cute costumes you can unlock using coins that you collect throughout the levels.  It's a perfect game for parents to play with their kids.", "Got this for my 2 sons they love & have a lot of fun playing it together", "The game is wonderful to play through. Fun levels, extras, cute outfits, and even an easy mode for younger players. Just dont try to get everything, or you wont have a good time.", "This game is super fun and adorable. ", "This seems more like a kids game but everyone will enjoy. It\u2019s very entertaining but not very stressful. It looks so cheerful and colorful. And who doesn\u2019t like Yoshi with wings.", "Fun to play while letting those who want a challenge to be able to spend time to complete the game", "While it's easy enough for children to play, that doesn't take away from how fun it is for the whole family. Levels have a decent amount of replayability, and it's decently challenging in a casual way.  Would recommend to anyone.", "Fun game for kids and adults. More relaxed then Mario and very kid friendly!!", "Bought this on Black Friday after reviewing 4-5 other LED TV's.  I'm so glad that I did.  The OLED experience is simply stunning.  My previous TV was a Panasonic plasma which I held onto as long as I could because I didn't want to give up those deep blacks and contrast.  This TV has such great contrast - for example when you watch a dark scene with isolated bright spots (like lamps, office windows, etc) it will blow you away how bright those spots are against the deep black surroundings.  The panel is made by LG and you can get the same performance for a lot less money.", "I bought this a couple of weeks ago.  Easy to install and set up.  Fantastic picture!  We love the smart cast and look forward to our elderly relatives coming over.  We can FaceTime our loved ones and airplay it on the TV and everyone will be able to see.", "I love the tv but am on the fence on returning it or not. Fix everything people are complaining about. Also 1440p needs to be 120hz. Theres no reason why it shouldn't be. Get it together please", "I have a long time history of purchasing Vizio Television and each time of purchase I have upgraded having said that Vizio has shifted in the best way. Awesomeness!!", "\"I had a Vizio 65\"\" LED TV that I thought was still pretty good but I was intrigued by OLED. The set I bought looked great in the store and even better at home. And that's on everything", "Great picture quality and very easy to set up. Would highly recommend.", "This is the best tv I've ever owned! The picture quality is amazing! I don't have enough words to express how happy I am with this TV.", "Bought the oled Visio over the Samsung q series. Very happy except sometimes the input switches from one to another happen 2 times", "I set this TV up less than a month ago and still going through all the apps and everything it can do.", "I really want to love this TV. The picture quality is amazing. The smart cast interface is solid, and it's all packeged under an beatable price. ", " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "3", "Really fun 2 player game that seems well balanced. It looks great and feels rewarding to go collect stuff. It's really nice that the game seems to avoid many the co-op deaths that I'm used to in new super mario bros u deluxe and yoshis woolly world (we jump or egg each other and fall to our deaths).", "Its a deep 2D game with an interesting spin on yoshi island. Nintendo always amazes me with the great graphics with thier titles. Gameplay is smooth and overall fun is better with my wife.", "Simple, super fun platformer that\u2019s perfect for kids or couples to play!", "Great game for small children and entertaining for adults as well", "Great games for kids and parents to play together.", "Amazing game. Graphics are too cool. They're made out of cardboard, bottles, etc and the two player is fantastic. Highly recommend.", "I bought this game for my 8 yr old autistic daughter and she absolutely loves this game. It is her first video game bought soley for her and she just took right to it with no issues at all. For other games she has played it has been difficult for her to grasp what goes on on the screen and how that associates with what she is doing on the controller such as constantly running into walls on mario kart because it was difficult to for her to figure out how to steer but no such issues with this game and she absolutely loves it.", "It's sooo cute!! The levels are adorable but still challenging enough if you want to get 100%. My new go-to game for destressing~ <3", "This game is super fun and brings out the kid in me. Each level has multiple challenges, making the game seem like neverending fun. The voices are adorable and the choices are plentiful. Great game, highly recommended.", "It\u2019s a really relaxed game that you can pick up and play anytime. The graphics are amazing and unique. Overall, I\u2019d definitely recommend this game for anyone who is a Yoshi fan.", "Me and my 5 year old really enjoy this game, if you enjoy the Mario games this is one you can add to that list.", "An incredibly fun sequel to Yoshi's Woolly World.  Amazing graphics!", "The game is fun, and the graphics look great, some levels are hard for a children\u2019s game, but over the game is great.", "This game is a crafted masterpiece! The level of detail is gorgeous. Gameplay is a throwback to the classics while maintaining a modern feel. The two player mode is unique and available right at the start. The game is great for all ages and incredible for a good time or a family game night. I highly recommend this game!", "Entertaining game for all ages.  The levels are relatively easy to pass but become challenging if you are the type of gamer who goes for 100% completion.  The colorful graphics also help add to the fun nature of the game.", "Great game for me and my kids ages 6, 4 and 1. They can actually play it on their own and love it.", "Cute game. Just as fun if not more than Wooly World was.", "\"Whimsical, light-hearted platformer. Densely packed stages filled with collectibles, secrets, and uniquely beautiful art designs.  Tons of content adds replay value to keep you playing long after finishing the six to eight hour \"\"main\"\" adventure. Definitely a worthwhile purchase", "If you like the gameplay of Yoshi\u2019s Island, the art style of Yoshi\u2019s Woolly World, then Yoshi\u2019s Crafted World is the gamefor you... and the family!", "Sort of short, aimed more towards kids...but if you love Yoshi and want something to sit back before bed and relax and play, this is your game.  So charming, so chill, so Yoshi.", "Just bought tv a while back moved to the new house and now it won't turn on", "This TV replaced a smaller, older VIZIO I bought back in 2011/12. Was not looking for an OLED, but went with it since the price was so good. I could not be happier. The picture is GREAT. Everything we watch has looked amazing on it.", "The picture is exceptionally light and bright where it needs to be but the infinite dark reminds you it is an Oled, this tv IS IN a class of it's own!", "About my TV last month I love it love everything about it", "I am pleased with the quality of this unit. Best tv I have ever owned. Oled is off the charts, the colors pop and deep rich blacks. I'm creeping up on retirement and I didn't want to buy a quality tv on a fixed budget.", "The picture and the Vizio surround surround speakers are excellent.  Response to the remote for adjusting sound level is sluggish and remote has few features compared to other systems.", "For the picture this has been great for the price. The reason I give it 3 stars though is because I am very critical of when the operating system is not \u201csnappy\u201d.  For a modern TV, losing of apps and maneuvering through the UI should be quick. While this is better than my old Samsung TV OS, I still expected it to be quicker.   I also hate h to r banner style at the top. My first choice should be to pick an App rather than some curated selection when so turn on the TV. I haven\u2019t been able to find a feature to turn it off.", "It's better quality than I imagined! Amazing TV!", "So far I love it! The new tech for video games is awesome!", "This is my first OLED tv and I am loving it. I\u2019ve been using Vizio TVs for years and have never disappointed me. This one is super fast and there\u2019s no lag when selecting through the apps. The lag is something I hated on my previous Vizio TVs bu that\u2019s gone now. Now just bring HBO Max! One thing I don\u2019t like and hope that it\u2019s fixed in a future software update is that currently, 4K/120hz HDMI ports don\u2019t work on the PS5. Fix that and this TV will be perfect.", "It's comfortable and works great. My only frustration is that it doesn't seem to allow button remapping. I can set it up on the switch, and the buttons are changed on the switch paddles, but this controller doesn't allow the changes. Not sure if this is a switch issue or the controller. Otherwise it is great", "[This review was collected as part of a promotion.] This controller was bought for the intent to enhance the Switch Experience, and to add some more skill to certain games. The case did arrive slightly damaged, the inside plastic was torn. but the product remained in perfect condition. It is light, but doesn't mean it isn't quality. It brought a different set of skills to games that required more then a small handheld joystick. A little throwback to the classic design of a controller.", "[This review was collected as part of a promotion.] Received to try out on our gaming system and definitely enjoy it way better then the cord controller. Having wireless is more convient as you can move better and no worries about pulling a cord out of the system. The Over all grip is very comfortable and nice fitting. Not only is it convient, comfortable but also comes designed with Mario which is many favorites of alot of people. Alot of my family complement us on our new controller for the design and now wants one or something similar.", "[This review was collected as part of a promotion.] This controller was so eay to use, and dits just right in my hand. I love the colors it comes in and connects very easily.", "[This review was collected as part of a promotion.] I like having a controller to hold onto with the switch and this one gets the job done.  Set up was easy.  The only downside is no rumble, but the added buttons make up for it.  The retro mario theme is an added bonus and loved by husband and son alike.", "[This review was collected as part of a promotion.] The design on this remote is so cool. The batteries are the only drawback but that can be remedied by just buying rechargeable batteries, which I would highly recommend.", "[This review was collected as part of a promotion.] This is a great controller for the Nintendo switch. It has a great Mario design that my kids loved! It was easy to set up and it being wireless was even better. It seems to be very durable as well. And good thing because my kids are super rough on things aspect controllers. I will be purchasing a second one, so both my kids have them to play with.", "[This review was collected as part of a promotion.] This is a review for the Nintendo Switch wireless game controller. ", "[This review was collected as part of a promotion.] The pros: *feels almost identical to the official Nintendo pro controller.  ", "[This review was collected as part of a promotion.] I have been using this controller for my Nintendo Switch for a couple of weeks now and am very happy with the overall performance of it! It is very comfortable to hold and the buttons are set up perfectly.  It being a Bluetooth Wireless Controller is a huge plus! The Super Mario Bros. design is my favorite though! It's very attractive and I've received so many compliments on it!", "It\u2019s not entry level friendly but can be very rewarding.. I struggled at first, boy it was challenging but with lots of practice and doing tutorials/training I managed to not come in 12th or 10th place.. I now place at about 6th or 4th.. Boy does not wining  a race hurt but it\u2019s the grind and constant improvement.. Could lower the difficult and turn assist on but that would take the fun out of the challenge..I then went to YouTube to see pro gamers struggling or flipping cars as well so that made me feel a little better too..", "If your looking for a real rally experience buy Dirt. The handling on this game is cartoonish. You cut and you get penalties. Total garbage.", "Very detailed graphics, challenging driving, and numerous course selections. A lot of fun for multiplayer. The only semi con is that it is difficult to select changes to your driving car... but overall a must have.", "Simply gorgous to look at and play.  It says pure simulator on the box for a reason.  If you go in expecting anything less you will get plastasized.", "Good game, need to spend some more time playing it", "This is a good one. One of the best driving games I've played. The career mode is a bit of a pain but still pretty cool.", "The WRC 8 FIA World Rally Championship is a great game to play. The cars are awesome and the scenery is breathtaking. There's so much to do! I really have lots of fun playing it. Much improvement over the WRC 7 World Rally Championship. They did a really nice job in putting this game together.", "Great game. Easy to pick up and play, at home or on the go.", "ONE OF THE ABSOLUTE BEST IN THE YOSHI FRANCHISE, WELL WORTH THE WAIT.", "Cant go wrong with Yoshi. Cute, detailed and fun. You get what you see with this game. I love it.", "Super fun game that can be as easy or as challenging as you want it to be, depending on if your thing is to 100% a game or not. Another quality release on the Switch, highly recommended.", "Not a heck of a lot wrong with this game. I like to say this is the epitome of Weaponized Cuteness. The designers did a fantastic job with level design. It feels like they actually built every level in the game with cardboard and construction paper in reality and then put it into the game, and they stick with that through the entire game. The controls are tight and the yoshis are as adorable as ever.", "Very cute! And the right amount of challenges. Great game for all ages", "We love Yoshi!", "Excellent game especially for kids and new gamers looking to learn, but still complicated and fun enough for an experienced vet.", "Really boring and lackluster. Fun platforming but not much else. Good for kids, not for adults.", "Cute game I can play with the family. I love how interactive it is. You can knock over things in the foreground and background.", "This tv has been fantastic and especially since we recently purchased a 5.1 Dolby surround system. Mandalorian looks, and sounds amazing now after getting this tv. ", "Super impressed with the clarity and color of the picture.", "Great picture and easy to use enjoy it very much!!", "Bought for picture quality and I am not disappointed. It is fabulous. I am actually surprised at how wonderful the display is in my home. Very satisfied and would buy again. If it goes on sale anytime soon I will buy another one for another room in my home.", "I am really happy with my purchase. Visio knocked it out of the park with this one.", "It's a great tv. This is my first oled and it works great with my xbox series x. My only issue is that it keeps putting itself back on warm color temp very often.", "Bought this TV a couple of weeks ago to replace a five year old Visio.  Our previous TV was top of the line back then.(240 refresh rate, etc.)  This new TV is fantastic!  What a picture!  Well worth it.", "I bought the tv about a month ago and have never had as many problems with a tv in my life. Vizio has a reputable name so of course I wanted to give the oled a try. Day one when I got the tv home it wouldn\u2019t power up. So after plugging the tv up and unplugging it a few times I got it to power up. The oled does have a beautiful picture but now every morning when I want to turn on the tv it won\u2019t power up again. I have to unplug the tv for 30 minutes EVERY morning for it to come on now. While I\u2019m watching tv the sound just goes away at times and I have to reboot the tv sometimes 3 times before the sound comes back on. At times the hdmi won\u2019t recognize it has the cable or game system connected so I have to turn it off and on again when that happens. This is just unacceptable from vizio. I hear there will be firmware updates but how long will that take?  I don\u2019t know what to do should I return the tv and try another vizio oled or just stay clear of vizio because this is the beat quality they can produce right now", "I bought this TV several weeks ago and I couldn't be happier. The difference between OLED and anything else is astonishing. Highly recommended!", "I\u2019m having multiple issues with it. Tried to set it up with my Xbox X series too play in 4K resolution but the screen goes black. When I did change some settings to get the TV too play my Xbox in 4K it wouldn\u2019t turn back on after I had turned it off from playing. I had to physically unplug and plug it back into the wall too got it too come back on.", "[This review was collected as part of a promotion.] This controller works great with our Nintendo Switch! I love the fact that it is wireless and vibrates while we play. It is also easy to use and handle! We are a family of 4 so I will be buying 3 more of these soon! Highly recommend for anyone who has a Nintendo Switch!", "[This review was collected as part of a promotion.] I love the fact that it is wireless and I don't have to deal with wires being all tangled up. It's easy to hold, perfect size and weight for my hands. Very pleased with it.", "[This review was collected as part of a promotion.] The Enhanced Wireless Controller for Nintendo Switch is easy to set up and use.  I love the Mario on it.", "[This review was collected as part of a promotion.] Power A Enchanted Wireless Controller for Nintendo Switch works great! Love this item, it is easy to hold, and very easy to use and connect to console. Seems like it is very sturdy as well.", "[This review was collected as part of a promotion.] This item came in no time after ordering it which was a plus. It was easy to set up with the game system my boys were super excited and love it.. Now I\u2019m forced to buy another one so both of them can play together.", "[This review was collected as part of a promotion.] I just got the Enhanced Wireless Controller for Nintendo Switch and I must say I was surprised with the quality of it . It definitely makes playing so much easier especially when it comes to certain games.", "[This review was collected as part of a promotion.] This is a wonderful remote it\u2019s make playing the Nintendo switch so much easier. I love the remote it fits perfect in my hand as well my child\u2019s hand! This is so easy to use and much more better for the switch! I highly recommend this remote for anybody that has a Nintendo switch!", "[This review was collected as part of a promotion.] This works perfectly and has alot of extra controls and features.", "[This review was collected as part of a promotion.] I love this remote. It is easy to connect and use. The remote itself is well made and comfortable to hold. The fact that it is wireless is great and makes gaming more enjoyable. It does take batteries, but battery life is long. It is a perfect remote for any gamer.", "[This review was collected as part of a promotion.] I received this controller to test out and review. I suprised my 12 year old with it and he just loved it! He loves that it's wireless. He said it was so cool that he wanted to get his friend one for Christmas! So this is definitely kid approved. Thank you for this opportunity you made one kid very happy!", "This game is perfect for my first grader.  She can play alone, or we can add a Yoshi for a level and I can play with her.", "Awesome game.  Amateur to intermediate skill level with a few hard levels but once you get to the end you\u2019ll play like a pro.", "This game is so cute, easy and mellow. This game can be played with up to two players. My husband and I took turns playing with our 5yr old, he loved it!", "Fun and easy. Though the sound track sounds very uninspired. If only Crafted worlds soundtrack could take note from Yoshi Story.", "It\u2019s a real fun and easy game to play. I\u2019m not sure if there\u2019s a way to do increase difficulty since it only comes with two modes and I play classic. Regardless, the battles are fun, and if you want a game where you don\u2019t have to think way to hard this is it. I love the graphics and I love the creativity that goes into it.", "A charming easy to play title that's perfect for young  kids.", "Overall great game. Interesting and has different elements than other Yoshi games to date. My son absolutely loves it.", "They should know that it\u2019s fun & cute & for all ages.", "Beautifully developed with great music. It appears as only for kids but don\u2019t be fooled. This game has enough puzzles and the replay value is definatley there!", "At first glance you would think this is a kid game and has no entertainment value for adults. I will tell you first hand, that is not the case with this game. The visuals are stunning and there is plenty of action packed platforming for everyone.", "Where to start... do not buy this tv for a next gen console. You have to manually change the input setting from HDMI AUTO to HDMI 2.1 for the Xbox to recognize the 4K @ 120hz. If that wasn\u2019t annoying enough the specs said ALLM, HDR, and VRR. When you go to the TV info screen says no to HDR and VRR. Then proceeded to give the TV another chance by using the apps it offers. What a joke! The screen went green and kept flashing the picture. I tried five to six apps. All the same outcome. Finally on day three of owning it... it quit showing the picture for the Xbox. To confirm it wasn\u2019t the Xbox Series X I switched back to my Samsung Q70R TV which has a better picture and does everything, but 4K @ 120hz abs is still to this day running fine. Needless to say I shouldn\u2019t have bought a VIZIO in the first place like my gut told me. I wasted my gas and time on this TV.", "I bought this almost two weeks ago and next to my brothers LG Oled it holds its own for the price. As a pure Oled screen this is the way to go but It\u2019s not perfect which is to be expected for the price as a budget Oled. It\u2019s native apps that don\u2019t support the tv\u2019s high resolution will have noticeable pixels and it\u2019s already showing signs of Oled burn in if you keep the same image on for more than one minute, you should allow rest mode after 15 sec of inactivity, I\u2019m serious! Just be gentle with the tv and don\u2019t forget to turn it off and you will get an amazing tv.", "No other brand Tv can compete with the quality and price of this TV!", "For those having trouble gaming in 120hz, you have to change the settings to 2.1 on your hdmi 2. I almost didn't buy because the reviews on gaming saying it wouldn't do 120hz at 4k but it absolutely will and the Xbox verified that. Just change your settings to 2.1. The best picture quality on any TV I've ever owned. Truly amazing!", "I've been looking at the new OLED model tvs for a while and I'm so glad I finally purchased my very own OLED 4K tv.  The picture is incredible even if what you're watching isn't in High Def.  High def channels and movies look so good but the 4K programming is insanely sharp. It looks as if you're actually there", "This was a great purchase. Perfect blacks and beautiful color reproduction. I am impressed with the build quality and the attention to detailed such as the the wiring placement. Also the apps that\u2019s included are amazing. It also has Apple TV!! The only thing missing is a voice search on the remote. Other than that great purchase and extremely happy.", "So far so good.  Enjoying the difference that OLED offers.", "Just picked this TV up a couple weeks ago did a lot of research thanks to YouTube and saw that this was the TV to get for gaming A++", "120hrz, VRR, VRR+HDR, black screen but at 60htz it looks great! Vizio please fix.", "Excellent TV! Beautiful.picture. Easy to use, with enough extras .", "[This review was collected as part of a promotion.] This is a great addition to our Nintendo Switch. Easy to set up and easy to use. I highly recommend!!", "[This review was collected as part of a promotion.] I got this for my son and grandson who play the switch together. My son is an old school Nintendo fan so when I saw this with the old graphics I got it immediately. "], "data": [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 47, 2, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "recommended_review": {"label": ["yes: I recommend this product", "2", "No: I don\u2019t recommend this product", "4", "5", "4.2727", "4.6556", " i say it should just have a completely different name slapped onto it. Then i would of not had any quarrels with it", "11 months ago", "1 year ago", " it's a rather unfortunate decision not only because you're excluding gamers but also because of potential happenstance scenarios. Steam goes down? Sorry", " you will hate and loath this game as I did. However if you owned any Craft game or C&C and thought the above mention games were too complex", " which really adds more hassle to the game", " but no one is home", "1", " not just 4K streams and DVD's.\"", " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", " especially if you plan to play the often chaotic but always entertaining simultaneous two player co-op mode.\"", "0", "4.875"], "data": [372, 1, 92, 3, 4, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "verifed_purchaser": {"label": ["yes: I recommend this product", "4.2727", "Verified Purchaser", "4.6993", "4.6556", "363", "2390", " because i wouldn't be expecting something so different than what i knew. Now i own both of the \"\"previous\"\" games and they are both excellent", "5", "3", " you're out of luck. A few years down the road and something else happens(such as one of the companies going out of the business or whatnot) and you can't go back to play it for old times sake? Again", " strategic", " but also adds a new era of customization because instead of just going up levels 1", " type of.  So in the spirit of the shopping season i jumped at a another brand new Vizio product", " and to get 4K", "3 years ago", "32"], "data": [244, 6, 222, 1, 2, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "helpful_count": {"label": ["0", "Verified Purchaser", "363", "1", "306", "2390", "228881042", "2", "3", "228691813", "4", "127332001", "228459804", "228397838", "28", "5", "6", " and so when i found out about this \"\"sequel\"\" i ran out and bought it with out much looking into it", "127185338", "4.2727", "227806298", "227721000", "127127185", " out of luck. Move to an area with limited connectivity? Same thing. I wish developers would stop going with this route", " and epic for you", " 2", " this OLED 55\"\".  ", "7", "126525025", " I have to manually switch the input from Auto to 1.4", "226910861", "226824012", "122140626", "126297513", "126279514", "226623767"], "data": [318, 77, 6, 47, 1, 2, 1, 11, 5, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "not_helpful_count": {"label": ["0", "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "229167959", "228991912", "1", "194520876", "127408484", "2a736f40-6b79-5c49-b539-5eae6b06fe94", "2", "7", "4", "8", "6", "5", "865fb1f7-9fbc-5ec8-89fb-868f67495019", "18", "41", "3", "0a5b2e83-abcb-5537-a109-15a4b8c4f86d", "228476168", "c0fef563-2deb-5c01-acc6-9db6c6fa8368", "15bc27e2-a5ad-5a18-b47e-5f4cd100907c", "11", " i knew it had a different maker but i figured how bad could they have possibly made it... i mean it's Square Enix! Now don't get me wrong it is a good game", "4a650967-e873-5e06-a3d0-81e9530e5a78", "363", "c35409b8-9e25-5996-88e8-e3f1aa9e8065", "3adeb77d-d51a-53aa-9aa2-3908b384030d", "16", "9", " as it's very short-sighted. The graphics are significantly worse than the first one", " then give Supreme Commander 2 a try!  You should feel right at home in this slop show.\"", " 3", "227425437", "227210950", "15", "33722e22-472c-5b56-a877-599999791231", " then back to 2.1. This is very frustrating. ", "02481162-152d-5b33-ba5a-5136b0686613", "8a3401f7-4865-5764-904a-6f8cb7b42edd", "4.875", "0b338d34-27a3-56a0-9787-1d3b437f1ba9", "1962b25e-379f-515a-a961-26950bbd081d", "126289526", "95bf4328-d8c9-52b1-9074-0e246e0f9fe2", "226749057", "6e496bf1-e93c-58ac-8889-a3a9b9b69afa"], "data": [343, 77, 1, 1, 16, 1, 1, 1, 7, 2, 4, 2, 5, 3, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "reviewed_at": {"label": ["10 months ago", "fa660933-1130-5c66-9010-24d641f70bc7", "16e925e3-1e59-537e-aa67-1675b613d351", "7f69bc6a-f89c-53d4-a52a-39a8b8512c54", "16 hours ago", "1 day ago", "7 days ago", "9 days ago", "10 days ago", "17 days ago", "18 days ago", "2 years ago", "7ed32763-a3be-57d4-a35e-a166b90de2ee", "16/01/2022 16:17:57", "11 months ago", "21 days ago", "1 month ago", "16/01/2022 16:17:58", "cec7afe6-497f-5ac5-a9c8-b1ca19d4a4b0", "7 years ago", "9 years ago", "10 years ago", "11 years ago", " but i was expecting to buy SC2... Not SC2 revamped... i couldn't just jump into it", "16/01/2022 16:17:59", "228309057", "12 months ago", "16/01/2022 16:18:00", "227799226", "1 year ago", " even on the highest settings. There are ONLY small maps", "No: I don\u2019t recommend this product", " and Experimental", "2 months ago", "2903b4fb-38c1-5b18-86e4-223040292dc1", "3 years ago", "4 years ago", "5 years ago", "9aefa298-d085-5f90-b930-00b20da59e72", "16/01/2022 16:18:03", "0", "16/01/2022 16:18:04", "32", "16/01/2022 16:18:05", "512efb41-f0b9-5a8b-ac21-e6f988f04a2d", "4b63751b-d4c0-5c5f-9138-59a473a7daaa"], "data": [11, 78, 1, 1, 1, 1, 2, 1, 2, 1, 1, 136, 1, 2, 30, 2, 58, 3, 1, 1, 2, 3, 12, 1, 1, 1, 2, 3, 1, 83, 1, 1, 1, 13, 1, 22, 3, 2, 1, 2, 2, 2, 1, 3, 1, 1]}, "rating": {"label": ["5", "4", "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "16/01/2022 16:17:56", "3", "16/01/2022 16:17:57", "2", "1", "16/01/2022 16:17:58", " i had to learn the new feel to the game. In SC2 you now get to your good units by having to research most of them", "538c1919-dad5-54d8-89b1-619b8c7656e3", " and no larger maps to choose from. In the first version you had a large selection of maps", " you can have multiple branches of different customizations", "16/01/2022 16:18:02", "16/01/2022 16:18:03", "1 year ago", "2 years ago", "122158646", "16/01/2022 16:18:05"], "data": [285, 62, 95, 2, 14, 2, 9, 19, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]}, "average_rating": {"label": ["4.2727", "ef72459e-8f5c-57dc-af42-0127d2903498", "4.6993", "4.6556", "3.4091", " and experimental units are really not that great", "16/01/2022 16:17:59", "16/01/2022 16:18:00", " in SupCom2 there are around 10-15", "0", " depending on your favored style of play. You can even simply upgrade what units you have instead of the old \"\"send oldies to suicide to make room for the new guys\"\" strategy. Actually", "3.3125", "5", "4", "4.875", "4.0345"], "data": [122, 103, 81, 131, 18, 1, 1, 1, 1, 1, 1, 11, 1, 1, 19, 7]}, "reviews_count": {"label": ["363", "4.6556", "306", "2390", "22", " yea they are all based of the old games models but i think that most kinda suck comparatively... like the experimental units", " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "0", " it is BETTER to keep the oldies instead of suiciding them", "32", "4.2727", "16/01/2022 16:18:04", "29"], "data": [122, 105, 81, 131, 18, 1, 1, 1, 1, 30, 1, 1, 7]}, "comment_id": {"label": ["229196240", "229179703", "229174444", "95223899", "229131414", "229087196", "229080154", "229044038", "228960695", "198688597", "198672375", "196827630", "196827194", "196230804", "195216162", "195708350", "194329916", "194187129", "127432481", "127430959", "127420280", "127414142", "127414207", "127411122", "127409004", "127407425", "127405746", "228929144", "228928290", "228863224", "228776856", "228759010", "228750584", "228749581", "228724687", "228722869", "194027229", "194017047", "192503208", "192137369", "192087597", "192080051", "192046520", "192045625", "192042914", "192041796", "127405362", "127405229", "127404696", "127396175", "127396143", "127359093", "127348302", "127348104", "127347414", "228719614", "127345863", "228712408", "228703343", "228692495", "228632763", "228622725", "228576384", "228545194", "228523449", "192040841", "192039616", "192038437", "191969147", "191868187", "191531039", "191517192", "191510980", "191473354", "191467877", "127345574", "127333838", "127321759", "127320268", "127319595", "127299640", "127295961", "127293457", "127293081", "228523275", "228509090", "228499139", "228478134", "228397787", "228341387", "228321620", "191464723", "191463669", "191462968", "191459315", "191448343", "191443448", "191440654", "191439900", "191439828", "191439957", "127291762", "127286343", "127272761", "127262343", "127260250", "127259475", "127254841", "127250995", "127250993", "127250112", "38246272", "23501684", "23367706", "19236943", "19088941", "19030618", "15250428", "15250438", "15250426", " for so called \"\"game breakers\"\" as they were know for in the old games", "127238242", "127234219", "127230795", "127187464", "127183266", "127179492", "127178055", "127177220", "127161458", "228297521", "228244888", "228226690", "228181572", "228165736", "228114419", "228085186", "228057468", "227938540", "191439701", "191439022", "191438590", "191438462", "191438175", "191437894", "191437728", "191435985", "191434602", "191433776", "127153348", "127152461", "127151155", "127149546", "127147505", "127144002", "127140095", "127137390", "127131702", "127130838", "227875021", "227791669", "227778090", "227771273", "227732223", "227730979", "227715331", "191433462", "191432612", "191432155", "191353081", "191322300", "191322155", "191321523", "191169574", "190972289", "190971178", "127127997", "127125697", "127123561", "127120887", "127117350", "127029556", "127014676", "127012426", "126806434", "15250427", "15250430", "15250425", "15250424", "15250437", " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "15250432", "15250436", "11 years ago", " because the longer they stay on the battlefield", "227695298", "227689648", "227681843", "227672104", "227658242", "227639598", "227614951", "227582245", "227560725", "227547589", "190970117", "190958407", "190900156", "190899558", "190826055", "190820482", "190815305", "190807964", "190805061", "190803084", "126755575", "126755116", "126754711", "126754570", "126746667", "126742656", "126737441", "126736040", "126678115", "126641084", "15250434", "15250431", "190795136", "190786135", "190783552", "190766977", "190764517", "190762148", "190763953", "190763710", "190763007", "190761169", "227514155", "227512948", "227493289", "227489183", "227489075", "227469318", "227466484", "227455329", "227437332", "227433603", "190758968", "190758657", "126629986", "126619345", "126599299", "126597316", "126588300", "126586642", "126576266", "126565334", "126559156", "126552237", "227368178", "227336919", "227333306", "227330788", "227308429", "227300137", "227299158", "227277590", "227277469", "160658457", "157919507", "123364925", "118294186", "116746823", "116634709", "109093076", "108515660", "75707639", "227271113", "227216898", "227212033", "227210524", "227187244", "227186461", "227165525", "227162981", "227149188", "74341808", "126539613", "126536245", "126530828", "126528004", "126526950", "126518100", "126506130", "126498760", "126495952", "227144955", "227115495", "227099195", "227073234", "363", "226961718", "226957452", "226923078", "226915139", "126476050", "126473103", "126440879", "126432204", "126430601", "126410978", "126386211", "126374385", "126350389", "126348541", "126347731", "126346918", "126344921", "126343579", "126337946", "126325080", "126323055", "2390", "126315942", "126302586", "226900312", "226893604", "226870200", "226863307", "226855621", "226844023", "226834410", "226813954", "226754257", "190364463", "122923657", "122567098", "122446616", "122436959", "122339952", "122182335", "122102991", "154204652", "141605618", "138719704", "137193968", "136798584", "136465444", "136365231", "126301922", "126301717", "126291693", "126283489", "126279116", "126277361", "126273657", "226733824", "226732965", "226732331", "226732189", "226723463", "226718702", "226704721", "226700717", "226700432", "122087294", "122023762", "122010486", "121995492", "121974894", "121930697", "121884814", "121884636", "121868056", "121864917", "126268175", "126265497", "126261158", "126253606", "126259865", "126258810", "126258784", "126256170", "126249716", "126252644", "226679986", "226677148", "226674137", "226672941", "226663884", "226662940", "226662747", "226661973", "226608892", "121860312"], "data": [1, 1, 1, 106, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "uniq_id": {"label": ["d749678d-aeba-5a6b-b8e2-8d2121463672", "9f20312c-1047-5824-97d2-d5563b8fd046", "178b3b03-2c56-5abc-a016-c74c2633c9c2", "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "bc017585-3bc1-5a37-9e58-f0bed6de9a72", "4167ea1c-87b6-5dbd-a04b-56fc7d1948e9", "b4c20627-111c-5ad9-809f-11d6a82c675d", "ea9ef1ba-d537-5b73-ab71-790616ef3258", "3e14ceea-0717-51ac-9edf-6b0d17b9f978", "3bdf13c6-ed6c-5df7-a7cb-f87507d4b133", "92688319-f675-53b8-9468-2e7b1ea9bbc4", "ff2acd3f-f96f-5935-bdfc-8e29e518fb60", "a3a3d750-800d-5eef-a917-fd5b00598f06", "ebae6bfc-540e-5f39-9ce2-2d46db50b49a", "78865f85-196f-515f-90ed-a8dad95d9065", "89ac96f3-a6a7-5f6e-ac22-302869e30bc7", "65c38814-b259-591c-ae59-a3f0fbae81d0", "902d7992-f6fd-55bd-b5d7-408db5a49648", "540015d7-27e3-50f6-b66b-8646416c0cfb", "00bd1c61-b1e9-5996-9cb2-68f647941463", "5cf58f8e-75b2-555b-b9ac-0edb49219337", "992506c3-cb1d-5a05-afc6-cce6a4a437fd", "70c3cefe-763a-5aca-9b7d-5bd2b36c5595", "c1aea343-68b1-58fa-8a7d-07f265e664cb", "fec5af3e-7f63-5e5d-9649-1b81750f3e24", "bc585083-82d6-5cb5-af8a-7f19120e6f3a", "d92ea3bf-7fab-56df-802f-973a7be01387", "4eeca482-acc8-54f0-bf9c-1552ad6304c3", "b6503cc7-6b14-5ea4-ae9e-5e984741ae65", "4840bb9f-8063-54f1-aafd-dc779ba006b8", "5dfb09b5-3b7b-5c92-8d69-2e487ee55948", "58e11806-69db-59a1-bf1b-1931387149b4", "1b36ae98-a3b9-586b-b75c-92d0b0a64fbe", "ce1ab1c3-34c5-5b21-90d3-be7a37b215d1", "926fe7c6-6345-529c-91bc-35736576d50f", "b74cf53c-979d-5157-b1b1-28572636ecef", "f6a47493-63ec-510b-aba2-8a68eff9bc34", "9699ef26-f730-5927-bf3e-7cdf8ecbb2a5", "3de73f9b-98c9-56e2-805a-e539ab1e5e33", "a2bc0bcb-0540-5dca-b1c2-06430afdd624", "8c024bd3-193e-5631-802c-3a989f6d4f73", "1a337911-6166-5983-b5cf-944db19384c8", "8c51c627-f616-5bdf-aeff-d93bf787994c", "dfa3ef96-f70e-5e78-9ee8-8d0c57f017c2", "8c35296d-ba41-5598-a513-740f8566113e", "6ebdfa30-4058-5fa6-b76a-d8bc6977e810", "960cbf7c-2354-567a-ba9c-537f3e63810f", "69500d83-dab7-5078-9aa1-5e2200736382", "d361c95b-fd18-5024-a6fe-f997562e2d3b", "c74037cf-5c28-5aa1-894a-c9abd50cdc79", "ab03b0d3-cc3b-5cf9-9894-200631099bb4", "296f57cd-b10f-5bd0-8dd9-78048b7c2e37", "667613eb-326c-5e9c-a48d-bdd2461a770c", "603d6f26-ffc4-5059-8cd8-ed6ddd671e63", "7e989ba1-5dbc-561a-b719-01ed3cda849b", "4f131751-4d8a-5bfd-af50-9d2ce3dd046a", "8cbb57c6-0882-59dd-af92-73b57a213812", "86570fa2-2141-573f-93ea-6368fedc9d0d", "a3955d77-2dea-561b-823c-41bc60377780", "9e0d282d-056f-55c9-a62d-13e79bbb844c", "ee801ec0-c5cf-5655-8498-a9770f1a6921", "4ef37b88-1ab9-5d98-adfd-5a7790b9cdfc", "232f5009-6c44-540a-9e7a-040e815522eb", "bb5c5e36-48cd-533e-8b32-ac1840944224", "ce94d9a4-0183-5315-8521-941c99a5aa68", "0fcf6665-8e4c-55e5-8723-8ea686ad425a", "524f0643-9cda-5306-81ab-277f533b47da", "fd3b358c-a67f-5475-a1cd-04c862f97b4e", "aed215bd-32e5-5577-be72-8fe1a4273d12", "87901149-9f7d-5db6-9c6b-7f516bda5b83", "db0b55df-7fd4-5d5c-90d3-eac2b049be4c", "c026bcd2-f440-5b87-95d0-a9dbdd87d4fe", "0d5805fa-77a0-581e-9f6a-b5441020925d", "20b6e8de-5239-5339-97cd-f4a96cf19873", "d7a8c6c4-234e-5c12-a8d0-af859409bd8a", "09c6537e-9796-5aca-a264-354c489b7706", "b6dae06e-562f-5f67-b905-6a267a1b3147", "6ff43da6-1ce0-54d4-9080-221feba20bd8", "9dc8e634-e9bc-584c-b64b-bb39c8f54fce", "3025b560-5f5b-560b-9b15-d3c2ed1468b0", "2dee6b9f-1dd6-500a-9518-e48555992512", "348d2ec6-347b-50e5-9fe8-388a58176915", "de401188-0285-5ddd-93d8-f84f18f155e2", "6879d252-929f-560d-a2f6-c29114a460cf", "065df515-c00f-5674-8005-0e71aac9b6cc", "7b762f11-3f30-5648-898e-b365a7eaedd8", "df5e5870-c422-5585-9dbd-2f01e48ee872", "b9a43399-3aea-58dc-b1c2-96e5bab6e7f4", "e3d25147-7e31-5ade-b955-8c6c07276063", "37ab8cbb-cbe6-5514-bb5a-3223ae898d16", "156a2f4b-a3ee-5a50-8bf2-f2311c908491", "3da6f23f-4693-549c-9b9f-0faa66b56124", "66f84845-97c8-5cca-8bf1-4cc4cdfceead", "8a38edf4-1d13-54d2-a32c-f98303cbd0ac", "b25ea776-319f-5907-bb36-8330e0b9e736", "b7379f49-dc90-56f4-8823-769c4832168b", "92468c29-d5fb-59dc-a142-1e67d15d1ee1", "81bfcb3b-43a9-55da-84ca-2712183f9869", "77925e75-8d4b-5970-9020-ddd3517955c7", "22f370a8-e30f-5cea-9d38-0d7b9da2fd0b", "3c5e7a8f-7138-5143-a3dd-81d9f2bf87e6", "77005922-343e-5afd-8604-de6116cb0a81", "ead016dd-471c-550c-8335-e80ade7ecbb9", "3f2ea70f-6737-57b4-bbff-c6b5af771f90", "14829c73-4cad-510d-9d51-01ef577acadf", "fe7a0330-a5dd-530e-9497-80d37d07253b", "e59c376b-a912-50c5-9d04-8f7f3e7a6d45", "5104f652-46d7-5b1e-bdf2-55b7f55d4b22", "780060a5-4afc-5712-9c61-66c3df2f51ff", "333d879a-9b72-50d3-a5d7-faa0961846ca", "41044c39-03df-5ca0-b0da-9219160fa67b", "c64a9e38-39cc-50ef-9d30-1eed268a4a24", "8e31a70f-17f9-53d5-9f0f-3b578d7433e8", "42674a2c-bab8-5cd9-b2f4-a5b33733beb4", "322502c8-f81a-51b5-b3bf-e6e61a83b045", "c397a7c1-d874-554e-9004-4d7a2422f5d3", "8e0bfb12-1204-59aa-ae95-fc75ec400ba0", "c0b37854-ae65-508d-a8d8-05183e6ca822", "8af5ed1a-cca6-5a39-bcf8-bb9c25ec7806", "c5dd07cc-ca1f-52d8-82df-d13c4e129265", " u can make them with very little ease and there not nearly as effective as they use to be.... which i guess is the trade off for it", "928838d7-ee40-5739-a91c-37320381b139", "0a0d4148-507a-575b-8ca1-9ce89095fc80", "f30f8cd1-56b3-5068-bcd7-d59438a6da70", "caa8b6bd-4ca5-5ed9-b467-f4fc59e596ff", "b6fc226c-c88b-5332-88db-545da41ae9b3", "b0620603-ee01-512d-bdfe-b37993ab43ff", "41b29280-1727-5bba-ac8a-17e914bd2d00", "0efc324a-3a27-5e05-b98d-8cb6cd444775", "3bfce4cc-4c76-5c78-bc93-d740963116f3", "b72f7138-db42-5954-9039-1eebfbe44ba6", "750791b6-adfe-5127-aa53-9a502824f996", "83cdeff3-bf81-5aab-a214-4f778969e26c", "2f8a681e-1bd7-5a6c-a446-4ac731ed373b", "ef6ab344-54b7-5244-a7be-81066f12b6ba", "d29dc126-1eca-5ed3-8156-9f4d98d42b09", "21bbb55e-c631-5317-bbbe-e966c51ddc36", "7fc9e390-1992-5327-9a3f-8730d97e32b3", "e00ba275-4a07-5d26-b371-4317a039c78c", "e6b35618-1a65-58b4-b82f-91fe5c64d444", "85d2e8a6-54a4-5cfd-85b8-a40628881808", "de5d066a-fb60-5496-a2af-4708d4867650", "a803b874-c886-57b3-b93b-16a92cb2c4af", "9d0a0700-633a-5cb9-b33f-88479669ad1c", "78a38873-09a0-5f5c-8680-56bd3d8182bb", "0b9eb2b5-8735-5a5c-b3c1-e574976ff59a", "6680ec17-93e7-5d88-be84-252b6dcf4afa", "830e77d9-5c67-518a-a24d-48656e6ec23a", "9f9fe687-9b39-54dc-a594-be74dc951e9f", "7a0bc368-d016-51c1-a93a-e5255b8818b6", "c68ab9a9-35ca-50e7-8d99-61aa90cc6170", "3c2570e7-dcf8-5ca5-a2e5-cab3f469a020", "eb70dff8-04e8-5a64-a14e-63186d060a0e", "70075879-a707-5623-93eb-21a98adec3ff", "b2f4b512-cb05-54e0-8cdc-5513f11da130", "ca9738d7-fa47-5310-94c9-9abdf85f4aec", "7cdfe34c-abaf-5aef-9de4-e655f148a573", "92c805bc-a7f5-5195-a86c-1bae32b5992c", "342a7542-8347-5f47-a2a1-3210f50a807f", "7c0656aa-e5d5-5531-a479-c2da27eda948", "6344ef26-f49a-5fe7-adf8-f78f0291da78", "9d8c6279-b9ad-5934-8270-e45b1a2514a7", "bb1ba1ea-fdb3-5210-a1f0-c5dde357c6c5", "59c37463-7e8e-5dac-b39d-25c12a73e452", "4336655c-bf54-5815-8b4c-c7257f8ee373", "161d1563-a683-5027-9a7b-226dd83bacc9", "a9ead4c5-5697-5920-8415-47091cdf9b62", "be7a52a7-154c-5468-83e5-ce5d947f712d", "ee96d446-bfa0-5374-b74e-a26f96eab46d", "79fbee79-80ae-5908-8cda-70f9293e272f", "7e71ba28-f137-5fdd-80ab-d91a69dcd9ad", "10273c14-150a-59ac-86f3-2040fae23777", "1a5bd81d-12a7-5f67-b456-c557a1b6029b", "ce147da5-c01e-5a86-a357-f8d3ece4a123", "df892d55-bd89-528b-8528-ebb70103f590", "5465f272-2a25-544e-a43e-a137e0899216", "9603729f-86c8-5e52-a9c4-aea8bc2c705e", "4af31d2f-d9c0-55f4-9083-3945e69aede0", "7be993e6-155e-5555-998b-cedcee64ef71", "60e522b6-7f19-5e3f-8456-548142cd2603", "00a29941-a023-5474-a4bb-3c28f9699a6c", "bc7017a3-b713-5c27-9b55-944deacc859b", "11ca20bc-d09d-5da2-9f77-75560a67b0f2", "4ca56a88-18eb-5e1a-af3e-f09fb8a295b1", "a9aaf6b6-d248-5257-81b4-4261997b6957", "43d68c51-de66-5084-bb9b-beb70dd04227", "74124d14-3a82-5efd-8d25-925413486048", "65a5e017-1707-51de-9fa4-f01bd77a9e1c", "a6daf2c6-b2e0-56b6-942a-20ec613b3e8c", " don't make the same mistake I did. Do not buy this game.\"", "7d45dc21-cb6d-566e-829c-0b6a8f1fcb9d", "fe7d8b34-e569-5186-8dce-57c70a13d88c", "1", " the deadlier they become thanks to experience now. The much-famed and even moreso whined-about economy that made SupCom 1 and Forged Alliance so famous (or infamous", "6dbed12c-450d-541a-a190-c15f03c40aa6", "ddd95f84-96b2-5c7d-bb7c-53c36e6df414", "c636381d-0229-527d-99a8-bff81d749a13", "4d3e75a4-f345-5e58-bdec-b17eba6b54e8", "c434c843-886f-51ac-be66-1444953b1f34", "e98cc6f9-fb85-5bc5-8a5f-709d56e7a08a", "ab190533-6515-5e00-991f-36666c9cb8f4", "b69b8ac8-89ff-5e89-9697-52a682ad0e76", "b707b4b5-8acc-5c69-9279-f1029422274c", "ce132a16-19ad-5dc1-a222-9a18b7751770", "51346905-fab9-5ddd-bdc0-a3e78448129b", "6f4b378a-4b78-5beb-bcc2-2aea05ea730a", "15117320-4aa0-5f15-8d9f-44eb7891adfd", "7578b6e5-5098-5f49-b320-ee99268986f4", "e19bd9fd-6c3b-596b-9014-d6d8e6238e37", "31786614-0e1e-5a38-9e27-8f23084e6ee1", "3ae8c7e2-1f22-5cd8-9992-6d5f03e37b8b", "df9c8e11-c20e-5a8b-b090-975550d21a38", "9d91f740-ff30-5f49-a9e7-32cf33d739c5", "fed5a40d-6b6a-5212-aab1-7d644fd4c0d0", "017d9f32-3702-5eb4-b1fb-7426864383c7", "21945403-7c2d-5e53-bdec-30fc9caec384", "f9469cbd-8ad3-5f74-9b6d-3aefeaf073c7", "2c072257-f611-5e72-a1ab-5dc75ef88f59", "1fc8da0f-ab3c-5904-b6d7-e967083ec472", "3d6378f1-c8fb-53b7-9080-d2429741d858", "2d87329c-fbd9-571f-981d-46ff995fd728", "d9d6ab84-c03e-5838-a724-e49e367d0fdd", "03ef4326-bd0d-5d6d-8a82-673db2023dca", "1892e4f2-a10d-5cbe-ae9e-af24f821912b", "b773b1a6-5b9a-5f68-9670-3489f0334157", "d0cf2335-6dea-596b-8480-460279c701a9", "7597e0e9-5e76-5dde-8bf8-327904575e9f", "269f8e2e-b3e2-54a2-af5b-504e0de18999", "a2db9996-35e7-58d7-ada1-a48703f0843e", "c61a0a2e-6150-5816-827e-7d7fc7f7f94e", "2926a631-7fde-5f98-beff-434285a55c73", "c89c209b-87b7-51c6-b645-604bd2589c10", "fa3daaef-6785-5e0d-a7a0-53a2605e5a60", "6ac96e96-d51b-5c49-8a2a-f21a298a2960", "d433a372-ec33-57de-af65-ddd03d8458ed", "be19f9b0-7d18-50c2-8f4f-d22f83fd1081", "a56d9282-4860-5371-9f05-a9bd99c99914", "58a3cd56-3757-5683-bf5e-043f7dc92826", "a9fd61c1-57e1-5036-8cf4-01149ac3e34d", "c3f3597b-51a8-5aec-a613-90242e40e8d8", "cec310ca-6de1-5376-8bfb-8be08ffd1b87", "fe663898-37db-56ab-9d32-c3d52f93b4e5", "d95796b1-88cb-5c86-bc22-0bc9db290b2f", "4a2b7da3-cc8e-59cd-9dc0-ffa2af5d19c6", "0790d8e1-1514-528a-8f1e-1e5dc035db8b", "4984011a-1fca-57b5-89a6-e76c780daaf7", "7ca99b13-422b-5892-a441-b2dd7bf7a000", "f5f793cc-dd08-5247-9ace-2498e78f061d", "d8b5b07f-b13b-58cc-b896-615b9ad105d5", "de0956d4-0d06-55f1-afce-9551324185ce", "2dc7e561-ee75-5e53-ad76-2859903df7c3", "f255781b-e9a0-57c1-a451-7a35a3332573", "aaaaa9b0-6933-56cd-982c-9093972c44ea", "173c87ef-e2a6-5ad3-89a4-432c8c9b8d3b", "a5a4fa33-a821-53a1-82a9-e28573bb422f", "5cb903ed-3a8c-5949-adae-8c1573defb6d", "0458081f-b0d0-51c3-a5bf-819b1d1ea16b", "0370dddc-2aae-508a-b44d-122e6d641c33", "3b4eb371-c531-5ab8-ac2b-889dd0e24cfd", "11982b37-c606-5a12-a2fe-1999da7e9a6a", "049e260f-a2e3-5ee2-8422-c0b928f66317", "5542b8bf-ac17-55f6-937a-1d90f91b9677", "9bd8d11d-12c7-5078-8ffd-a76aad22839c", "deb423a5-9af3-5ba2-b788-afb7f1433960", "27f54783-5943-5768-8473-f46535b7d205", "984c0a44-286b-5f5c-a04b-21f0ec500bb6", "6ba4d664-9c8a-50a0-80af-696a0a693e1f", "1e939271-deb9-5fe8-a1c4-aa8dbdf78342", "23d9c3da-b664-52b4-bf69-0f8a7d077f90", "9bd2d34a-5e61-57c4-9d29-646e5cf6ba26", "b1f8541f-3d73-58d4-8fd2-91efc595fc96", "88ef6fb7-c95f-5675-9d98-c4a50cfd519a", "b337caff-962c-5242-b3d0-8abebb580064", "e04f8d1a-9267-530b-b5c0-10346dd373e0", "df5a7b8a-f709-59f5-b49d-dc724ec76b61", "859ac623-c5af-5604-91d5-8a99eb2504d5", "5f3917ab-9dd6-5929-9744-e3a2e874d7b4", "a99d570c-bdbd-5227-8609-ece8f499ebb5", "587a3ddd-1619-5729-88bf-61b91642d4c9", "33f65eb0-1f44-526d-9319-c906125ee5c6", "da0393de-bb8b-55f8-86de-58d92cfe4241", "2f7efb29-de97-5904-833a-c9a78dcb9212", "7615eeb0-1644-5875-856a-08aeefb4355c", "77d0486c-c3fa-55ce-a778-25a9ff85e1d6", "821dde30-9ad1-59e3-b367-e0a36dc2691b", "584ee887-b8e9-5831-b34c-9054af211b2e", "83fda476-c6ad-5de0-beb9-24a7cd48fdd2", "9a3be338-8648-50e4-a0f5-805fd576c024", "b79f70f4-fd02-53b5-8027-838f4073ed73", "123e30f0-b2b1-5458-8d8a-faee417f379a", "27ea1f05-cdda-5466-ba89-1578af352018", "71a0a99a-e767-5285-ad31-aabfed1b91d7", "05ca2650-238f-588e-a873-7007194759d7", "dbb361d8-d468-5822-a0a8-10bbb1e5c348", "bb53d5c0-348a-5800-87a7-d4eb984ca544", "89c9e45b-2b49-5be2-9e62-52634bc7fad7", "11338a10-215e-5f67-a575-5237fef59b16", "ece4609f-bd97-5a47-82b3-c1f5352598f3", "f3a80eb1-718b-5c8d-b318-b18bc83fb20e", "a77123ba-ba04-5c96-9775-f7933c733a37", "227010137", "93e6fc6f-7bf6-5a2e-b4a0-834fc2475980", "7b9af1f2-7b3d-5164-80f0-800133b61ce4", "f864ba04-27e1-5673-875f-6fd69443fb3e", "922e0d7d-c3f4-5b50-a543-e756033d3a1c", "4773a39c-0194-5088-af97-1597830af3cb", "23759918-be89-5c65-9bf4-80ffb801cdff", "378bfa7c-9e8d-5d24-9947-c0515f458a2c", "bc495ea9-fc64-52df-a68f-c177f7c045d4", "9d54e2ee-64d7-501b-adbe-31c0969dbe17", "1babf017-7fdf-5c87-8652-1407fa60eb90", "d7029cd7-b7f2-5db5-8963-596a04b78acd", "e1f7d79c-f4a9-505d-9273-c1de69d35bda", "8e92998d-0da9-5f08-b431-fcde798123c9", "7f06208f-0a2b-54ba-94ea-112a39a0c52e", "a4ae2322-89b3-504a-b7e0-9fa33a9ca17e", "138dec55-89dd-5a19-b289-861f05404137", "1df8ba9d-c4b7-5f94-ac1b-796c510d5a5e", "46be1ec8-0af4-56f1-89c5-a57e8a345971", "1704cd22-d544-5d71-9815-f5eb2372a044", "bd6cd803-2b83-5424-9c1e-5d536f889b79", "a8cb85ec-1fb1-592d-86dd-ad1977d95f62", "126319104", "aac40f5b-5309-54ee-b48f-8cef2b574aa1", "48d6e2a3-a18e-56d1-a6c2-3f3d10c0238f", "9b0e9798-1104-51bb-bb02-c4791677f066", "ab53e60a-a8f5-514d-b991-35bb8c11d5b5", "07271c3d-9b17-5d98-8c25-bdd77055b420", "213d7265-2a67-5a82-8be4-aedcc9d26874", "6a01d10d-880f-5927-a855-9877f163f764", "ccbc3319-a7f8-55cd-99c4-8df80b9f986e", "653adbc8-2641-556e-95bb-4e98b787d90b", "090663b7-8c74-501b-8c5c-ad3a2534b71f", "8a8d8b55-7214-5e92-b9ed-733d6bf7071a", "8625e7a7-4e27-5d30-a05b-fe5bf7c2cadd", "9bf14046-e0c5-500a-9dcf-e9c0e6afb859", "814c2ff9-f939-5b24-8c3e-41e751846aa3", "89ff972f-705a-50a7-8f9d-f001de728a39", "a881b3e6-56f2-5ed3-99fb-dc2394c9a4eb", "6ffa7acb-1ab2-53b2-b96c-7d8ffc9cad47", "11608ce6-435a-5fa7-8361-78c102e07aa6", "330fc9b1-4297-500d-b450-59e0c113c0c8", "29596331-f93b-5f15-b930-ea33a3c3da35", "e77e4e5f-c996-51ef-bb79-6354405c211b", "f2fad2ce-ed9a-598f-9e5a-a3ad7ea6a717", "6b553447-1f16-512b-b18d-81f6ffac6d98", "0cf0d647-5307-585d-8435-a37e7f419aa3", "4fd68a13-9df5-5e86-b0a8-836bae43d243", "36b7fb9b-c0eb-5073-b128-5bd4c7d72748", "3f2027c9-d810-5e8b-b6ea-5a2af73af35f", "dc10d9ff-527d-5235-8da4-213d2422ccc5", "fd6bea00-05a9-5cd4-98f9-5f0d4ed43eb0", "29337594-2061-52d7-9c1a-b31c9022a6b3", "c0601d16-e5fe-5975-a114-e857b25aef61", "c2e549f2-3344-5ca7-9e6a-2b4bd5a25504", "ea57e9d3-97b4-56a0-b046-1b7024e7f67a", "7c5e8e10-dca1-528f-875b-96f7b995033a", "60bdb40e-e15c-5bfa-967b-9aa559482629", "23656563-b23a-5a13-b5c5-5ab4eaabf6e9", "74c08633-86e1-5e62-a815-f443ab052ecd", "3ff9d937-f377-5e4e-b3a8-ba7eb733ad07", "2620434c-3ae6-501e-ae0e-15e040f9a198", "2cd61b63-9d87-5b31-a9f0-29eb39dc6df2", "3dab1ab5-cb69-58f7-819d-dff2b315d6af", "8592ca19-f069-5470-92be-ef5503f7df48", "3add2868-0cfc-5f48-8791-d926b2dbded2", "ad9b54e3-4762-590b-a852-63af3528cbbd", "385e416e-b857-55ee-ac2a-0576072e6373", "e052cd77-4a49-532c-879f-d46458da984a", "afd78dcb-1b2b-5967-bdaf-e82cc7a64652", "db126a54-89c7-5ad8-ba95-641b8c223538", "19ee363b-60a8-5ded-96af-6f28febe3495", "2d355f38-1266-5775-9058-b21faddb6072", "bef4412d-50fc-579b-a749-e67a52661770", "7b82a6a3-87e7-5cfe-876f-56a53ab2eecd", "fd975a90-b8e3-5159-8130-c50c5ac945eb", "bd4d2b81-94df-5627-889b-21872c0e777d", "ef5055a5-a02c-5472-87a9-158244c487f6", "86d8bb86-c5df-535b-9e95-d709cf4b5922", "17905c2b-6d32-56c8-b6eb-5d4ab9f2f219", "19a05085-2d6f-5a53-9fe9-8dc9942c7879", "e5c8c18d-9848-59fe-9d4a-12c604a675b0", "e6a73770-f7cd-564e-bf77-367069bbcb04", "fee58b67-3483-5b70-bcb6-74e5f0e93fdb", "f882a003-351a-5ef7-b7b7-757d81ef4495", "d736627e-a587-5ffc-b505-49e31c8867f4", "995d0ca0-de0d-58fa-90d5-7d9799b0e36d", "29f3ac3e-d2fb-5187-a780-1670136e97a0", "206cfb0b-c2bd-5c16-8699-f8f01d670f44", "268a103b-4fb8-5479-8872-9cb3d3383705", "8cceda67-4c9c-5187-8a0e-fae36799ed85", "bef97385-8ff8-50e6-940f-f0f05b81a9c4", "53298df5-7dec-51dc-b18f-29b2a7165011", "47719f17-1a09-557b-a952-c2ed310910b1", "a0548af2-8959-52a2-ab05-c73a838d9145"], "data": [1, 1, 1, 106, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "scraped_at": {"label": ["16/01/2022 16:17:56", "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "16/01/2022 16:17:57", "16/01/2022 16:17:58", "16/01/2022 16:17:59", " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "16/01/2022 16:18:00", "No: I don\u2019t recommend this product", "3.4091", " lol) has been DRASTICALLY simplified", "16/01/2022 16:18:01", "16/01/2022 16:18:02", "16/01/2022 16:18:03", "16/01/2022 16:18:04", "2bb7b6b6-1b88-5903-a898-0a754ac687d8", "16/01/2022 16:18:05", "16/01/2022 16:18:06"], "data": [13, 106, 52, 45, 47, 1, 55, 1, 1, 1, 32, 29, 27, 43, 1, 45, 1]}, "index_stringindexer_transform": {"label": ["0.0 - 49.8", "49.8 - 99.6", "99.6 - 149.4", "149.4 - 199.2", "199.2 - 249.0", "249.0 - 298.8", "298.8 - 348.6", "348.6 - 398.4", "398.4 - 448.2", "448.2 - 498.0"], "data": [51, 50, 50, 50, 49, 50, 50, 50, 50, 50]}, "name_stringindexer_transform": {"label": ["0.0 - 3.7", "3.7 - 7.4", "7.4 - 11.1", "11.1 - 14.8", "14.8 - 18.5", "18.5 - 22.2", "22.2 - 25.9", "25.9 - 29.6", "29.6 - 33.3", "33.3 - 37.0"], "data": [407, 62, 5, 3, 4, 4, 3, 4, 4, 4]}, "brand_stringindexer_transform": {"label": ["0.0 - 2.1", "2.1 - 4.2", "4.2 - 6.3", "6.3 - 8.4", "8.4 - 10.5", "10.5 - 12.6", "12.6 - 14.7", "14.7 - 16.8", "16.8 - 18.9", "18.9 - 21.0"], "data": [362, 78, 33, 13, 3, 2, 2, 2, 2, 3]}, "sku_stringindexer_transform": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [280, 132, 22, 38, 11, 10, 2, 1, 2, 2]}, "reviewer_name_stringindexer_transform": {"label": ["0.0 - 41.5", "41.5 - 83.0", "83.0 - 124.5", "124.5 - 166.0", "166.0 - 207.5", "207.5 - 249.0", "249.0 - 290.5", "290.5 - 332.0", "332.0 - 373.5", "373.5 - 415.0"], "data": [126, 41, 42, 41, 42, 41, 42, 41, 42, 42]}, "review_title_stringindexer_transform": {"label": ["0.0 - 39.2", "39.2 - 78.4", "78.4 - 117.6", "117.6 - 156.8", "156.8 - 196.0", "196.0 - 235.2", "235.2 - 274.4", "274.4 - 313.6", "313.6 - 352.8", "352.8 - 392.0"], "data": [147, 39, 39, 39, 39, 40, 39, 39, 39, 40]}, "review_description_stringindexer_transform": {"label": ["0.0 - 43.4", "43.4 - 86.8", "86.8 - 130.2", "130.2 - 173.6", "173.6 - 217.0", "217.0 - 260.4", "260.4 - 303.8", "303.8 - 347.2", "347.2 - 390.6", "390.6 - 434.0"], "data": [109, 43, 44, 43, 43, 44, 43, 44, 43, 44]}, "recommended_review_stringindexer_transform": {"label": ["0.0 - 1.9", "1.9 - 3.8", "3.8 - 5.7", "5.7 - 7.6", "7.6 - 9.5", "9.5 - 11.4", "11.4 - 13.3", "13.3 - 15.2", "15.2 - 17.1", "17.1 - 19.0"], "data": [464, 15, 7, 2, 2, 2, 2, 2, 2, 2]}, "verifed_purchaser_stringindexer_transform": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [466, 15, 6, 3, 1, 2, 2, 1, 2, 2]}, "helpful_count_stringindexer_transform": {"label": ["0.0 - 3.5", "3.5 - 7.0", "7.0 - 10.5", "10.5 - 14.0", "14.0 - 17.5", "17.5 - 21.0", "21.0 - 24.5", "24.5 - 28.0", "28.0 - 31.5", "31.5 - 35.0"], "data": [453, 15, 7, 3, 4, 3, 4, 3, 4, 4]}, "not_helpful_count_stringindexer_transform": {"label": ["0.0 - 4.6", "4.6 - 9.2", "9.2 - 13.8", "13.8 - 18.4", "18.4 - 23.0", "23.0 - 27.6", "27.6 - 32.2", "32.2 - 36.8", "36.8 - 41.4", "41.4 - 46.0"], "data": [448, 14, 5, 5, 4, 5, 5, 4, 5, 5]}, "reviewed_at_stringindexer_transform": {"label": ["0.0 - 4.5", "4.5 - 9.0", "9.0 - 13.5", "13.5 - 18.0", "18.0 - 22.5", "22.5 - 27.0", "27.0 - 31.5", "31.5 - 36.0", "36.0 - 40.5", "40.5 - 45.0"], "data": [385, 58, 15, 8, 10, 5, 5, 4, 5, 5]}, "rating_stringindexer_transform": {"label": ["0.0 - 1.8", "1.8 - 3.6", "3.6 - 5.4", "5.4 - 7.2", "7.2 - 9.0", "9.0 - 10.8", "10.8 - 12.6", "12.6 - 14.4", "14.4 - 16.2", "16.2 - 18.0"], "data": [380, 81, 23, 4, 2, 2, 2, 2, 2, 2]}, "average_rating_stringindexer_transform": {"label": ["0.0 - 1.5", "1.5 - 3.0", "3.0 - 4.5", "4.5 - 6.0", "6.0 - 7.5", "7.5 - 9.0", "9.0 - 10.5", "10.5 - 12.0", "12.0 - 13.5", "13.5 - 15.0"], "data": [253, 103, 100, 18, 18, 1, 2, 1, 2, 2]}, "reviews_count_stringindexer_transform": {"label": ["0.0 - 1.2", "1.2 - 2.4", "2.4 - 3.6", "3.6 - 4.8", "4.8 - 6.0", "6.0 - 7.2", "7.2 - 8.4", "8.4 - 9.6", "9.6 - 10.8", "10.8 - 12.0"], "data": [253, 105, 81, 30, 18, 8, 1, 1, 1, 2]}, "comment_id_stringindexer_transform": {"label": ["0.0 - 39.4", "39.4 - 78.8", "78.8 - 118.2", "118.2 - 157.6", "157.6 - 197.0", "197.0 - 236.4", "236.4 - 275.8", "275.8 - 315.2", "315.2 - 354.6", "354.6 - 394.0"], "data": [145, 39, 40, 39, 39, 40, 39, 40, 39, 40]}, "uniq_id_stringindexer_transform": {"label": ["0.0 - 39.4", "39.4 - 78.8", "78.8 - 118.2", "118.2 - 157.6", "157.6 - 197.0", "197.0 - 236.4", "236.4 - 275.8", "275.8 - 315.2", "315.2 - 354.6", "354.6 - 394.0"], "data": [145, 39, 40, 39, 39, 40, 39, 40, 39, 40]}, "scraped_at_stringindexer_transform": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [161, 99, 45, 88, 32, 56, 14, 1, 2, 2]}}}, "ManualFE": {"FE": [{"transformationsData": [{"feature_label": "index", "transformation_label": "String Indexer"}], "feature": "index", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "211.5", "stddev": "122.54", "min": "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "max": "in between each secret is so satisfying.\"", "missing": "0", "distinct": "499"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "index"}, {"transformationsData": [{"feature_label": "name", "transformation_label": "String Indexer"}], "feature": "name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "469", "mean": "", "stddev": "", "min": " and they kind of fight over it.  They really like the retro Mario on the controller", "max": "yes: I recommend this product", "missing": "31", "distinct": "38"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "name"}, {"transformationsData": [{"feature_label": "brand", "transformation_label": "String Indexer"}], "feature": "brand", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "451", "mean": "", "stddev": "", "min": " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", "max": "yes: I recommend this product", "missing": "49", "distinct": "22"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "brand"}, {"transformationsData": [{"feature_label": "sku", "transformation_label": "String Indexer"}], "feature": "sku", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "451", "mean": "266631.73", "stddev": "99207.12", "min": " #1 is eARC (awesome)", "max": "yes: I recommend this product", "missing": "49", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "sku"}, {"transformationsData": [{"feature_label": "reviewer_name", "transformation_label": "String Indexer"}], "feature": "reviewer_name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "453", "mean": "19.92", "stddev": "101.18", "min": " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "max": "zachR", "missing": "47", "distinct": "416"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviewer_name"}, {"transformationsData": [{"feature_label": "review_title", "transformation_label": "String Indexer"}], "feature": "review_title", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "445", "mean": "0.0", "stddev": "0.0", "min": " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "max": "look out gamerz, here comez awsome", "missing": "55", "distinct": "393"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "review_title"}, {"transformationsData": [{"feature_label": "review_description", "transformation_label": "String Indexer"}], "feature": "review_description", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "454", "mean": "3.84", "stddev": "1.83", "min": " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "max": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "missing": "46", "distinct": "435"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "review_description"}, {"transformationsData": [{"feature_label": "recommended_review", "transformation_label": "String Indexer"}], "feature": "recommended_review", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "425", "mean": "4.09", "stddev": "1.21", "min": " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", "max": "yes: I recommend this product", "missing": "75", "distinct": "20"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "recommended_review"}, {"transformationsData": [{"feature_label": "verifed_purchaser", "transformation_label": "String Indexer"}], "feature": "verifed_purchaser", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "258", "mean": "655.06", "stddev": "958.24", "min": " and to get 4K", "max": "yes: I recommend this product", "missing": "242", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "verifed_purchaser"}, {"transformationsData": [{"feature_label": "helpful_count", "transformation_label": "String Indexer"}], "feature": "helpful_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "424", "mean": "7017251.36", "stddev": "36576741.04", "min": " 2", "max": "Verified Purchaser", "missing": "76", "distinct": "36"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "helpful_count"}, {"transformationsData": [{"feature_label": "not_helpful_count", "transformation_label": "String Indexer"}], "feature": "not_helpful_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "424", "mean": "4495646.89", "stddev": "30454540.27", "min": " 3", "max": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "missing": "76", "distinct": "47"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "not_helpful_count"}, {"transformationsData": [{"feature_label": "reviewed_at", "transformation_label": "String Indexer"}], "feature": "reviewed_at", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "423", "mean": "91221663.0", "stddev": "124910521.85", "min": " and Experimental", "max": "fa660933-1130-5c66-9010-24d641f70bc7", "missing": "77", "distinct": "46"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviewed_at"}, {"transformationsData": [{"feature_label": "rating", "transformation_label": "String Indexer"}], "feature": "rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "406", "mean": "313231.79", "stddev": "6185743.26", "min": " and no larger maps to choose from. In the first version you had a large selection of maps", "max": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "missing": "94", "distinct": "19"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "rating"}, {"transformationsData": [{"feature_label": "average_rating", "transformation_label": "String Indexer"}], "feature": "average_rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "398", "mean": "4.44", "stddev": "0.43", "min": " and experimental units are really not that great", "max": "ef72459e-8f5c-57dc-af42-0127d2903498", "missing": "102", "distinct": "16"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "average_rating"}, {"transformationsData": [{"feature_label": "reviews_count", "transformation_label": "String Indexer"}], "feature": "reviews_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "396", "mean": "978.9", "stddev": "1006.83", "min": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "max": "4.6556", "missing": "104", "distinct": "13"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviews_count"}, {"transformationsData": [{"feature_label": "comment_id", "transformation_label": "String Indexer"}], "feature": "comment_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "165972981.36", "stddev": "56535283.62", "min": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "max": "95223899", "missing": "105", "distinct": "395"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "comment_id"}, {"transformationsData": [{"feature_label": "uniq_id", "transformation_label": "String Indexer"}], "feature": "uniq_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "117776414.0", "stddev": "113745916.96", "min": " don't make the same mistake I did. Do not buy this game.\"", "max": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "missing": "105", "distinct": "395"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "uniq_id"}, {"transformationsData": [{"feature_label": "scraped_at", "transformation_label": "String Indexer"}], "feature": "scraped_at", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "3.41", "stddev": "nan", "min": " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "max": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "missing": "105", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "scraped_at"}, {"feature": "index_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "248.5", "stddev": "144.48", "min": "0.0", "max": "498.0", "missing": "0"}, "updatedLabel": "index_stringindexer_trans..."}, {"feature": "name_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.87", "stddev": "5.64", "min": "0.0", "max": "37.0", "missing": "0"}, "updatedLabel": "name_stringindexer_transf..."}, {"feature": "brand_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.07", "stddev": "2.84", "min": "0.0", "max": "21.0", "missing": "0"}, "updatedLabel": "brand_stringindexer_trans..."}, {"feature": "sku_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.0", "stddev": "2.39", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "sku_stringindexer_transfo..."}, {"feature": "reviewer_name_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "172.75", "stddev": "134.22", "min": "0.0", "max": "415.0", "missing": "0"}, "updatedLabel": "reviewer_name_stringindex..."}, {"feature": "review_title_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "154.81", "stddev": "128.01", "min": "0.0", "max": "392.0", "missing": "0"}, "updatedLabel": "review_title_stringindexe..."}, {"feature": "review_description_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "188.88", "stddev": "138.02", "min": "0.0", "max": "434.0", "missing": "0"}, "updatedLabel": "review_description_string..."}, {"feature": "recommended_review_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.67", "stddev": "2.24", "min": "0.0", "max": "19.0", "missing": "0"}, "updatedLabel": "recommended_review_string..."}, {"feature": "verifed_purchaser_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.83", "stddev": "1.77", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "verifed_purchaser_stringi..."}, {"feature": "helpful_count_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.82", "stddev": "5.31", "min": "0.0", "max": "35.0", "missing": "0"}, "updatedLabel": "helpful_count_stringindex..."}, {"feature": "not_helpful_count_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.58", "stddev": "7.87", "min": "0.0", "max": "46.0", "missing": "0"}, "updatedLabel": "not_helpful_count_stringi..."}, {"feature": "reviewed_at_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "4.37", "stddev": "7.76", "min": "0.0", "max": "45.0", "missing": "0"}, "updatedLabel": "reviewed_at_stringindexer..."}, {"feature": "rating_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.11", "stddev": "2.26", "min": "0.0", "max": "18.0", "missing": "0"}, "updatedLabel": "rating_stringindexer_tran..."}, {"feature": "average_rating_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.89", "stddev": "2.04", "min": "0.0", "max": "15.0", "missing": "0"}, "updatedLabel": "average_rating_stringinde..."}, {"feature": "reviews_count_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.77", "stddev": "1.7", "min": "0.0", "max": "12.0", "missing": "0"}, "updatedLabel": "reviews_count_stringindex..."}, {"feature": "comment_id_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "155.63", "stddev": "129.4", "min": "0.0", "max": "394.0", "missing": "0"}, "updatedLabel": "comment_id_stringindexer_..."}, {"feature": "uniq_id_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "155.63", "stddev": "129.4", "min": "0.0", "max": "394.0", "missing": "0"}, "updatedLabel": "uniq_id_stringindexer_tra..."}, {"feature": "scraped_at_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "3.75", "stddev": "3.19", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "scraped_at_stringindexer_..."}], "message": "Successfully executed", "status": 1, "userid": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "autoFE_flag": true, "stageId": "678c3d1a820abd653b9b85bf", "FESamplePath": "/FileStore/platform/sampleData/678c3d1a820abd653b9b85bf_AutoFE/part-00000-77160c74-9d0c-46b9-81b6-16c14a2fede6-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/678c3d1a820abd653b9b85bf_AutoFE/part-00000-77160c74-9d0c-46b9-81b6-16c14a2fede6-c000.csv", "samplecount": 500, "originalcount": 5321, "dataPercentage": "10", "FEGraph": [{"values": {"label": ["0", "1", "2", "3", "FYI...the 65\u201d HD television I had to replace was a Samsung that was about 4 or 5 years old that stopped working after some loud cracking and popping noises that sounded like the transformer on an overhead power line blowing out. However", "4", "5", "6", "7", "8", "I am so happy to have this wonderful big one for my first OLED TV", "9", "10", "11", "12", "13", "14", "15", "16", "17", "This thing is only $20 more than the ES2", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "The \u201ccrafted world\u201d is exceptionally detailed", "The gameplay is tight", "Most importantly", "28", "29", "30", "31", "32", "He agreed this morning while watching NASCAR that I was right. Yeah for me.\"", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "Wonderful OLED TV\"", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "More color Yoshi\u2019s to choose from and a forward and backwards game in every course. It\u2019s a lovable game to play!\"", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "Pros:", "1. The picture is absolutely gorgeous and you can tune it further to your choice.", "2. The Smartcast interface is decent.", "3. The remote is also not bad at all.", "4. Very quick to connect apple play. ", "5. There are ample connection options for my bedroom", "Cons:", "1. Cast is buggy. I can never get it to run first time. This is where I would focus most of the development time if I were Vizio.", "2. Smart Cast does not have a browser app that is accessible easily.", "3. There is no easy way to add more apps that are not already in the Vizio library.", "4. The detail picture quality will not go up to the level you get out of a top line OLED. ", "5. The bezel is still not near zero bezel size. It is sizable to be noticeable.", "Overall", "95", "The Good: Smart casting features. ", "The Bad: Pre-calibrations could improve", "THE UGLY: Very Very buggy software. Doesn't start a lot of times and have to re-plug many times. Brings me Anxiety.\"", "96", "A few quirks with the PS5 too. Sometimes when I power on the TV it also turns on the PS5. Sometimes when I power on the PS5 the TV turns on too. Neither seems to be consistent. ", "Needs and HBO Max app. Also needs to be able to disable inputs from the list like in previous Vizio models. ", "All minor issues and possibly handled via software or firmware updates. The hardware is solid though.\"", "97", "98", "99", "100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "120", "121", "122", "123", "124", "125", "126", "127", "128", "129", "130", "131", "132", "133", "134", "Make", "Stuff in your house.\"", "135", "136", "137", "138", "139", "140", "The important thing you might not first look for in a TV is how black the blacks are", "The only issue I have is the speakers leave a bit to be desired. They\u2019re ok", "141", "142", "143", "144", "145", "146", "147", "148", "149", "150", "151", "152", "153", "154", "155", "156", "157", "158", "159", "160", "161", "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "The picture is beyond amazing!! OS is smooth and video games look so darn good! Im buying the 65\"\" for the front room next week!\"", "172", "I\u2019d love to be able to recommend merely because of the picture and viewing angles alone", "173", "174", "175", "176", "177", "178", "I am so glad I gave it a chance!\"", "179", "180", "181", "182", "183", "184", "185", "186", "187", "188", "189", "190", "191", "Going back and forth between each level", "in between each secret is so satisfying.\"", "192", "193", "194", "195", "196", "197", "198", "199", "200", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "212", "213", "214", "215", "216", "217", "218", "219", "220", "221", "222", "223", "224", "225", "226", "227", "228", "229", "230", "231", "232", "233", "234", "235", "236", "237", "238", "239", "240", "241", "242", "243", "244", "245", "246", "247", "248", "249", "250", "251", "252", "253", "254", "255", "256", "257", "258", "259", "260", "261", "262", "263", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "It's great...color", "275", "276", "277", "278", "279", "With its easy to mount", "Out of the box it had a firmware update. and then a week later another.  the 2nd was a bit rude", "I am using the amazing OLED with a brand new 4k reciever with eARC.  So everying goes through the Amplifiter through a high end HDMI ARC certified cable to the TV's HDMI 1 (eArc).  Most days its running fantastic and smooth as expected.  Although", "280", "281", "282", "283", "284", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "1) airplay doesnt work 90% of the times unless i go into admin & privacy and reboot the TV.", "2) even after reboot it doesnt work 50% of the times", "3) same issue with chrome cast as well", "4) TV screen turns off while mirroring screen via my Ipad every 10-15 minutes.", "5) while connected to HDMI port when im in zoom meeting using TV as external monitor", "6) Home button doesnt work 50% of the times", "298", "299", "300", "301", "302", "303", "304", "305", "306", "307", "308", "309", "310", "Love how everything looks like crafts. ", "As a Yoshi/Poochy fan I enjoy the Yoshi games.\"", "311", "312", "313", "314", "315", "316", "317", "318", "319", "320", "321", "322", "323", "324", "HOWEVER", "This is still a really good TV. But the growing pains right now would keep me from recommending it to others. (I'm coming from a 2018 Vizio P series)\"", "325", "326", "327", "328", "329", "330", "331", "332", "333", "334", "335", "336", "337", "338", "339", "340", "341", "342", "343", "344", "345", "346", "347", "348", "349", "350", "351", "352", "My only critique is that I wish it performed @ a 1440p resolution. Everything else is great!\"", "353", "354", "355", "356", "357", "358", "359", "360", "361", "362", "I like that this is wireless with sensors ", "This controller has Bluetooth", "The motion controls are awesome", "This has a design that feels good in the hands", "My nephews prefer this over the other wireless controller we have", "363", "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "*the added mappable buttons could come in handy even though I haven't used those yet.", "*the cost is much less than the Nintendo pro controller. ", "The cons:", "*slightly unconventional setup. ", "It's not a problem though if you read the instructions. ", "*its lighter in weight which makes me wonder about durability. ", "Makes a perfect 2nd controller for kids.\"", "364", "365", "366", "367", "368", "369", "370", "371", "372", "373", "374", "Great sequel to Wooly World\"", "375", "376", "The addition of being allowed to manually aim your eggs removes some of the frustration that earlier titles had and there are collectible items in abundance for completionists. That all said", "The biggest hiccup in the game I think is the mini quests you get. Each level has multiple different set pieces that a robot will want you to collect. The issue is you can only do one at a time so the game asks you to play through one level at least 6 or 7 times and it can get rather tedious at times. My suggestion is that if you are collecting everything", "In the end the game is a relaxing adventure through a handcrafted (Almost literally) world that never fails to charm. Perfect for players of all ages", "377", "378", "It's a great game for kids and adults!\"", "379", "380", "381", "382", "The one thing that would truly be the cherry on top", "383", "384", "385", "386", "387", "388", "389", "390", "391", "392", "393", "394", "395", "396", "397", "398", "399", "400", "401", "402", "403", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417", "418", "419", "420", "Thx", "Xbox Series x\"", "421", "422", "423", "He absolutely loves it. It linked up easily and is user friendly. ", "He loves the two on the fly buttons he can map to Make his play more custom. "], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "index", "count": 499, "min": "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "max": "in between each secret is so satisfying.\""}, {"values": {"label": ["VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", " my 42\u201d VIZIO that I bought in \u201808 doesn\u2019t even have a single bad pixel. Food for thought.\"", " of which screen is fantastic and very light compared to my previous one indeed.\"", "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", " and you know they could\u2019ve easier made it $100 more and still sold out. Amazing.\"", "Yoshi's Crafted World - Nintendo Switch", " with cardboard cutouts", " with seamless reaction times and plenty of opportunities to save yourself from mistakes.  Easy enough for kids to pick up", " this game is fun!\"", "yes: I recommend this product", "No: I don\u2019t recommend this product", " for the price it is a good deal.\"", "Supreme Commander 2", " followed by how light the screen can be without a terrible contrast. This TV fit the bill for both. Also", " but if you want a theater experience", " truth is because of the issues at present with the firmware", " finding every nook and cranny ", " sound and price. We have had Visos in the past and have been very pleased.\"", " easy setup", " as it occurred in the middle of a show without warning.", " the TV has 2 behaviors that need adjusting", "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", " i will have to reboot more than once", " it throws message no signal detected and turns off TV after few minutes", " unless TV is rebooted\"", " there are a few headaches that is keeping me from recommending it", "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", " so I'm not tied down with a cord.  ", " mappable buttons", " this is a smart product!", " it is not bulky or hard to work.  ", " and they kind of fight over it.  They really like the retro Mario on the controller", "WRC 8 FIA World Rally Championship - PlayStation 4", " the game is not meant for those looking for a challenge. I don't need dark souls levels of difficulty", " don't try to get it all at once because I assure you you will be back through that level multiple times.", " but if you're looking for a challenge I would look elsewhere.\"", " would be to have a microphone on the remote control to search for a program like the roku\u2019s do. ", " it is a good sized tv with an amazing picture. Well worth it.\""], "data": [140, 1, 1, 82, 1, 140, 1, 1, 1, 45, 2, 1, 22, 1, 1, 1, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 22, 1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 1]}, "label": "name", "count": 38, "min": " and they kind of fight over it.  They really like the retro Mario on the controller", "max": "yes: I recommend this product"}, {"values": {"label": ["VIZIO", "yes: I recommend this product", "Microsoft", "Nintendo", " Pinterest worth constructions", " but easily enjoyed by gamers of all ages", "No: I don\u2019t recommend this product", "Verified Purchaser", "Square Enix", " this TV is fully ready for the Max features of the Series X and PS5.", " buy a sound bar or speakers.\"", " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", " the show just begins with its amazing ink black levels", " not sure if its me or a firmware update.  They are: the screen goes blank when new input isnt supplied", "Little Orbit", " while im still in between the meeting.", " the first is the HDMI 2.1 port. The OLED h-1 has 4 HDMI ports", "PowerA", " fully programmable", " and make fun of me because it was brand new \"\"in my day\"\".  This is fun", "Maximum Games", " but at least some sort of resistance would have been nice. Levels can basically be run through rather blind if you're not hunting for every red coin or flower. Even the challenge levels at the end of the game don't really have much bite to them."], "data": [140, 56, 82, 140, 1, 1, 2, 6, 22, 1, 1, 1, 1, 1, 11, 1, 1, 22, 1, 1, 7, 1]}, "label": "brand", "count": 22, "min": " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", "max": "yes: I recommend this product"}, {"values": {"label": ["328244", "yes: I recommend this product", "307392", "Verified Purchaser", "191609", " and vibrant colors that pop on everything from the tiny Switch screen to a 70\u201d flatscreen TV.", "0", "522023", "No: I don\u2019t recommend this product", " beautiful imagery from its 1080P to its upscaling to 4k", " ie your movie is paused. And you need to press the OK on the remote to wake it up.  Having your show resume", "119061", " #1 is eARC (awesome)", "231963", " and more.  ", " so I'd definitely recommend this product.\"", "205005"], "data": [140, 50, 82, 3, 140, 1, 16, 22, 1, 1, 1, 11, 1, 22, 1, 1, 7]}, "label": "sku", "count": 17, "min": " #1 is eARC (awesome)", "max": "yes: I recommend this product"}, {"values": {"label": ["Leeford", "DJM7", "EC82", "Weeto", "0", "LexusSC400", "Ninjaafro", "von R", "Ohio Erik", "jonck", "Bob279", "NuggetsOne", "AJ V", "Always a fool", "RootM0d", "Ozlas", "Odium Prius", "Ryan CIN3MATIX", "Punkwaste", "CosmicOwl", "Skyturtle97", "Pitbull91101", "Mykd", "Chigg", "Prieto56", "Iz B", "Angel Marred", "Derrick Evans", "Jeremy Green", "zachR", "1", "Carl78", "Alejandro Rivera", "Pixle101", "Sillypajamas", "John4", "Mike1921", "Bmitch20", "karena", "Babes70", "Koky87", "Dcm388", "SunnyS", "Spenceleoz", "Rich190", "DrKillem", "Areria", "eyesayahh", "Animehipster", "Moi93", "Geo R", "JohnHalo117", "GrabAzzery", "Chaz54", "Jukeman79", "dfint", "SamuraiMatt", "DKCBatch", "VileMKII", "LRoberto", "Philliptate7", "Toxicbug", "Bardot", "tackomoto", "Bob81", "Porkchop76", "Bino7899", "Doblado98", "Super Awesome!", "jpc3", "Terry T.", "Canothegreat", "shane19", "R Robles", "IanMan141", "Anonymous", "Gaming reviews6", "twojoesf", "Marco AP", "I own this", "Fa crediblenick", "516", "M4lmx81", "NicoleD90", "MDB3", "Bigbadbarry", "Scott79rod", "BubbaHero4All", "Diana finley", "HeliosExe", "platygirl", "2-Apr", "Candice S", "Woodbine23", "Maximus", "Pat23", "woodbine23", "Rajib", "KristovM", "goobs150", "sftaylor614", "Johnboi781", "Harbinger86", "King TJ 09", "Biobroly24", "Killerxxx08", "Parker86", "PUGLOVERRG", "Kamna", "Natees", "Nate Corneliusen", "Racheljay11", "D3vonator", "Vegas momma", "Henrio", "Jeefly", "BoJackson87", "tankgod1", "16nflp", "Joey3245", "chiknwingding", "GeneralM99", "fiddlegammer11", "Commando38", "CoD4 Veteran 13", "TheGamerGalore", "agent00aa", "jonso", "KingEdd", "Ems C", "Leon81", "Kids love i", "Marshmilo", "makeshift SP", "Marc reed", "Kwoodky", "Marieleisele", "Jb2827", "TCTV", "Mofa", "Cat711", "FXDLS110", "GASMAN", "ectaylo", "Melony", "Slair", "ll1cool1", "DK4345", "Hothroy", "Zanderspike", "N Zero", "daSurge", "James0023", "Adyn Evans", "glumee", "Azucarmamacita", "dahc", "killer_kenne", "JustWill1982", "Theraven16", "Penutt2", "TheMonty", "Drdrums", "Midwestmikey", "Chrissy in ny", "Vman", "T. Lawson", "deshon", "MPock", "DaBurghLover", "Buck Bull Stallion", "MrGregory2000", "cliff90", "Barry1226", "Timbo88", "Assassionator", "Brannon M", "Johnson1720", "Disappointeddd", "JLAxxSPARTAN", "Henroc", "Seena", "RandiBeth", "Elope90", "Cfm1985", "BubonicChronic", "Buttztallion", "Digmyearth", "JackB72", "RobertKW", "Angelrose2", "Noz 37", "AikenAidan", "Kyoungblood", "SumoSpike", "Deathsprophet", "Bumzab", "nonxaznxboi", "Kerican", "Cycephenom", "DemonWolfC6", "Gamerguy", "Mkaz", "MRDSIGN", "Rcmm", "Angela W", "Shaun7979", "Blurr60", "Twan", "Res136", "Jcompu466", "Astraeus", "dRn00bies", "Nicole F", "David Armando", "spartan19", "BxBNicX", "The name John was taken", "Jrjbaj", "PetLover62", "Gamer Man77", "Patrick Giles", "Blackfeather666", "Dadadum", "Mr Dingus", "DarkEmpressAly", "mariofamily", "DaddyRay78", "Amanda Cooper", "JA II", "MM213", "Androl123", "RayMel5", "VALumiere", "Mikeiceman", "PM117ER", "Patrick w7", "JakeO62", "Rambo34", "jws1025", "Mattoxbox", "Ellie RA", "mdfsandman", "thearchie32", "boilerone", "Quando", "None, none", "Jos\u00e9viera264", "The truth", "A-bomb", "John26", "dmartinez097", "JPez1", "Luccon7", "xTheSandman72", "Doomcrew", "Da1trueS4nch3Z", "NexusWolf", "The1stAv3ng3r", "JCMB", "cheeseman585", "Sixkids", "Jerk unit", "TheArgyleWizard", "CampM", "Carebear43055", "CWB!", "RickZ", "The Doctor", " to its true 4K Glory. ", " doesnt do it.  and the 2nd is that a few times now", "TOGA Sarge", "JMCH", "Margot", "Skeet96", "MikeOxlong69", "TimB76", "LivinLow", "Neco46", "Cbj4892", "Shaqcool", "Unlockable51", "AceZero17X", "DumbMarsupial", "mn1meii", "Greg11", "Drew6977", "Shafi", "RedRaider", "cccmak126", "RomS", "Fivonefivo", "Imagine1959", "TomDawg1", "KarateBear", "ChristyJay", "AnnB", "Sleepy Ninja", "SD Dad", "Nyxian", "Izzy28", "lenosaurio", "Kelchyd", "Mipsie", "Heather0101", "Hutchworld", "Stude", "Ybreeze5", "Kenny H", "StevieC", "Jethro2312", "ACyberPoet", "Jojo2414", "Chasd", "McFang", " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "phyra", "Anthony87", "Richard947", "Jon bc", "Justmeow0417", "halfjew22", "Eglandon", "Kittencakes", "FireWife", "Brennan91", "Josr85", "Yoshi Fan1", "ShadowKnight92", "R00T666", "Mr Eric", "Dadgames", "Weasel771q", "Anthony Nussbaum", "kschneider1231", "Rwarmander", "Randy cox", "IrishRunner", "Ray T", "SDotRinney", "Prakers", "PaulS", "Whydoihavetohaveanickname", "Britan91", "Ezirkle", "Carlos G.", "Radwithab", "Meadow", "Jess2274", "MandM", "Cheeks784", "cwinniebear24", "Mommyof2boyz", "DiamondAries999", "yes: I recommend this product", "RachelA1020", "Court the Sport", "NSU_Ant", "IAMTHEWHEELMAN", "Alllly", "The monumental", "Sarge97502", "Holden Macaque", "Christow", "ghostdph", "carauza", "Charlie from VA", "emperordesslok", "Jack Badgerlord Fox", "SusieK", "Mebunny", "Drumfreak117", "TitusJ99", "MotherMayI", "LaBestia", "Lauri49", "jmrichard427", "Tom42", "Cowboy101084", "Mugen", "Suzey", "Concerned vizio tv owner.", "mh061", "Golam41", "KLP26", "Mdcsooc7", "Joedtip", "Cvoshell4", "Missy23", "Kiki2014", "Mama", "M3WILKERSON", "Beau C", "Lisalou5150", "Videogamegente", "JJ77GB", "JDHarsh", "Greenender23", "Arjei Lynne", "Abish", "Simi90", "Davebasura", "JCMA", "Pappabear03187", "Liberty25", "Ghost Dylan", "Jasper L.", "VinnyD", "adrianiii", "Bgerald", "JON205", "Joey D215", "TomsVizio", "Ricw", "JustJess76", "Pvtcarlswife"], "data": [1, 1, 1, 1, 23, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 14, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "reviewer_name", "count": 416, "min": " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "max": "zachR"}, {"values": {"label": ["look out gamerz, here comez awsome", "Great looking screen!", "Quality", "Unbelievable picture quality!", "0", "Vizio OLED", "Bugs", "Glass like screen", "Amazing 4k picture", "Great features", "Great picture and a good price", "Awesomeness!", "Fantastic product", "Not all as it seems", "Beautiful design - Awesome feel - Must get one!", "Simply amazing", "Limited Edition Halo Controller", "Beautiful Elite Series 2", "Firing on all cylinders.", "Rad sauce", "Excellent purchase.", "Yoshi switch game", "Awesome game if you like the Mario brothers games.", "Awsome game...", "Awesome Game for Children!", "Poochy", "Not bad", "Opinion on Yoshi Crafted World", "Another Win-tendo Jewel!!", "Good game", "Best Nintendo game I ever played!", "Brilliant picture", "Absolutely amazing picture quality", "This tv is vibrant", "10 months ago", "Great picture, confusing to turn on", "Nice tv", "Gorgeous picture!", "Love this TV!!", "Great tv for value", "Best tv for the price", "TV is awesome!!", "Xbox Elite Controller 2 - Halo Edition", "Premium Halo Xbox Elite Controller", "Amazing!", "Great controller but late shipping", "Best Controller", "Great controller", "Halo Elite Series 2 Controller", "Buy one if you can find it!", "Halo Infinite Controller:)", "A High Quality Masterpiece", "Yoshi party", "BUY IT", "Tank Yoshi and the layered egg aiming", "Yoshi's Crafted World", "Good", "Super awesome", "1 or 2 player fun!", "Game play", "Love It", "Fun repeat play factor", "Outstanding!", "Deep blacks", "Great TV for the price", "Amazing tv", "11 months ago", "Great features!", "Great price, Vizio is a reliable brand", "Good TV for the Price but has some issues", "Beautiful oled screen", "Looks great!", "Best Controller!", "Elite  Series 2 Halo Wireless Controller", "Amazing", "Great looking controller!", "Buttons don\u2019t register", "Excellent controller", "Awesome controller", "Solid controller", "This is awesome design", "Awesome!", "Family time", "Yoshi Fun!", "2 years ago", "Awesome", "Great game!", "Yoshi's crafted world", "gud", "Yoshi's Crafted World... Buy it TODAY", "Classic", "Yoshi's crafted world is fun", "Excellent product", "Awesome Features!", "Buggy like no tomorrow", "Almost but not quite", "Great Clarity, Very Very buggy software.", "Gorgeous screen with a few quirks", "Vizio OLED TV", "Love / Hate Relationship", "Excellent tv great picture", "Love it", "Incredible controller!", "Halo Infinite Elite Series 2 Controller", "Halo lovers & competitive players dream", "Xbox elite series 2", "Microsoft Elite 2 Pro Controller Halo Edition", "Beautiful controller", "Worth every penny.", "It's alright", "Easy to pick up, hard to master", "Fun new twist on a Yoshi", "It\u2019s okay", "A Unique 3D Adventure that's hard to resist", "Cute Yoshi game", "A wonderful game", "Yoshi", "Great Game!", "Great game.", "Not as good as it looks", "I don't see how people can't like it", "Great...but...", "Best RTS game made so far", "good, but a little disappointed", "SC2? or sometihng completely  different?", "Crafted Family Fun", "He love it", "Big replay value", "Retro", "Kids love it", "Awesome, Nothing too Over the top", "The game", "Gotta get it!", "Great fun for everyone.", "Reasonable pricing, great OLED", "Very Nice", "Awesome picture", "Great Picture", "Picture is good, the firmware needs improvement", "Really Good TV, I\u2019m not a gamer.", "Great Picture/Horrible Software", "Beautiful picture and great sound!", "Beautiful picture, disappointing software...", "Great colors sometimes", "Xbox Halo Elite Series 2 Controller thoughts.", "Oh so pretty!", "Issues with mine, probably not everyone.", "Great Halo Controller", "Finish the fight!", "Master Chief approves", "Love this controller.", "Coolest controller", "Halo Infinite Elite Controller", "Great once I got the working product.", "Nintendo Just KNOWS Fun!", "Yoshis crafter world", "Cute and fun", "Yoshi crushes another one outta the park!!", "More Yoshi fun.", "Yoshi\u2019s Crafted World", "Beautiful game but a bit overpriced.", "Don\u2019t miss this if you like platformers!", "Great game for kids and adults", "Oled 55in TV", "Blown Away!!!!", "1 year ago", "Awesome picture, firmware need work", "OK Updates would make it better", "Excellent Oled", "Super crisp picture quality", "Okay", "Vizio oled h1", "World Class Display OLED", "Best Picture Ever", "Sticky R thumbstick Resistance.", "Great controller now a little better", "Y button doesnt work all the time.", "Xbox Halo Elite 2 Controller", "Halo LE Elite 2", "Faulty product with known issues", "Xbox Elite Controller Series 2 Halo Edition", "Elite controller", "Halo Elite controller", "Amazing!!", "Not a good game", "I love it!", "Yoshi has never been better.", "Easy but fun", "A fun single player game", "It do like be so it be good", "Cute, crafty fun!", "Surprisingly fun", "You won\u2019t be disappointed if you\u2019re a Yoshi fan!", "Great game and fun", "So where is the GAME?", "This is the WORST SC game peroid!", "dont touch it? i think i will", "Another Dissapointment of 2010 Gaming", "Sorry I'm having a hard time speaking its so Awesome!!", "Do not touch this game with a 10-foot pole", "Tons of fun", "SC 2 - mediocre game.", "Way to destroy the best RTS series ever made!", "Nothing like the first two!", "Great picture quality", "Just short of 5", "Great Value For OLED", "Beautiful Thing", "Incredibly Beautiful Display", "To many problems out the box.", "Skinny", "Price to feature king!", "Great picture", "Great video!", "Beautiful", "Solid slaying ordanince", "GAME CHANGER.", "Very Good", "Weapon of choice for Halo Infinite", "Best controller ever", "Sickest looking Halo Controller Ever", "Solid improvement over the Series 1", "Halo Fanatic Gift", "Getting what you want", "Simple game for Beginning Gamers", "#1", "Fun!", "It's okay, but not the best Yoshi title.", "Yoshi\u2019s crafted world", "Yoshi's Crafted World Review", "Yoshis Crafted World", "Great", "One of the best games!", "A fun RTS", "Sooooo disapointing", "Really nice Controller", "The best Xbox Controller for a Halo fan!!!", "Halo infinite Elite Controller", "Looks pretty - never worked", "Fast shipping. Awesome controller", "Exactly what I was looking for", "Bumpers", "Halo Elite Controller", "High quality controller", "Great picture.  easy setup", "Worth the Money!!!", "Great picture!", "No Slouch", "Wonderful Christmas present from the kids", "Bad picture", "Amazing TV", "Great features, awesome picture, and easy set up.", "Pristine Image!", "Amazing controller", "Fun game!", "Green mean Machine.", "Yoshi is awesome", "A wonderful addition to the Yoshi game series", "Great game", "Love Yoshi!!", "A Modern Take on Yoshi's Story", "Good investment", "A definitely must pickup", "Fun, Beautiful, and Appropriately Challenging", "Love it.", "Great picture Quality", "Need better smart app!", "Great features & Amazing color and clarity", "Great so far!", "Stunning Picture", " the TV just doesnt see any input on HDMI 1", "Mr", "Color", "Fun!!", "Fun With Friends", "Super fun", "Very Hard to Play!", "Nice casual game", "Game of the year", "It ok", "HORRENDOUS!!!!", "horrible", "Great price", "Crystal clear 4k", "Lot of issues with new OLED TV", "Great OLED TV", "Perfect.", "Affordable OLED", "Excellent picture! Very crisp and defined", "Great tv", "Amazing picture", "Bad Trailer, Horrible Game", "Fun", "Couldn\u2019t hold interest", "Fun for all ages", "Yoshi is great", "Great for playing, nightmare for completing", "Yoshi Crafted World", "Super cute and relaxing", "Absolute gem", "Kids will love it!!", "Stunning picture", "Fantastic TV", "Great tv but needs patches as soon as possible", "Love the cost and love the quality overall", "Amazing how far TV has come in just a few years", "EXCELLANT OLED UHD TV", "Absolutely love this TV!", "So many features", "Troublesome TV with amazing potential", " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "Fun 2 player", "Nintendo impressed me again.", "Nintendo fun for everyone!", "Perfect for the little ones", "Family game", "Great graphics, 2 player gameplay awesome", "Awesome game", "Sooo cute~ <3", "Brings out the kid in a 33 year old.", "Unique and colorful world", "Great game for all ages", "Overall Gameplay", "Yoshi at his best!", "Great game for the family", "Another Great Nintendo Game", "Fun to relax with", "Won't turn on", "Love this thing", "The picture!", "Great picture great sound overall a great TV", "Beyond excellent", "Beautiful picture and sound.  Sluggish controls", "Great picture but OS is a bit slow", "Excellent picture quality!", "Enhances Game Play and Fits Perfectly in Hands", "Wirelesa Nintendo Switch Controller", "Eaysy to Use", "excellent value for the cost", "Such a great design", "Enhanced Wireless!!!", "Very good but not perfect.", "3 years ago", "Amazing Controller!", "Like DarkSouls but with Cars! :) Love it!!!!", "Skip it.", "Lots of Fun", "Let the dirt fly and the motor cry", "Wrc8", "Crazy good WRC game.\\m/", "WRC 8 FIA World Rally Championship is great game.", "Yoshi\u2019s crafted world game", "GET THIS GAME!", "Its yoshi!", "Another quality Switch release", "Weaponized Cuteness at it's Finest", "Cute stuff", "Love love love", "Awesome game for all", "Yoshi's Flabby World", "Crafty Business", "Great tv quality - could use a microphone remote", "Beautiful color!", "Fantastic picture", "Great but...", "What a picture!", "Terrible software", "Beautiful Picture", "Great Features!", "Great Features", "Great product!", "Love", "Great product!!", "So retro!", "Works great", "Love it!", "Great for younger kids", "Fun game, awesome graphics", "Cute and fun!", "Needs a better soundtrack.", "Just my thoughts", "Short and sweet", "Beautifully Developed!", "My Yoshi Experience", "OLED55H-1 Sucks!", "Has everything you want for an Oled Tv", "All the bells and whistles!", "Great picture! Great sound!", "Great Choice", "Awesome TV for the PS5 !", "Almost great for gaming", "Great controller!!", "Great bonus features and love graphics"], "data": [56, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 5, 1, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 6, 3, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "review_title", "count": 393, "min": " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "max": "look out gamerz, here comez awsome"}, {"values": {"label": ["My new OLED is a upgrade and it's great!  This is my third Vizio TV to replace my first one that went blank after 12 years of stellar service. (I'm even thinking of getting it repaired if possible for the great grand kids.)   I have always liked the picture quality and the price of Vizio's. You cant go wrong.", "Rating is really a 4.5 but that's unavailable. The unit looks great both in and off. It is short on physical features (Bluetooth and whatnot) but I use both external sound and media units. This is a great OLED to buy if you want a great TV at a reasonable price.", "I\u2019m quite pleased with the entire product as a whole. The quality of picture and sound really speaks for itself when in use.", "I\u2019ve only had my new Visio OLED65 mounted and operating for 3 days now and I\u2019m like a kid who after Christmas can\u2019t get enough of his favorite gift. The brightness and clarity of the picture is another huge by step forward in the evolution of  the television. I find myself seeking out programming that will showcase the quality of the picture regardless of the genre or intended audience. Some of the newer, computer generated cartoons, lack any redeemable qualities (imho) save for the incredible graphics, which are stunningly colorful, bright, and almost as vivid as real life. Nature documentaries and shows involving space, especially when shot in 4K are almost mesmerizing. When I bought my 65\u201d HD tv about 10 years ago I thought I was witnessing the best quality picture that could be produced by anything this side of a mirror. I was wrong, and happily so. If you\u2019re on the fence, like I was, about whether to replace a broken or outdated television with another of similar HD quality, that is to say \u201cstandard high definition\u201d...don\u2019t even waste your time. It\u2019s increasingly difficult to find as 4K is becoming ubiquitous, so that is pretty much a given. On the subject of spending your hard earned money on the more expensive OLED technology....if you have the means, or can somehow figure out how to acquire the means...my advice is definitely do so. Whether you\u2019re into movies, sports, gaming, or even nature/space shows, you will be amazed at the latest leap in picture quality and brightness. And VIZIO offers all the quality at a substantial savings. Putting the absolute best technology within the reach of those of us for whom the strength of the stock market makes absolutely no difference to our bottom line. ", "10 months ago", "The picture is very crisp and the blacks very dark.  Beautiful color.  The Vizio SmartCast app is fantastic.  The response from selections is much faster than the traditional supplied remote.  They update it from time to time with most recent voice search function", "Picture quality is amazing, however within a week from purchasing the tv will not turn on unless I unplug and plug it back in.", "Image is so clear I feel like I\u2019m on the set of the shows.", "I purchased this TV about 2 weeks ago and am blown away by the crisp, 4k picture.  I would definitely recommend this TV to someone considering an upgrade.", "I got this today 2/25 for my birthday present from my son as a surprise gift, without any prior guess or information at all. My previous one in my master bed room was quite old Samsung 50\u201d PD TV, which was ok but heavy and bulky compared to this. ", "Best price on an OLED tv. Has a great picture and is easy to navigate the menus and connect via apple or Android devices. I always bought LG OLED tvs because I liked their quality and features. But so far, Vizio is just as good and a better price.", "Just like the elite controller v2 but halo edition one of the best controllers out there if you do not have one elite\u2019s controller\u2019s are must have.", "First foray with the elite controller. Nothing but impressed. The weight in the hand, the grip, the buttons, and changeable joysticks are all amazing. Even better is the Masterchief finish. If you can't find the halo edition I'd recommend trying the regular elite series 2, I'll never use a different Xbox controller again.", "Really bought this for the blue mode leds, just to find out they are still white leds with a blue coating on them and not that bright. All in all still an elite controller.", "At first I was asking myself why spend the crazy money on a controller!  I too am now a believer.  From the case to cable to finally making its way to the actual controller - it is special in every way.  There is so much detail to this controller.  Lets not forget it is a limited edition and carries a beautiful Halo design.", "The build of this controller is perfect and the details are amazing.", "Cortana herself lives within this controller. I am one with Halo", "This controller has always been great but this one is a work of art.", "Even lighter than my previously owned Elite Series 2, thought it would be heavier. The buttons, the triggers, the analogue sticks, everything operates better than the original Elite Series 2 at launch. ", "14 days ago", "These controllers I think are worth the money. One of my favorite things is that I no longer need double A batteries. It comes with a charging port. And how I can customize the buttons is rad", "Love the controller use it everytime I play. The remote plays excellent. Be carefull of the back buttons though do to being removable I feel like they will wear out faster than most.", "Yoshi game was awesome and still playing it thank u sooo much GameStop :))", "Great game. You will enjoy it. Good price worth it I Always have enjoyed the super Mario series since Mario brothers in the arcade", "My son loves to play this game, he's been playing it every day since he got it... Great Job!!!", "The game is great for a family and younger children. My 4 year old wnjoys the game.", "It would be better if Poochy was in all of the levels.", "It's cute and fun, but feels a little lacking in fulfilling its potential.", "Good game including game play and music also music", "The quirky style that shined in Yoshi\u2019s Wooly World has gotten a serious upgrade in this new gem from Nintendo.  Like all it\u2019s first-party titles, this game is nearly flawless.", "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "2 years ago", "She loves it good game. It easy to play and addicting.", "Yoshi\u2018s crafted world is the best Nintendo game I ever played since Yoshi\u2018s woolly world! Lots of hard challenges to complete and it\u2019s so much fun! I love this game!", "I recently bought this TV and was blown as easy with the picture quality. I never want not to go back to LED.", "I went from an old LCD TV to this Ola TV and the picture quality is amazing this TV has a deep as blocks of ever seen the sound quality is fantastic I could not be happier!", "Bought this yesterday and I am really excited. I saw how clear the picture was and had to have it. Won out over my husband who wanted the Sony.", "5", "I've had this TV for 3 weeks now, so far I really like the picture. it's hooked up to a vizio 2.1 sound bar. it is confusing when I 1st turn the TV on,  I get the Vizio sign on the screen, a few moments later the picture comes on with the TV speakers, then the tv shuts off, a few seconds pass and he comes back on with the sidebar act of and everything is OK then don't understand why it goes off comes on goes off and comes back on", "Great TV at at a reasonable price.  Happy so far with purchase", "I love that I found an OLED that did not break the bank. The picture quality is amazing and VCast is great! The only downside is the sound and it\u2019s only a small complaint on the quality.", "Easy setup and there you go...I love VIZIO TV. I will continue to buy VIZIO TV's !", "Very good image quality, beautiful design on a affordable price", "Oled is king I\u2019ll never go back to traditional led TVs again it\u2019s just not even in the same ballpark you can\u2019t beat the picture quality of and oled", "\"I'm a true fan of vizio. My old 36\"\" Vizio lasted me a very long time and that's the reason why I decided to stick with vizio. Visuals are amazing on this OLED. There are some bugs but they can be repaired by software update patches released by vizio. I also bought the Vizio Atmos soundbar and its absolutely freegin awesome. Only issue I've experienced is the sound bar doesnt activate on its own and I usually have to cycle through the settings to reactivate through HDMI-ARC. Im.sure theres a fix for it. Overall I'm happy with it and still feel vizio makes great products.\"", "It\u2019s amazing! Works perfect, just as an elite controller should. The best part is the paint job! 10/10 recommend.", "This controller provides excellent fine motor control with adjustable thumbstick tension, and removable back peddles.  It works great especially for a first person shooting game like Halo infinite.  It\u2019s on the pricey side, but you know this is a premium product for serious gamers.", "Best Xbox controller I've owned. Worth every penny. Owned for a month with no issues. Only con is I wish there were replacement joysticks, I love these but i know I'm going to wear them out, and I won't have Master Cheif green ones to replace :/", "Great controller. Purchase was definitely worth it. The only problem was the finalizing my payment and the late shipment through GameStop.", "This controller is incredibly responsive. It\u2019s fully customizable with lots of additional features & settings that can be adjusted to your preferences. I was skeptical at first due to the price but after a fair amount of use I wouldn\u2019t game with anything else", "Love the controller no probs with it the first one was lost but customer service made sure I got another one and in a timely manner", "SO BEAUTIFUL! Great addition to my Halo collection. The detail is just amazing. Performs like any other elite series 2 but that color scheme is just phenomenal.", "great controller, beautiful design, ultimate customization", "Doesn\u2019t even feel like an elite controller. But it does feel like an advance one with the grips and joystick converters. Not really worth the money but the design is amazing and there is no battery pack in the back, it\u2019s all built in, like a phone. Over all I love it! I\u2019m such a Halo fan it was a no brainer not to get.", "It feels great, it enhances gameplay thanks to the paddles and customizability, and it looks absolutely beautiful.", "Tons of fun to play with my kids! They love the look and ease of play!", "Awsome title. Loads of fun! My kids and I love it!", "This game is amazing! Almost had given up on the Switch, but this game saved that from happening! It's a great game for people of all ages!", "Fun and cute, but some of the mechanics don't work that well (Tank Yoshi and the mutil-layer egg aiming). Still fun, but needs improvement in the mentioned areas. See Caddicarus' analysis.", "It's awesome! The graphics make everything look like cardboard!", "Fun title that is a good installment to the series. A little bit easy to beat, but has plenty of extras to keep entertained while going for that 100%", "This game was fir my youngest, he picked it out from good reviews online.", "It can be 1 or 2 players. It\u2019s pretty simple mechanics, but there are so many creative was to use them. And there is a lot of replay ability. Me and wife have a blast.", "It\u2019s a game that\u2019s for kids and for adults to enjoy", "Purchased this TV a couple of weeks ago as my existing TV was 10+ years old and needed an upgrade.  Had a salesman take the time to show me the differences between an OLED and other projection systems.  Couldn't be happier with the picture that I am not experiencing.", "My wife loves it. She even lets me play the co-op mode with her sometimes. I\u2019m not that into gaming, but this game is really fun!", "This OLED is Excellent, Very Easy to Operate. I imagine that Someone may Complain but I am certain that it will be a Tribal thing.", "Great tv. I like the vizio apps.the sound is nothing special but if you are buying an OLED you probably have another option. The best part is the deep true black. The colors are very vibrant. I am very satisfied.", "Has some bugs and I know Vizio will work on them a little faster. Especially with the new Xbox series x and ps5. Other than that can\u2019t beat the price for an Oled TV. Great picture. Now Vizio please get the VRR @ 4K120 to work and give us the option to change all picture setting in game mode. No settings should be blanked out.", "I bought this for my birthday and it has been amazing!", "I love the tv and everything about it. I am a big fan of Vizio TVs, except for the sound, you will need a soundbar.", "All my Vizio TVs have held up under use. Hoping the new OLEDs will get firmware updates and continue to make this TV great now and in the future", "Very good OLED tv for the price but it does have some issues with powering on.  If you leave it idle for too long it will \u201cgo to sleep\u201d and the only way to cut it back on is to power cycle.  Other than that I love it.", "Beautiful screen! Awesome price but full of bugs. On my set had to constantly unplug my tv from the  power supply to get it to come on. Worked well with my xbox series x just a few glitches here and there. No 4k 120 for the ps5 so I had to use the 4k 60 hdmi slot. I feel this tv is still in beta and needs alot of firmware updates to address system performance issues.", "I bought this tv because I wanted to try out OLED for the first time. I\u2019m glad I bought it. The colors and contrast are on point. The price compared to the competition in the same category can\u2019t be beat. Super happy.", "Everything I wanted from a controller, in an amazing custom paint job!", "The design is very remarkable great addition to the collection of Halo Series X Console Bundle it a must have.", "I love the pro controller and this one is absolutely beautiful. Must buy", "Works good its perfect for people who game hard-core because it don't ware out as fast and last a long time cheaply priced perfect for your gaming set up!", "I love the classic colors of master Chief! Looks great with my Halo Theme Xbox!", "AXYB buttons do no register unless they are 100% fully pressed in. Annoying there is no pressure sensitivity!", "This no longer available item is excellent and you should buy one, but you can\u2019t.", "Great controller love the way it feels and all the little halo touches it has.", "So far I love the feel and look of this controller. Need to wait and see how the grips hold up to give it a 5 star rating.", "I was lucky to cop a limited edition elite controller  waiting for halo campaign to used", "This game has amazing graphics and amazing levels.", "It fun for your family and if you have kids they will enjoy hours of fun", "I loved the Yoshi yarn game on the 3DS & I love the New Yoshi Yarn game on the switch.", "Great game love every minute of it fun and entertaining", "Excellent condition. Awesome game. My fiance is enjoying it a lot.", "One of the best games I've played in a while absolutely beautiful \u2764\ufe0f", "10/10, it is a very creative, thinking out of the box game, it might be a bit easy, but it is fun to and I will 100% it even if it's the last thing I do.", "OMG, this is the ultimate of fun, silly, fantasy escapism. Sit back, relax, and give yourself an hour to let Yoshi explore the hand-made world of tape, cardboard, and pipe cleaners", "Takes me back to the 90's. Thank you Nintendo! and thank you GameStop for always having great prices and what I want in stock!", "really cute game and its pretty easy for the non gamer . its great to have a son who can help you too", "I purchased several television and soundbars from Vizio from the M series and the SB38", "I purchased this OLED over a week ago along with the Vizio Elevate Soundbar for my new Xbox Series X. I truly appreciate the picture quality experience that this TV can offer. The performance of this TV and Soundbar surely surpass its price point. I strongly recommend this TV for anyone that wants the best performance for the money. I will dare to say that based on my research, this TV will absolutely rival other brands at much more expensive price points.", "I had purchased this knowing it was going to not be perfect but omg. I had to go in and change my ps4 setting for video to even use the menu settings at all. I also cannot use netflix, it won't open from smartcast but when I press the button on the remote it freezes the whole tv on a black screen. This is a serious deal breaking bug.", "I purchased this a week ago and so far so good it's to early to make a define decision.", "I wanted to buy this for long but I am a bit disappointed. I guess my expectations were high but not really sky high.", "11 months ago", "The Best: The TV offers great contrast and clarity. ", "4", "This screen is a beauty. Very sharp, good colors and decent brightness. I hook it up to my PC for gaming and occasionally have some quirks. In the middle of a game it says no signal detected and shuts off. Sometimes it isn't detected by the PC. ", "I bought this 2 weeks ago and has a great picture. It is good for gaming on the xbox series one. The only issue is the VRR does not work and has a distorted picture when I enable it.", "I love the pristine picture, with saturated accurate colors. However, I absolutely hate not being able to turn off the fluctuating luminance. The only thing that spoils a great review is the brightness that changes with how dark the screen is to increase contrast. The TV does not need it, and if I knew who the engineer was that omitted the off selection for this annoyance, I would offer him a Vizio necklace.", "The only issue I have is. I own both ps5 and xbox series x and if I use hdmi ports 2 and 3 4k 120hz I have to unplug the tv every time I turn the tv on I worked around this by using ports 1 and 4 so I'm stuck at 4k 60hz on both consoles unless I want to constantly unplug the tv for it to work but over all I love the oled tv and you have to get a polarized power cable because vizio gives you a non polarized power cable that does not fit the TV power port", "Great item and excellent condition. Works awesome!", "Very cool design, feels great and comfortable in my hands.", "This Halo Infinite Elite Series 2 controller is so awesome with the Halo theme on it, it's beautiful.  Being able to customize the controller to my liking ranging from the controller sticks, d-pad, and how short you want your trigger throw is freaking amazing compared to a normal controller.  Only con is that it's expensive, but once you open up the whole package and unboxing experience it is well worth the price.", "Packaging was 5 stars alone but the feel and customizability of the control and the design made it over the top and it came with the full game download", "Love this controller glad GameStop pro was lookin out and it came in a decent time", "The Microsoft Elite 2 Pro Controller is perfect for the console gamer of any level. The fact that it\u2019s the Halo Edition makes it that much better! I love the controller and I\u2019m glad they came out with this limited edition.", "This is a piece of art, amazing!", "Very well design and heavy feeling, it truly makes you feel like you have a better-quality controller compared to the regular Xbox Series X controller. Would recommend to any gamer specially Halo fan!", "This was my first elite controller and I love it, it\u2019s definitely a game changer and looks beautiful.", "The controller is great but I am experiencing stick drift just two days after receiving it.", "Awesome, love this character! Love the whole game!!!", "Excellent for a relaxing time. Can be challenging if you want to %100 every level.", "Fun and exciting game if you like Yoshi and his classic games", "The game is adorable, the music isn't ear-splitting, and the levels themselves are fun. However, it ends up becoming a chore if you intend to 100% the game with multiple scavenger hunts per stage with a flip-side that is dedicated to finding three dogs under a certain amount of time for the full reward. Ultimately, it's cute and full of heart, but is not recommended to just sit down and 100% in one sitting. It's quick, easy fun enjoyable in small bursts either alone or with a friend.", "I\u2019m not a big gamer. I was so excited when this came out I had to get it. I guess I just expected more", "Nostalgically entertaining and unique 3D adventure that will make it hard for you to put the controller down", "Bought this game for my 12 yr old's birthday.  He really likes to play in multiplayer mode with me.  Definitely fun bonding time!  So far it has been fairly easy to finish each section, without being too easy (working together helps).  I do hope it gets a little harder as we get a little further in.", "Good to see Yoshi on the switch, but it is a slight step down from Yoshi\u2018s woolly world", "Truly amazing. The art style is unique and the gameplay is equally fun as it is relaxing and rewarding.", "I got this game so me and my gf can play together. Its fun and quirky but gets challenging", "Some folks didn't like this game....thought it didn't measure up to the original or Forged Alliance. Boy, are they wrong! I thought this game was great! Maybe the tech tree is a tiny bit smaller, but the game more than makes up for it with new, cool units, great graphics and effects, and awesome explosions. In fairness, I was a little perturbed that that more than one engineer cannot build on the same structure, as in the previous games, but then again, the structures go up pretty quick. Happy hunting!", "Great game. Nothing bad about it. It has many great features and story mode is cool. I think it is awesome.", "This game, in my opinion, is WAAY better than C&C and is very good in gameplay and everything else. Some people say that he storyline is horrible, but that doesn't really effect me since I just play on the skirmish and online. The story line isn't really a big concern. I just play it when I'm bored.", "The story is extremely slow and confusing until you get later into it. It forces you to play as a certain faction first, then another and end with the Cybrans. You should definitely try out the originals, they are ten times better then this. Overall, the gameplay is about the same as the last game, the graphics are much better and the sound and music is again amazing. However, the story development needs more work.", "alright here comes the best game eva, anyway herz a shout out to all of the peeps that think this game is the best eva u rock 4 ur good reviews. anyway the graphics might not be as good as the first but the graphics to me doesn't matter at all since the campaign is awsome and a good storyline. along with the campaign the units and multiplayer maps and experimentals and ect. but i honestly i think the unit count is very low there should be a higher unit count because people have things to do units to make and probably alot of them too and places 4 them to go like in others bases and stuff.", "This game is the absolute best RTS game you can play. And I have played alot of RTS games, so I know what I'm talking about. This game has very good graphics, and they will be even more enjoyable the more you paly the game, considering that you notice things like shadows cast by the terrain, and details such as distortion coming out of a walkers exhaust pipes. This game also has an amazing command system. There are more controls and options you can use to make your army do anything imaginable. This game also includes extra experimental weapons, which they balanced much better than on the first one, and actually have a general purpose rather than to walk into the enemies base and kill. And most people have heard that the nukes on the second ones are pitiful compared to the first. The difference is that on the first one, it was a bright light and smoke covering a large area of the map. On this one, it might be only a little bit smaller, but it is insanely detailed, in the fact that an extremely large portion of the map gets lit up in red, and things are actually moving with the explosion as they would in real life. When it touches water it makes steam and jets it into the air, so nukes on this one are much more enjoyable to watch, regardless of what you've heard. All in all, 10 stars.", "I don't know why people don't like this game, because if you like real-time strategy or RTS, this is the game to get.                                                                                                                                                                                                      I usually only play online and play skirmishes to get better or if no one is as good as me because I can destroy anyone.                                                                                                                                                                                                  I am a veteran at Call of Duty Modern Warfare 1 and 2 so don't try and kill me or fight me.", "What Gas Powered Games have done here is amazing, this game is packed with more units, new features, less glitches, and a lot more excitment. what i was really taken with is that there is no +mass or -mass anymore, its all based on real numbers. the tech tree feature is amazing, allowing you to upgrade old units to make them more lethal later in the game. a lot of the good things are still their like the cybran ships being able to crawl onto land. however, the story is disappointing, character extremely lack any sort of personality and emotions. also, for high end computers, this game has surprising lower graphics, units like the UEF titan look a little bit more like legos, even though some units have good deatil, others are flat out bad, although you have to appreciate that they are trying to let computers with lower hardware able to run this game. online play and skirmish mode are fun.", "\"Supreme Commander 2 is different than it's \"\"predecessors\"\"", "2 player fun for dad and 10 year old. Replay value is high with extra modes after completion.", "My son been waiting on this game for a long time. But he got it now and he love it.", "I'm in love with everything from this game and I appreciate the replay value as well. You can go back to a level and find new tasks/goals", "Brings back so many memories, I absolutely love this game.", "It actually looks crafty and there is so much to explore and you can", "The cutesy graphics and creative levels definitely added to the child-like wonder and fun of the game. Even the creepier levels were cute, but still gave you goosebumps at the same time.", "I like the simple creativity, nothing too over the top just very creative. It\u2019s sort of too easy so it\u2019s something to pass time with. Overall a good purchase", "Fun imaginative and challenging at times great deal of replay ability", "Fantastic game! The level designs are inventive and memorable.  I haven't had this much fun with a game since the days of the NES/Genesis!", "This game is so much fun.  You can easily run though a level or you can take your time and find all the hidden things.  I love to play it and so does my daughter!", "I\u2019ve been very hesitant to upgrade to an OLED because I couldn\u2019t justify the cost. But when Vizio jumped into the OLED market, I was very excited. Other brands\u2019 \u201cbudget OLEDs\u201d cut corners, whereas Vizio\u2019s track record with reasonably priced premium TVs is outstanding.", "0", "This is my 3rd Vizio TV. 1st OLED. They are all 5 star products!", "Easy to set up, to program, and assemble. Smart TV is very convenient.", "I bought this TV right before Thanksgiving and have enjoyed it ever since. I wanted a Smart TV and this did not disappoint. I bought a smaller one for my bedroom.", "As the title states, the picture is good, as expected. The only downside so far is that there are SERIOUS handshaking issues between this tv and my PS5 console. Sometimes, Ive got a black screen, and must reboot the tv to get the PS5 display to come up. Also, the tv menu will lock you out of several key picture adjustments during PS5 use. With some adjustments to the firmware to fix these issues, this tv would be nearly perfect.", "I haven\u2019t had an issue with this television like others. From what I have read, most issues are about gaming compatibility. 4.7 / 10", "Severe Issues with settings. None remain when set, audio passthrough is a nightmare. Motion settings are impossible to turn off for all HDR formats. Doesn't handle 24p content well from anything other than blu-ray source.", "This is my fourth Vizio tv and they just keep getting better. Bread brand and quality product.", "I am very pleased with the quality and picture on this TV.  I was disappointed that the streaming software runs at 720p since this is a 4K TV.  I added a 4K Firestick to resolve the issue.  Otherwise I am very happy with the design and function of this TV.", "I bought it about three weeks ago, and sometimes I am impressed with the crisp colors produced. There are times not so much, I  was watching something on Netflix the other day, and all the color except red looked good. The red color was like pigmentated almost as if it were a hole where ever there was red. I also noticed that when streaming sports live action it blurs a lot. I  am not sure that isn't the feed, but it is annoying.", "Extremely great controller! It's my first pro controller and I loved it. The design and color make it complete. Had to get used to the paddles on the back, but afterwards it made doing certain things in games easier!", "Beautiful controller! A must have for any Halo fan!", "Right joystick jumps and feels stuck sometimes. Paint in that same joystick that is gunmetal is gone and when the stick is rotated you can see the silver beneath. Wish I could have returned, but with how these are gone everywhere I don\u2019t know how I would have gotten another one\u2026", "Great design and awesome feel. This controller would be perfect if not for the horrible quality control issue Microsoft has on their controllers. Mine had stock drift, a messed up button, and a bent paddle, so I\u2019m waiting on a replacement. Fingers crossed.", "A controller worthy of a spartan you'll never play the same ever again with interchangeable thumbsticks, d-pad and mappable paddles you'll be unstoppable in any engagement.", "Happy to add this to the Halo collection! She\u2019s a beauty.", "Solid feeling controller. Love the design and halo theme of it", "Multiple parts that can be swapped. Comes with an in game code that gives a weapon charm", "Best controller ever. Toss a Halo Infinite skin on it makes it that much better. Recommend to anyone.", "Thumbstick issues straight out of box. Had to send back to Microsoft to exchange for working one. After that it\u2019s wonderful. More of a quality control issue on Microsoft\u2019s end than gamestops fault, however when I reached out to GameStop about the purchase I was told they didn\u2019t have any to replace it with. Just a general pain in the butt just for me to get a working product that I paid a lot of money for.", "Typical, classic, Nintendo fun! Challenging? Not very. Enjoyable from beginning to end? Absolutely!", "Super fun, a lot of challenges and game time. Since I bought it I haven\u2019t put it down.", "Not a hard game but a good one to relax and play after work.", "If you like yoshi, you can\u2019t go wrong here. Game is a masterpiece and provides decent challenges for even the seasoned gamer.", "More whimsical Yoshi fun that innovates on the last game without changing what we know and love.  A bit easy but still fun & heartwarming.", "Fun game, but too short.  Beat the game after only three days of casual play.", "Yoshi\u2019s Crafted World is fun and a bit challenging.  My 10-year-old loves it and I can play it with him.  Yoshi!", "Really adorable game with an imaginative landscape. This game is cute and colorful and fun for all ages. Collectibles could be a little more satisfying however, it doesn\u2019t ruin the game. Developers did a great job but the game should be priced about $20 lower.", "A fun platformer with charming visuals, interesting puzzles, and a good level of difficulty!", "An extremely fun game not only for my little sister but for me too! Easy enough for her to enjoy but it has some challenges that allows me to have fun as well.", "Oled makes a big difference in the sharpness of the picture and it can be watched from an angle.  Very happy with my new TV", "\"I bought the 55\"\" for the bedroom and at this price you cant find a better Oled. Im was a Sony guy but now I dont have to pay the premium to be lol. Finally a company that is challenging the big dogs and winning!!!!", "I realize Visio is new to OLED and this is their first go at them .., that being said, this tv has potential and I knew saving money over LG would come with some growing pains. I\u2019ve experienced several anomalies that required a power cycle to correct. Some of those issues were sound no video on all inputs (including OTA & web channels), syncing with true 120fps 4K sources. ", "Some features are missing and broken but when it works its great!", "I\u2019ve had this tv for almost 2 months and completely happy with the performance and picture", "I\u2019m happy that I made this choice. I sincerely hope this product lasts more than 15 - 20 years", "Great picture lack of updates. Need support for 1440p and Vrr 4K 120. Also android fully baked in", "This TV is my first oled.  The picture is breathtaking but the television itself has some problems.  Sometimes the television will not connect to the smart cast. Sometimes the TV will not even power on without having to pull the power plug and plugging it back in. But overall I am happy with this television. We have been promised all these things to be fixed and a future firmware update. Fingers crossed.", "I was a bit nervous buying this set being that Vizo just started making OLED's. I can tell you know after I have it in my house. IT IS BEAUTIFUL! I can not believe the qualitly of the picture. I have this set  in my main room and we have a gaming 4k TV on the same wall. Side by side this display makes the other 4k look cheap (btw... the other set is a high end display made for gaming).", "so glad I decided to spend more to get the OLED. Picture is the brst.", "This is my second series 2 elite controller. The first worked perfectly but this one looked so awesome that I had to have it! The only issue is that the R thumbstick is a little sticky when pushing to the L. No other direction, only the left. It is like there is a bit of resistance I have to push through before it releases and goes to the left. My first elite series 2 controller doesnt have this issue. It hampers FPS games a little, but not terribly. Otherwise a great controller and terrific looking product if your a Halo fan. I'm just a little bummed about the aiming thumbstick being slightly off.", "The Elite series 2 was already the best Xbox controller, now has an amazing look.", "controller is awesome. but my Y button doesnt work all the time. its very frustrating.", "Work as great as the original Series 2 Elite Controller but that Halo detail. It was great to find a code inside that gives you a weapon charm that look exactly like the controller.", "Beautiful controller. If at all possible, why not buy the limited edition controller for a small amount more. Im a huge halo fan, so getting an extra controller in this caliber of beauty was an easy choice for me. Elite controllers are an amazing controller for sure, which is part of why there is too many reasons to get this controller, really.", "Like many Elite 2 controllers, this was totally unusable out of the box.  Stick drift was suuuuuuuuuuuuuuuuuuuuuper bad.", "Love this controller. The attention to detail is out of this world.", "Great elite controller for a supa halo fan-very stylish too", "Very cool and feels really nice and comfortable in hands", "Its absolutely beautiful! Great controller", "I loved Yoshi\u2019s Wooly World, but this game came across as very childish and no real goal that you are trying to reach.", "There's so much replay value with this game.", "Awesome game.  Little less challenging but that doesn't take away from the enjoyment of the game.  Highly recommend if your into Yoshi island style games.", "Great game but kind of easy compared to Yoshi\u2019s island", "Single player is tons of fun. Nothing sticks out as being bad other than being a little too easy for mature gamers. Co-Op is a jumbled mess of accidentally getting  stuck on people and losing your eggs unpredictably.", "Pretty fun typical Yoshi game that offers more variety than usual, still not Yoshi\u2019s Island levels but pretty good nonetheless. Worth my money.", "Once you get past the cuteness factor of the game, you'll find a very fun gameplay experience. Controls seem very responsive, and the 2 player mode is loads of fun and laughs. Great game to introduce a young child to gaming. A great addition to the Yoshi themed game library.", "I haven't been a huge fan of the series since it is a easier version A Mario title but this game has been surprisingly fun", "It\u2019s so cute. I love Yoshi.  This version is built using craft materials and can get quite challenging!  I love how detailed the graphics are! Fun, fun, fun!", "Great game and fun but unlocking different types of Yoshi\u2019s with yarn in the last game was a lot better than the costumes concept.", "Got my package, installed it and got a STEAM POWERED program that starts itself every time I start my computer [no option to turn that off] and emediately takes me to thier online site with only options to buy games. The was NO GAME on the disk. No information saying that it is an Online game only [no information saying it is even an online game on thier site.] I tried to check out the Forums, registering for thier forum kept takeing me to other sites. These other sites required me to reister. This repedative nonsence went on for 4 diff registration that finnaly returned me to the STEAM forums. Unfortunately I still wasn't allowed to access thier forums.  No tech support, no contact information ,no game.. No reason to even consider getting this product.", "I own both Supreme Commander and Forged Alliance and find both games superb. When i head there was a Supreme Commander 2 coming out of course I ran right out and got it. I can honestly say this is one of the worst war games period. My reasons include the fact you must unlock a LOT of stuff to even consider playing the quick battles. There's only 6 maps, yes i said 6. The fact you cant even choose what side you want to be on until you unlock the ability, and the WORST part is you cant even see a simple overview of the maps when you are selecting them your basically better off throwing darts at your comp screen to decide what your gonna do rather than actually getting to decide anything at all about the battle ahead. The point I'm making here is don't Waste your money... This game isn't even worth getting if it cost 2.50.", "played it today and i've never played a better RTS. im lovin it every step of the way and although its a little bit more 'cartoonish' than the last one, its still definatly a fun epic story lined game. it beats AoE, UaW, and matches EtW, and C&C. i really love playing it and my slightly old system can handle it perfectly. i was a little disappointed, i though the requirements would be a little higher and i definatly see a decrease in the quality. overall, 8 out of 10. AWESOME game. right now, im a little concerned with the new unit the cybranasourus rex (yeh, i probably spelled that wrong) it seemed a little like an out of place character to be put in the game. its still a pretty cool unit and theres so much more upgrade. the most important is the eco that they had. the last one sucked and was full of glitches. this one is MUCH more stable, its brings the good parts of halo wars and not the sucky parts (because seriously, halo wars sucked) buy NOW", "The frist two games of this year that I was waiting for were Supreme Commander 2 and C&C4. Both are god awful. Supreme Commander 2 is missing the best elements and nuances of it's two predecessors. I actually think that TA was the best of them all. Sad that games just get worse and worse as they come out with new titles. What happened to the unit types??!! There is not nearly as many unit types as SC or TA. Plus, what happened to the recycling of plants and rocks... the environmental resources you could live off until you got your resource production up and running? And why are there so few multiplayer maps?  I have an idea. Take the Total Annihilation engine, give it some new graphics,new sound, a new story line and new unit types... and don't change anything else...", "Don't know what the other guys here are talking about, the game is great, ya sure they took out some of the things the sup com pros loved, but the thing is, more people want to play RTS so you can't expect a newbie to grasp every concept of the game, unlike the pros. If they left some of the things from the old sup com in, it would be so unbalanced it wouldn't been as fun to play for the newbies.  Alright so lets get down to buisness, the storyline is great and the graphics blow sup com 1's out of the water, while supporting older computers that don't have as good of processors or graphics card. Win, Win situation. At least thats what I think, and that is why you're here isn't it ??   They added a new research screen to simplify it and added a whole bunch of new features like building add ons and new experimentals. FYI to all aion illuminate fans, they don't have naval anymore. I know, ouch right? Well I think we'll live.  On to sound. They did a really good job with the music this time, its about 10 times better than sup com 1 and the sound effects really match up and exceed what you think they will sound like, when lets say someone gets blown up by a nuke or someones commander goes into meltdown.  For all those hard core gamers out there, the 10 hour battles have gone away, I know, sad right? Well they replaced with a shorter even fiercer model of online game play, that really seems to fit, and when I mean shorter, I mean average of two hours. You can still build those big armies just faster. One thing I wanna finish up with is the Interface. They kept a lot of the interface from sup com 1 and FA, but also added the research screen which I talked about earlier. It works like this: You need research points to buy any sort of research upgrades and those research points automatically come along, but you can build research facilities that increase the speed at which you get them. You can spend research points on things like, personal shields for your units, or new buildings, sight upgrades, radar upgrades, and new schematics for buildings and units. Big FYI for all those 360 gamers lookin at this. The 360 version of this game is just as good if not better than the PC version.", "\"Make no mistake - this IS Supreme Commander Lite. It almost feels like a very weak demo of SupCom 1, but worse. Even with the new research trees, you'll still end up with no where near the amount of units to choose from that you had with SupCom 1 and its tiers. Yeah, sometimes the tiers were annoying to work through and it took far too long in most instances to get anywhere close to maximizing your faction's potential in a single match in the first one - but this \"\"sequel\"\" has completely gutted it altogether. You'll likely end up mashing your mouse button or hotkey to churn out more of the exact same units.. over... and over... and over again because there's barely anything to choose from for unit diversity. The game requires the Steam client and an internet connection just to play. While it's true that most people these days have an internet connection", "If you like multiplayer or lan-parties add this on to the list because you get a lot of fun in that little box! There are many nay-sayers but i really don't know what the heck they are talking about. Graphics are great, simple neat menu, intense tug-of-war games because its hard to dominate players that are sneaky!... It runs great on both my desktops and even my laptop! So if you have a decent machine you can easily run this game because its not demanding at all. Very fun to play against you friends and the online is pretty intense. Single player story is good and easy to get into because you dont need to have played the originals to understand whats going on or anything. As of right now you can save $** if you buy it which makes it even more worth the money. 10/10! pick one up maybe ill play against ya!", "There were so high hopes for this game, as SC 1 and FA had left me hungry for more games like TA, yet unfortunately the wait would lead to disappointment. For those who enjoyed the similarities between TA and SC1 will be the biggest disappointment here. The economy of the previously mention games is utterly gone. No worrying about balancing energy usage and mass income with building and firing weapons, its all been removed. Its now a simple straight up, build up army, build base defenses, go conqueror enemy. Also gone are the tech levels, and weaker starting units, and teching up. Instead its replaced by research points that gradually come in much like all the other resources.  Without that element nothing really stood out in the game. Without the challenging economy, the campaign portion of the game becomes simple, build defenses, build army, repair defenses occasionally, attack enemy. Musically nothing really stood out, there may of been a couple times when I stopped to notice it, but again nothing inspiring. Storyline it also seems kinda lacking, it comes off like a Final Fantasy storyline mashed into brief conversations between 18 missions. There just simply is not enough there to make a great story, which once again left me greatly disappointed. Graphically the game was nice, and the small scale compared to SC1, meant I could actually stay somewhat zoomed in, to actually see the units, and not just commanding by click on the small icons. The movies were decent, just way to few of em to tell a good story. The game controls fairly well, being rather simple game now, its easy to pick up and get right into. Those with SC1 knowledge will have no trouble picking it up, as the mechanics are still basically identical to the first. Those used to Starcraft or C&C type games might take a bit longer but overall its not a hard game to get into or to start playing. The game probably has some strengths in multiplayer, as the unit balance does seem good, but I have not done any of that yet. Overall SC2 is not a bad game, everything seems to work, the game loaded smoothly, the game had no noticle lag, or slowdowns, but there is just nothing in it that simply makes it stand out. The game itself was fun to play through, and I did enjoy the limited story, and I may still by the sequel when it comes out (of course the ending had a cliff hanger for a sequel... what game doesn't do that no a days) yet this probably won't be a game I will touch all to often again now that I have beaten it. My suggestion is wait for the price to drop on this one if you simply want to see the continued storyline from the first, as the game offers very little of anything else to draw players away from other games.", "\"First there was Total Annihilation; superb, deep, endless strategy, constantly evolving, hundreds of different units, quick to learn hard to master. Then Supreme Commander and Forged alliance; made Total Annihilation (TA) larger with a better AI, beautiful graphics and much of the same elements that made TA great.  Then Supreme Commander 2; What the hell happened here? You took almost everything that made the first two stand alone and dominate and tossed it out the window. My only guess is you tried to dumb this game down to the likes of a C&C or a Craft game so it could appeal to the zerg boys.... probably thanks to Square's involvement. Really Chris Taylor how much did it cost to convince you to kill your baby?! Graphics went from sci-fi futuristic to cartoonish. Threw out the unique resource allocation and made it a click and buy system with a \"\"Research\"\" resource which is another Craft game move that sucks. Took out almost 60% of the different units in the game an dumbed base creation and defense down to arrow towers CRAFT again!. All the maps appear to be zerg/rush maps. Threw out the tier system... Sheesh I can go on and on but I won't. Bottom line: If you loved what made Total Annihilation and Supreme Commander unique and fun", "\"Okay, so yeah, it's pretty much like the first two in the basics: the three factions, the basic units (Some of the basic units are straight out of SupCom 1 and Forged Alliance), and one big war. On almost everything else it's completely revamped. Upgrading has been replaced with \"\"Researching\"\"", "I bought this to play my ps5 and not only thengames look great but movies too", "Waiting for the firmware update, then I can update to 5 stars", "\"Great TV with all up to date technology. From Dolby Vision and Atmos, HDR10 + etc... Perfect for gaming HDMI 2.1. I trust in Vizio products I bought a 60\"\" in 2012 and still running (2021).\"", "I purchased the 65 inch OLED 1 week ago!  The TV is beautiful!  Deep blacks & colors are great right out of the box!  You will have to do nothing to get this TV to look great.  I wish they had offered a 75 inch OLED but I am sure this will come!  Picture processing is good as well!  I recommend this TV to my friends!", "I picked this OLED Vizio for the intensely beautiful picture and I have not been disappointed. It's incredible for gaming on my PlayStation, and watching vivid shows.", "Problems turning OLED tv on. So I returned it and got another one.  The screen had a green tint to it so I returned it and got my money back. Plus the VRR didn\u2019t work.", "I love how skinny it is and how much cooler it runs, the picture is awesome!! Gorgeous unit !", "Wonderful image, oodles of features and an asking price that\u2019s within  reach of the average consumer, what more Can you ask for.", "I\u2019ve always liked Visio. My first 50\u201d had one backlight diode burn out after 7yrs heavy use. Replaced with 50\u201d nano Visio. I was happy with the upgrade. Figured I could get a 55\u201d within the space constraint I had. Got this one as open box. And WOW! The picture POPS of vibrancy and consistent brightness.", "I got this TV 3 weeks ago and so far I love it/ easy to operate/ easy to hook up other devices to it //Great TV", "Beautiful controller. I only changed the D-Pad and still calibrating but it is perfect.", "Glorious equipment for slaying all who oppose Spartan 117!", "I got this as a gift for my boyfriends birthday. I don\u2019t play Xbox and I\u2019ve never played halo but I was completely BLOWN AWAY by this controller. It feels amazing I think the way it was designed was incredible and totally worth the money. My bf LOVED it and made me consider becoming an Xbox gamer.", "This controller is amazing and beautiful I\u2019m glad to have it", "Love the elite series 2 controller and with a halo paintjob.... it's almost perfect. I kinda wish this would have included the updated series x/s share button but that's a minor complaint. With the latest xbox update, it's now able to quickly connect to 2 paired devices which is probably the best feature of the updated series x/s controllers so I'm happy with that. If you love Halo and were thinking about getting an elite controller, this is the one you want.", "Its similar to the regular elite it just feels lighter quality feels slightly better and it looks so hecking cool in person so many details that the pictures dont do it justice", "Performs like you expect the Elite Series 2 to do so, but with the added benefit of looking wicked. By far the coolest controller I\u2019ve owned. Hopefully it will keep nice and not develop rub marks from fingers.", "I had the series one which still works great, but decided to upgrade for the better paddles and internal battery. I am very pleased with this product not only because its Halo but it does feel like a substantial improvement over the previous generation. I'm still trash though...", "Great for Halo fanatic.  It weighs a lot more than your standard controller.  Bought as Christmas present for the Halo fanatic.  Splurged on the 2 year warranty just in case too.", "It\u2019s a great looking controller but without the console to match, it will be lonely. Very hard to pick up the items you want unless you want to pay ridiculous prices from scalpers who seem to get these items with ease. But still a great looking controller.", "Pretty simple game, great for younger games, way too many things to have to collect.", "Good game. kinda on the kid side of game, my kids like it.", "Game is great for parents to play with their kids.", "Very fun! As someone playing through sekiro, this was a nice pallet cleanser.", "I had an open mind when deciding to play this game and after clearing the first world, it just wasn't for me. Compared to Woolly World, this game was lacking in several departments; the music was repetitive, the skill level was far too low even for just the first world and the game doesn't reward you nearly as much as Woolly World did in terms of amiibo. I'd recommend this for die-hard Yoshi fans or kids age 5 through 9.", "The kids (6 and 3) love it. And I love that they can play together. My 3 year old doesn\u2019t know what she\u2019s doing but my 6 year old helps her. Yoshi\u2019s crafted world game is also fun for parents :)", "Simply amazing. My son and I are loving this game. It's so creative and well thought out.", "So much fun! For all ages! We have from age 4 to 34 who love to play.", "Bought this game for my son, but i enjoy playing it too.", "My family and I really enjoy using the Nintendo Switch and I must say this is by far one of the best games ever! Super cute yet challenging at times. There\u2019s a gum ball where you can insert coins and collect costumes. There\u2019s also a flip side to the game where you interact and catch little puppies. Just when you think you\u2019ve completely the level there\u2019s other mini challenges like a scavenger hunt. You should purchase this game you won\u2019t regret it!", "So far I've enjoyed playing SC2. there are a handful of differences between it and its predecessors both good and bad, The battles aren't as big as the ones from Supreme commander, but they are still brilliant, the new research is fun, as well as expanding buildings with tactical add on pieces even if they are minor one's, and the fact you can replace your ACU without permanently losing it now, and the new upgrades for the ACU, and units. Most of the cons I've found so far are, requiring steam, the smaller battlefields, and other minor problems which may be fixed eventually in updates. It lacks the feeling of the original game but its still fun to play I'd recommend to everyone that they try the demo on steam first before deciding. Overall I rate this 7 out of 10.", "First off, you need to have Steam installed on your computer. Thanks for the heads-up on this Square. You buy a hard copy of the game but then have to log in to Steam to download it from their servers.....really? Some people are showing a 9 hour wait time to be able to play. Again, really? Second, they destroyed the economy and the basic gameplay of the original game and its expansion. None of it even matters any more. Its just a zerg fest. Most people think its due to the console being added to this title and thereby attempting to expand their market. They broke what made the first game such a huge hit. Gone are the days of epic battles for my 3rd point. Maps are now 5kmx5km. WAY too small. Fourth, you can't save/load in skirmish play. Soooo, if you have to leave in the middle of a longer lasting game (not real sure how this will happen being that everything is so small-but want to give them the benefit of the doubt for future content added updates), too bad. Can't save. Fifth, the voice acting and story line for the campaign is just plain stupid. I guess I could go on but I'm sure I've expressed my opinion enough for folks to understand where I'm coming from. This is just insulting to people who have been really looking forward to this title. There was a reason the first game was as much of a success as it was. Well, Square Enix effectively threw that out the window and scrapped it all. Good job.", "I haven\u2019t used it yet but the unboxing was amazing. This is a really nice looking controller. It really feels right.", "This controller is GAWGEOUS!!!!! I love the cosmetic design of it, the rubberized grips, the back paddles and the accessories! It comes with it's own wireless charger, interchangeable analog thumb sticks, and D-pad. The design is reflective of Master Chiefs armor. I LOVE IT!!!!", "Amazing controller well worth the money solid feel and looks fantastic i want to buy a second one already", "It came broken\u2026. Stick drift on the right thumb stick right out of the box.", "Quality feel and looks awesome. Also arrived early on the 15th was shipped next day air.", "Exactly what I was looking for in a controller and the Halo fan in me loves the Halo theme on the controller", "Its good just sucks how the bumpers dont like to work sometimes its vrandnew", "Beautiful controller (just need the console to go with it). GameStop packaged it well and sent it super fast. It actually arrived prior to release date. Now I just need the console!", "Great controller that feels better than the standard ones. Paddles are useful in gameplay and the color scheme is great. You also recieve a code for the controller as an accessort in Halo Infinite.", "High quality packaging, nice dock and very long usb-c cord. Even the packaging was superb. Everything was secure to make sure nothing would be damaged in shipping. It is very true to the pictures and works great!", "I had no problems after mounting the TV and the set up was a breeze", "Had this TV for a month now and it's worth every penny. Don't listen to all the negative you've been hearing about Vizio. They have done a really good job with all their new high end televisions.", "I just bought this item and am so excited to watch sports and movies on it!", "Compared to the LG CX and Sony A8H the picture quality is way better than Sony's OLED.  THOSE Reviews online are biased and not accurate IMO.  Not a fan of smartcast yet over android TV. TV Has some firmware glitches.  Sound from TV speakers is OK not as nice as the Sony's; however this is a one Heck of An OLED with no black Crush....", "We were looking at one but am the type of people who wi only purchase an item like this when the one we have goes bad. Now the old one will go into the basement.", "The best \u201cAmerican product 100% costumer satisfacci\u00f3n  guaranteed", "I bought this tv and set it up at home but it was quite obvious to me that the feed I was watching on this tv in the store was optimized for the tv for better picture. At home however, it was grainy and looked like motion flip art like the one you draw and flip through. The tv was so hot I thought I bought a hp laptop.", "This was my wife\u2019s and my anniversary gift to each other. We regularly watch movies, and we are amazed at how the cinematographer\u2019s vision is articulated with this tv.", "I\u2019ve had this TV for about a month of movies and gaming, couldn\u2019t be happier.", "The image on the tv is fantastic and the sleek slim design gives it that pop aesthetic that the \u201cworld\u201d within the TVs borders is almost life-like to the touch.", "Great controller! Only wish I had the halo Xbox to go with it", "This is the elite series 2 but they did an excellent job with the halo theme. The best controller with now an awesome new paint job.", "Fun game, really nice visuals. It's an easier platform so more people can enjoy it, but seasoned gamers will like the collectables available, which give replay value to the game and a bit more challenge.", "One of must fun Nintendo games I've played in a long time.", "Nintendo does it again with sweet crisp graphics and my kids love yoshi", "If you enjoyed Wooly World, you'll love Crafted world. This game is a great addition to the Yoshi series and adds fun mechanics unique to this game. It does have a 2 player mode and would be fun to play with a less experienced game. Overall presentation is great, control is simple, and platforming is fun. Nintendo game prices hardly comes down, so if price is a factor, pre-owned with PowerUp Rewards discount really helps mitigate the cost, and maybe invest those points. Either way, top notch Yoshi game and a must play for Yoshi fans.", "Great fun, reminds me of Yoshi's World from when I was a kid", "Love the extras each level has. Not a fan of yoshi smash level but in general love the game!!", "This is a proper modern evolution of the Yoshi formula.  Giving you access to the fore- and background when throwing eggs adds an extra dimension of exploration and the collectibles are definitely worth getting.  The flower requirement to progress to new areas is rarely difficult to fulfill, but it emphasizes the collection aspect in a game that gives you a lot of tools to do so and is chock-full of stuff to see.  If you've ever loved playing a platformer, you need to play this game.", "A few weeks before the game came out I downloaded the demo just to see if my six year old son was going to play it and he and when the game came out I got it for his bday and he have not put it down", "Great game! Side scrolling puzzle solver better than I anticipated and can\u2019t put it down. There is a gum ball machine for different costumes ADDICTING haha", "Yoshi\u2019s Crafted World is an amazing game! It is beautifully designed and appropriately challenging. The ability to play two players is also great as my wife and I like to game together. I would definitely recommend it to anyone who owns a switch, especially those who want to play some couch co-op.", "Bought this for a Christmas Gift for my husband and myself. ", "1 year ago", "Got this in time to have it up on the wall Christmas day. The family loved it!", "The app sometimes glitches green and I need to power cycle yhr TV to work right. Also, I can't seem to download other apps that seems to be essential. Example Crunchyroll.", "Bought the TV right before Christmas - just amazing clarity and color", "Excellent picture quality and very easy to set up!", "\"About 10 years ago I purchased my first Vizio 54\"\" just months after its release.  It held up well until one day it just didnt turn on.  Lights on", " when clearly the Amplifier is sending signal.  Looking forward to a future firmware to make this TV absolutely perfect!\"", "Very nice picture, nice sound, but, the OLED effect can cause severe headaches in certain people.  There should be some form of medical warning and available solutions.", "I purchased this 3 weeks ago and I love the picture quality. After contacting the boae surround  system its like you your in the movies! Great job vizio.", "I just bought this TV, did not plan on spending this much. This TV is worth every penny. The color is so vivid. Model is sleek and so much thinner than LED.", "I bought this one month ago and I'm glad I did this model.", "My son loves this game. Like Super Smash Bros with Kung Fu Panda characters.", "I got the game through PS Plus, and I was skeptical at first. However, after playing it with my friends for a little bit, it was some of the most fun I'd had playing a game ever. It's no Citizen Kane, but it does its job as a fun, simple fighting game well.", "We Bridges this for Christmas for my nephew everyone had a good time playing", "I bought this game for my grandson and he absolutely no loves this game...", "I bought this game for my daughter because she\u2019s very competitive. We thought it was family friendly but it\u2019s very hard to learn different moves. I had a hard time playing it also and I\u2019m good at playing games.  It\u2019s not the easiest game to play and in my opinion its not for kids either.", "My 5 ear old loves this game.  Controls are simple and each fight location has their own challenges.", "This game deserves 10 stars but I was only allowed to give 5. It is definitely better than smash. I think it should win game of the year.", "I sew the trailer and it was ok not the best and characters were alright. I heard that there was a lag in the game  but over all i give it 2 stars", "another super smash clone but horrible one at that", "i wouldn't buy this game if it was free. i dislike the game's audio and lasting appeal. so bad my children couldn't even bear it", "I have a LG OLED TV and I wish I waited for this TV. I'm very pleased. I hope the update will fix the power issues. I have to turn on multiple time before the picture would stay on.", "I\u2019ve had my VIZIO 55\u201d OLED for about 3 weeks. Clear picture from any place in the room. Color is so much better than the TV I replaced which was a VIZIO LED 55\u201d TV.", "Other than the Smartcast being a bit buggy, the picture is spot on!", "i have been facing multiple issues from the time i got this TV.", "Have had it for two weeks, perfect picture and great design. Loving it so far, great price for all the features and crystal clear picture. Just wish it had a HBO Max app preloaded in the main menu, but very easy to cast from my smart phone or iPad to the TV", "Vizio has stepped up their game, going head to head with the LG and Samsung on this one.", "Finally, someone has made an OLED TV that I could afford!", "Well worth the price. I was sold on the fact that you can see definition anytime there is a night scene and it\u2019s not just blurry.", "The colors are incredibly vivid, even with a standard HD signal. I also love that it has screen mirroring for my iPhone along with a bunch of other viewing options.", "Just had this installed yesterday the BestBuy's Geek Squad. Also installed a new sound bar. The picture is amazing and we are looking forward to seeing many of our favorite shows in a whole new light. The remote will take getting used to, but we'll learn. I wish there was an app for PBS installed. We'll have to see it by AirPlay.", "When the game trailer is a rip off of super smash bros, you know its going to flop. the chrachter selection is poor and the gameplay is choppy. I need my 20$ back...", "I really enjoy playing this game. It is fun and enjoyable for all ages.", "The game is cute but hasn\u2019t held my 6-year-old son\u2019s attention. He has beat Donkey Kong Country, Super Mario Odyssey, and SupernMario Deluxe. He only played a couple of levels of Yoshi and hasn\u2019t went back to it, over a week later.", "This game is similar to Yoshi's Woolly World.  The levels are made of things like cardboard, ribbon, straws, and construction paper.  Each level can be played in a normal mode or a reverse mode.  There are cute costumes you can unlock using coins that you collect throughout the levels.  It's a perfect game for parents to play with their kids.", "Got this for my 2 sons they love & have a lot of fun playing it together", "The game is wonderful to play through. Fun levels, extras, cute outfits, and even an easy mode for younger players. Just dont try to get everything, or you wont have a good time.", "This game is super fun and adorable. ", "This seems more like a kids game but everyone will enjoy. It\u2019s very entertaining but not very stressful. It looks so cheerful and colorful. And who doesn\u2019t like Yoshi with wings.", "Fun to play while letting those who want a challenge to be able to spend time to complete the game", "While it's easy enough for children to play, that doesn't take away from how fun it is for the whole family. Levels have a decent amount of replayability, and it's decently challenging in a casual way.  Would recommend to anyone.", "Fun game for kids and adults. More relaxed then Mario and very kid friendly!!", "Bought this on Black Friday after reviewing 4-5 other LED TV's.  I'm so glad that I did.  The OLED experience is simply stunning.  My previous TV was a Panasonic plasma which I held onto as long as I could because I didn't want to give up those deep blacks and contrast.  This TV has such great contrast - for example when you watch a dark scene with isolated bright spots (like lamps, office windows, etc) it will blow you away how bright those spots are against the deep black surroundings.  The panel is made by LG and you can get the same performance for a lot less money.", "I bought this a couple of weeks ago.  Easy to install and set up.  Fantastic picture!  We love the smart cast and look forward to our elderly relatives coming over.  We can FaceTime our loved ones and airplay it on the TV and everyone will be able to see.", "I love the tv but am on the fence on returning it or not. Fix everything people are complaining about. Also 1440p needs to be 120hz. Theres no reason why it shouldn't be. Get it together please", "I have a long time history of purchasing Vizio Television and each time of purchase I have upgraded having said that Vizio has shifted in the best way. Awesomeness!!", "\"I had a Vizio 65\"\" LED TV that I thought was still pretty good but I was intrigued by OLED. The set I bought looked great in the store and even better at home. And that's on everything", "Great picture quality and very easy to set up. Would highly recommend.", "This is the best tv I've ever owned! The picture quality is amazing! I don't have enough words to express how happy I am with this TV.", "Bought the oled Visio over the Samsung q series. Very happy except sometimes the input switches from one to another happen 2 times", "I set this TV up less than a month ago and still going through all the apps and everything it can do.", "I really want to love this TV. The picture quality is amazing. The smart cast interface is solid, and it's all packeged under an beatable price. ", " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "3", "Really fun 2 player game that seems well balanced. It looks great and feels rewarding to go collect stuff. It's really nice that the game seems to avoid many the co-op deaths that I'm used to in new super mario bros u deluxe and yoshis woolly world (we jump or egg each other and fall to our deaths).", "Its a deep 2D game with an interesting spin on yoshi island. Nintendo always amazes me with the great graphics with thier titles. Gameplay is smooth and overall fun is better with my wife.", "Simple, super fun platformer that\u2019s perfect for kids or couples to play!", "Great game for small children and entertaining for adults as well", "Great games for kids and parents to play together.", "Amazing game. Graphics are too cool. They're made out of cardboard, bottles, etc and the two player is fantastic. Highly recommend.", "I bought this game for my 8 yr old autistic daughter and she absolutely loves this game. It is her first video game bought soley for her and she just took right to it with no issues at all. For other games she has played it has been difficult for her to grasp what goes on on the screen and how that associates with what she is doing on the controller such as constantly running into walls on mario kart because it was difficult to for her to figure out how to steer but no such issues with this game and she absolutely loves it.", "It's sooo cute!! The levels are adorable but still challenging enough if you want to get 100%. My new go-to game for destressing~ <3", "This game is super fun and brings out the kid in me. Each level has multiple challenges, making the game seem like neverending fun. The voices are adorable and the choices are plentiful. Great game, highly recommended.", "It\u2019s a really relaxed game that you can pick up and play anytime. The graphics are amazing and unique. Overall, I\u2019d definitely recommend this game for anyone who is a Yoshi fan.", "Me and my 5 year old really enjoy this game, if you enjoy the Mario games this is one you can add to that list.", "An incredibly fun sequel to Yoshi's Woolly World.  Amazing graphics!", "The game is fun, and the graphics look great, some levels are hard for a children\u2019s game, but over the game is great.", "This game is a crafted masterpiece! The level of detail is gorgeous. Gameplay is a throwback to the classics while maintaining a modern feel. The two player mode is unique and available right at the start. The game is great for all ages and incredible for a good time or a family game night. I highly recommend this game!", "Entertaining game for all ages.  The levels are relatively easy to pass but become challenging if you are the type of gamer who goes for 100% completion.  The colorful graphics also help add to the fun nature of the game.", "Great game for me and my kids ages 6, 4 and 1. They can actually play it on their own and love it.", "Cute game. Just as fun if not more than Wooly World was.", "\"Whimsical, light-hearted platformer. Densely packed stages filled with collectibles, secrets, and uniquely beautiful art designs.  Tons of content adds replay value to keep you playing long after finishing the six to eight hour \"\"main\"\" adventure. Definitely a worthwhile purchase", "If you like the gameplay of Yoshi\u2019s Island, the art style of Yoshi\u2019s Woolly World, then Yoshi\u2019s Crafted World is the gamefor you... and the family!", "Sort of short, aimed more towards kids...but if you love Yoshi and want something to sit back before bed and relax and play, this is your game.  So charming, so chill, so Yoshi.", "Just bought tv a while back moved to the new house and now it won't turn on", "This TV replaced a smaller, older VIZIO I bought back in 2011/12. Was not looking for an OLED, but went with it since the price was so good. I could not be happier. The picture is GREAT. Everything we watch has looked amazing on it.", "The picture is exceptionally light and bright where it needs to be but the infinite dark reminds you it is an Oled, this tv IS IN a class of it's own!", "About my TV last month I love it love everything about it", "I am pleased with the quality of this unit. Best tv I have ever owned. Oled is off the charts, the colors pop and deep rich blacks. I'm creeping up on retirement and I didn't want to buy a quality tv on a fixed budget.", "The picture and the Vizio surround surround speakers are excellent.  Response to the remote for adjusting sound level is sluggish and remote has few features compared to other systems.", "For the picture this has been great for the price. The reason I give it 3 stars though is because I am very critical of when the operating system is not \u201csnappy\u201d.  For a modern TV, losing of apps and maneuvering through the UI should be quick. While this is better than my old Samsung TV OS, I still expected it to be quicker.   I also hate h to r banner style at the top. My first choice should be to pick an App rather than some curated selection when so turn on the TV. I haven\u2019t been able to find a feature to turn it off.", "It's better quality than I imagined! Amazing TV!", "So far I love it! The new tech for video games is awesome!", "This is my first OLED tv and I am loving it. I\u2019ve been using Vizio TVs for years and have never disappointed me. This one is super fast and there\u2019s no lag when selecting through the apps. The lag is something I hated on my previous Vizio TVs bu that\u2019s gone now. Now just bring HBO Max! One thing I don\u2019t like and hope that it\u2019s fixed in a future software update is that currently, 4K/120hz HDMI ports don\u2019t work on the PS5. Fix that and this TV will be perfect.", "It's comfortable and works great. My only frustration is that it doesn't seem to allow button remapping. I can set it up on the switch, and the buttons are changed on the switch paddles, but this controller doesn't allow the changes. Not sure if this is a switch issue or the controller. Otherwise it is great", "[This review was collected as part of a promotion.] This controller was bought for the intent to enhance the Switch Experience, and to add some more skill to certain games. The case did arrive slightly damaged, the inside plastic was torn. but the product remained in perfect condition. It is light, but doesn't mean it isn't quality. It brought a different set of skills to games that required more then a small handheld joystick. A little throwback to the classic design of a controller.", "[This review was collected as part of a promotion.] Received to try out on our gaming system and definitely enjoy it way better then the cord controller. Having wireless is more convient as you can move better and no worries about pulling a cord out of the system. The Over all grip is very comfortable and nice fitting. Not only is it convient, comfortable but also comes designed with Mario which is many favorites of alot of people. Alot of my family complement us on our new controller for the design and now wants one or something similar.", "[This review was collected as part of a promotion.] This controller was so eay to use, and dits just right in my hand. I love the colors it comes in and connects very easily.", "[This review was collected as part of a promotion.] I like having a controller to hold onto with the switch and this one gets the job done.  Set up was easy.  The only downside is no rumble, but the added buttons make up for it.  The retro mario theme is an added bonus and loved by husband and son alike.", "[This review was collected as part of a promotion.] The design on this remote is so cool. The batteries are the only drawback but that can be remedied by just buying rechargeable batteries, which I would highly recommend.", "[This review was collected as part of a promotion.] This is a great controller for the Nintendo switch. It has a great Mario design that my kids loved! It was easy to set up and it being wireless was even better. It seems to be very durable as well. And good thing because my kids are super rough on things aspect controllers. I will be purchasing a second one, so both my kids have them to play with.", "[This review was collected as part of a promotion.] This is a review for the Nintendo Switch wireless game controller. ", "[This review was collected as part of a promotion.] The pros: *feels almost identical to the official Nintendo pro controller.  ", "[This review was collected as part of a promotion.] I have been using this controller for my Nintendo Switch for a couple of weeks now and am very happy with the overall performance of it! It is very comfortable to hold and the buttons are set up perfectly.  It being a Bluetooth Wireless Controller is a huge plus! The Super Mario Bros. design is my favorite though! It's very attractive and I've received so many compliments on it!", "It\u2019s not entry level friendly but can be very rewarding.. I struggled at first, boy it was challenging but with lots of practice and doing tutorials/training I managed to not come in 12th or 10th place.. I now place at about 6th or 4th.. Boy does not wining  a race hurt but it\u2019s the grind and constant improvement.. Could lower the difficult and turn assist on but that would take the fun out of the challenge..I then went to YouTube to see pro gamers struggling or flipping cars as well so that made me feel a little better too..", "If your looking for a real rally experience buy Dirt. The handling on this game is cartoonish. You cut and you get penalties. Total garbage.", "Very detailed graphics, challenging driving, and numerous course selections. A lot of fun for multiplayer. The only semi con is that it is difficult to select changes to your driving car... but overall a must have.", "Simply gorgous to look at and play.  It says pure simulator on the box for a reason.  If you go in expecting anything less you will get plastasized.", "Good game, need to spend some more time playing it", "This is a good one. One of the best driving games I've played. The career mode is a bit of a pain but still pretty cool.", "The WRC 8 FIA World Rally Championship is a great game to play. The cars are awesome and the scenery is breathtaking. There's so much to do! I really have lots of fun playing it. Much improvement over the WRC 7 World Rally Championship. They did a really nice job in putting this game together.", "Great game. Easy to pick up and play, at home or on the go.", "ONE OF THE ABSOLUTE BEST IN THE YOSHI FRANCHISE, WELL WORTH THE WAIT.", "Cant go wrong with Yoshi. Cute, detailed and fun. You get what you see with this game. I love it.", "Super fun game that can be as easy or as challenging as you want it to be, depending on if your thing is to 100% a game or not. Another quality release on the Switch, highly recommended.", "Not a heck of a lot wrong with this game. I like to say this is the epitome of Weaponized Cuteness. The designers did a fantastic job with level design. It feels like they actually built every level in the game with cardboard and construction paper in reality and then put it into the game, and they stick with that through the entire game. The controls are tight and the yoshis are as adorable as ever.", "Very cute! And the right amount of challenges. Great game for all ages", "We love Yoshi!", "Excellent game especially for kids and new gamers looking to learn, but still complicated and fun enough for an experienced vet.", "Really boring and lackluster. Fun platforming but not much else. Good for kids, not for adults.", "Cute game I can play with the family. I love how interactive it is. You can knock over things in the foreground and background.", "This tv has been fantastic and especially since we recently purchased a 5.1 Dolby surround system. Mandalorian looks, and sounds amazing now after getting this tv. ", "Super impressed with the clarity and color of the picture.", "Great picture and easy to use enjoy it very much!!", "Bought for picture quality and I am not disappointed. It is fabulous. I am actually surprised at how wonderful the display is in my home. Very satisfied and would buy again. If it goes on sale anytime soon I will buy another one for another room in my home.", "I am really happy with my purchase. Visio knocked it out of the park with this one.", "It's a great tv. This is my first oled and it works great with my xbox series x. My only issue is that it keeps putting itself back on warm color temp very often.", "Bought this TV a couple of weeks ago to replace a five year old Visio.  Our previous TV was top of the line back then.(240 refresh rate, etc.)  This new TV is fantastic!  What a picture!  Well worth it.", "I bought the tv about a month ago and have never had as many problems with a tv in my life. Vizio has a reputable name so of course I wanted to give the oled a try. Day one when I got the tv home it wouldn\u2019t power up. So after plugging the tv up and unplugging it a few times I got it to power up. The oled does have a beautiful picture but now every morning when I want to turn on the tv it won\u2019t power up again. I have to unplug the tv for 30 minutes EVERY morning for it to come on now. While I\u2019m watching tv the sound just goes away at times and I have to reboot the tv sometimes 3 times before the sound comes back on. At times the hdmi won\u2019t recognize it has the cable or game system connected so I have to turn it off and on again when that happens. This is just unacceptable from vizio. I hear there will be firmware updates but how long will that take?  I don\u2019t know what to do should I return the tv and try another vizio oled or just stay clear of vizio because this is the beat quality they can produce right now", "I bought this TV several weeks ago and I couldn't be happier. The difference between OLED and anything else is astonishing. Highly recommended!", "I\u2019m having multiple issues with it. Tried to set it up with my Xbox X series too play in 4K resolution but the screen goes black. When I did change some settings to get the TV too play my Xbox in 4K it wouldn\u2019t turn back on after I had turned it off from playing. I had to physically unplug and plug it back into the wall too got it too come back on.", "[This review was collected as part of a promotion.] This controller works great with our Nintendo Switch! I love the fact that it is wireless and vibrates while we play. It is also easy to use and handle! We are a family of 4 so I will be buying 3 more of these soon! Highly recommend for anyone who has a Nintendo Switch!", "[This review was collected as part of a promotion.] I love the fact that it is wireless and I don't have to deal with wires being all tangled up. It's easy to hold, perfect size and weight for my hands. Very pleased with it.", "[This review was collected as part of a promotion.] The Enhanced Wireless Controller for Nintendo Switch is easy to set up and use.  I love the Mario on it.", "[This review was collected as part of a promotion.] Power A Enchanted Wireless Controller for Nintendo Switch works great! Love this item, it is easy to hold, and very easy to use and connect to console. Seems like it is very sturdy as well.", "[This review was collected as part of a promotion.] This item came in no time after ordering it which was a plus. It was easy to set up with the game system my boys were super excited and love it.. Now I\u2019m forced to buy another one so both of them can play together.", "[This review was collected as part of a promotion.] I just got the Enhanced Wireless Controller for Nintendo Switch and I must say I was surprised with the quality of it . It definitely makes playing so much easier especially when it comes to certain games.", "[This review was collected as part of a promotion.] This is a wonderful remote it\u2019s make playing the Nintendo switch so much easier. I love the remote it fits perfect in my hand as well my child\u2019s hand! This is so easy to use and much more better for the switch! I highly recommend this remote for anybody that has a Nintendo switch!", "[This review was collected as part of a promotion.] This works perfectly and has alot of extra controls and features.", "[This review was collected as part of a promotion.] I love this remote. It is easy to connect and use. The remote itself is well made and comfortable to hold. The fact that it is wireless is great and makes gaming more enjoyable. It does take batteries, but battery life is long. It is a perfect remote for any gamer.", "[This review was collected as part of a promotion.] I received this controller to test out and review. I suprised my 12 year old with it and he just loved it! He loves that it's wireless. He said it was so cool that he wanted to get his friend one for Christmas! So this is definitely kid approved. Thank you for this opportunity you made one kid very happy!", "This game is perfect for my first grader.  She can play alone, or we can add a Yoshi for a level and I can play with her.", "Awesome game.  Amateur to intermediate skill level with a few hard levels but once you get to the end you\u2019ll play like a pro.", "This game is so cute, easy and mellow. This game can be played with up to two players. My husband and I took turns playing with our 5yr old, he loved it!", "Fun and easy. Though the sound track sounds very uninspired. If only Crafted worlds soundtrack could take note from Yoshi Story.", "It\u2019s a real fun and easy game to play. I\u2019m not sure if there\u2019s a way to do increase difficulty since it only comes with two modes and I play classic. Regardless, the battles are fun, and if you want a game where you don\u2019t have to think way to hard this is it. I love the graphics and I love the creativity that goes into it.", "A charming easy to play title that's perfect for young  kids.", "Overall great game. Interesting and has different elements than other Yoshi games to date. My son absolutely loves it.", "They should know that it\u2019s fun & cute & for all ages.", "Beautifully developed with great music. It appears as only for kids but don\u2019t be fooled. This game has enough puzzles and the replay value is definatley there!", "At first glance you would think this is a kid game and has no entertainment value for adults. I will tell you first hand, that is not the case with this game. The visuals are stunning and there is plenty of action packed platforming for everyone.", "Where to start... do not buy this tv for a next gen console. You have to manually change the input setting from HDMI AUTO to HDMI 2.1 for the Xbox to recognize the 4K @ 120hz. If that wasn\u2019t annoying enough the specs said ALLM, HDR, and VRR. When you go to the TV info screen says no to HDR and VRR. Then proceeded to give the TV another chance by using the apps it offers. What a joke! The screen went green and kept flashing the picture. I tried five to six apps. All the same outcome. Finally on day three of owning it... it quit showing the picture for the Xbox. To confirm it wasn\u2019t the Xbox Series X I switched back to my Samsung Q70R TV which has a better picture and does everything, but 4K @ 120hz abs is still to this day running fine. Needless to say I shouldn\u2019t have bought a VIZIO in the first place like my gut told me. I wasted my gas and time on this TV.", "I bought this almost two weeks ago and next to my brothers LG Oled it holds its own for the price. As a pure Oled screen this is the way to go but It\u2019s not perfect which is to be expected for the price as a budget Oled. It\u2019s native apps that don\u2019t support the tv\u2019s high resolution will have noticeable pixels and it\u2019s already showing signs of Oled burn in if you keep the same image on for more than one minute, you should allow rest mode after 15 sec of inactivity, I\u2019m serious! Just be gentle with the tv and don\u2019t forget to turn it off and you will get an amazing tv.", "No other brand Tv can compete with the quality and price of this TV!", "For those having trouble gaming in 120hz, you have to change the settings to 2.1 on your hdmi 2. I almost didn't buy because the reviews on gaming saying it wouldn't do 120hz at 4k but it absolutely will and the Xbox verified that. Just change your settings to 2.1. The best picture quality on any TV I've ever owned. Truly amazing!", "I've been looking at the new OLED model tvs for a while and I'm so glad I finally purchased my very own OLED 4K tv.  The picture is incredible even if what you're watching isn't in High Def.  High def channels and movies look so good but the 4K programming is insanely sharp. It looks as if you're actually there", "This was a great purchase. Perfect blacks and beautiful color reproduction. I am impressed with the build quality and the attention to detailed such as the the wiring placement. Also the apps that\u2019s included are amazing. It also has Apple TV!! The only thing missing is a voice search on the remote. Other than that great purchase and extremely happy.", "So far so good.  Enjoying the difference that OLED offers.", "Just picked this TV up a couple weeks ago did a lot of research thanks to YouTube and saw that this was the TV to get for gaming A++", "120hrz, VRR, VRR+HDR, black screen but at 60htz it looks great! Vizio please fix.", "Excellent TV! Beautiful.picture. Easy to use, with enough extras .", "[This review was collected as part of a promotion.] This is a great addition to our Nintendo Switch. Easy to set up and easy to use. I highly recommend!!", "[This review was collected as part of a promotion.] I got this for my son and grandson who play the switch together. My son is an old school Nintendo fan so when I saw this with the old graphics I got it immediately. "], "data": [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 47, 2, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "review_description", "count": 435, "min": " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "max": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this."}, {"values": {"label": ["yes: I recommend this product", "2", "No: I don\u2019t recommend this product", "4", "5", "4.2727", "4.6556", " i say it should just have a completely different name slapped onto it. Then i would of not had any quarrels with it", "11 months ago", "1 year ago", " it's a rather unfortunate decision not only because you're excluding gamers but also because of potential happenstance scenarios. Steam goes down? Sorry", " you will hate and loath this game as I did. However if you owned any Craft game or C&C and thought the above mention games were too complex", " which really adds more hassle to the game", " but no one is home", "1", " not just 4K streams and DVD's.\"", " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", " especially if you plan to play the often chaotic but always entertaining simultaneous two player co-op mode.\"", "0", "4.875"], "data": [372, 1, 92, 3, 4, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "recommended_review", "count": 20, "min": " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", "max": "yes: I recommend this product"}, {"values": {"label": ["yes: I recommend this product", "4.2727", "Verified Purchaser", "4.6993", "4.6556", "363", "2390", " because i wouldn't be expecting something so different than what i knew. Now i own both of the \"\"previous\"\" games and they are both excellent", "5", "3", " you're out of luck. A few years down the road and something else happens(such as one of the companies going out of the business or whatnot) and you can't go back to play it for old times sake? Again", " strategic", " but also adds a new era of customization because instead of just going up levels 1", " type of.  So in the spirit of the shopping season i jumped at a another brand new Vizio product", " and to get 4K", "3 years ago", "32"], "data": [244, 6, 222, 1, 2, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "verifed_purchaser", "count": 17, "min": " and to get 4K", "max": "yes: I recommend this product"}, {"values": {"label": ["0", "Verified Purchaser", "363", "1", "306", "2390", "228881042", "2", "3", "228691813", "4", "127332001", "228459804", "228397838", "28", "5", "6", " and so when i found out about this \"\"sequel\"\" i ran out and bought it with out much looking into it", "127185338", "4.2727", "227806298", "227721000", "127127185", " out of luck. Move to an area with limited connectivity? Same thing. I wish developers would stop going with this route", " and epic for you", " 2", " this OLED 55\"\".  ", "7", "126525025", " I have to manually switch the input from Auto to 1.4", "226910861", "226824012", "122140626", "126297513", "126279514", "226623767"], "data": [318, 77, 6, 47, 1, 2, 1, 11, 5, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "helpful_count", "count": 36, "min": " 2", "max": "Verified Purchaser"}, {"values": {"label": ["0", "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "229167959", "228991912", "1", "194520876", "127408484", "2a736f40-6b79-5c49-b539-5eae6b06fe94", "2", "7", "4", "8", "6", "5", "865fb1f7-9fbc-5ec8-89fb-868f67495019", "18", "41", "3", "0a5b2e83-abcb-5537-a109-15a4b8c4f86d", "228476168", "c0fef563-2deb-5c01-acc6-9db6c6fa8368", "15bc27e2-a5ad-5a18-b47e-5f4cd100907c", "11", " i knew it had a different maker but i figured how bad could they have possibly made it... i mean it's Square Enix! Now don't get me wrong it is a good game", "4a650967-e873-5e06-a3d0-81e9530e5a78", "363", "c35409b8-9e25-5996-88e8-e3f1aa9e8065", "3adeb77d-d51a-53aa-9aa2-3908b384030d", "16", "9", " as it's very short-sighted. The graphics are significantly worse than the first one", " then give Supreme Commander 2 a try!  You should feel right at home in this slop show.\"", " 3", "227425437", "227210950", "15", "33722e22-472c-5b56-a877-599999791231", " then back to 2.1. This is very frustrating. ", "02481162-152d-5b33-ba5a-5136b0686613", "8a3401f7-4865-5764-904a-6f8cb7b42edd", "4.875", "0b338d34-27a3-56a0-9787-1d3b437f1ba9", "1962b25e-379f-515a-a961-26950bbd081d", "126289526", "95bf4328-d8c9-52b1-9074-0e246e0f9fe2", "226749057", "6e496bf1-e93c-58ac-8889-a3a9b9b69afa"], "data": [343, 77, 1, 1, 16, 1, 1, 1, 7, 2, 4, 2, 5, 3, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "not_helpful_count", "count": 47, "min": " 3", "max": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a"}, {"values": {"label": ["10 months ago", "fa660933-1130-5c66-9010-24d641f70bc7", "16e925e3-1e59-537e-aa67-1675b613d351", "7f69bc6a-f89c-53d4-a52a-39a8b8512c54", "16 hours ago", "1 day ago", "7 days ago", "9 days ago", "10 days ago", "17 days ago", "18 days ago", "2 years ago", "7ed32763-a3be-57d4-a35e-a166b90de2ee", "16/01/2022 16:17:57", "11 months ago", "21 days ago", "1 month ago", "16/01/2022 16:17:58", "cec7afe6-497f-5ac5-a9c8-b1ca19d4a4b0", "7 years ago", "9 years ago", "10 years ago", "11 years ago", " but i was expecting to buy SC2... Not SC2 revamped... i couldn't just jump into it", "16/01/2022 16:17:59", "228309057", "12 months ago", "16/01/2022 16:18:00", "227799226", "1 year ago", " even on the highest settings. There are ONLY small maps", "No: I don\u2019t recommend this product", " and Experimental", "2 months ago", "2903b4fb-38c1-5b18-86e4-223040292dc1", "3 years ago", "4 years ago", "5 years ago", "9aefa298-d085-5f90-b930-00b20da59e72", "16/01/2022 16:18:03", "0", "16/01/2022 16:18:04", "32", "16/01/2022 16:18:05", "512efb41-f0b9-5a8b-ac21-e6f988f04a2d", "4b63751b-d4c0-5c5f-9138-59a473a7daaa"], "data": [11, 78, 1, 1, 1, 1, 2, 1, 2, 1, 1, 136, 1, 2, 30, 2, 58, 3, 1, 1, 2, 3, 12, 1, 1, 1, 2, 3, 1, 83, 1, 1, 1, 13, 1, 22, 3, 2, 1, 2, 2, 2, 1, 3, 1, 1]}, "label": "reviewed_at", "count": 46, "min": " and Experimental", "max": "fa660933-1130-5c66-9010-24d641f70bc7"}, {"values": {"label": ["5", "4", "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "16/01/2022 16:17:56", "3", "16/01/2022 16:17:57", "2", "1", "16/01/2022 16:17:58", " i had to learn the new feel to the game. In SC2 you now get to your good units by having to research most of them", "538c1919-dad5-54d8-89b1-619b8c7656e3", " and no larger maps to choose from. In the first version you had a large selection of maps", " you can have multiple branches of different customizations", "16/01/2022 16:18:02", "16/01/2022 16:18:03", "1 year ago", "2 years ago", "122158646", "16/01/2022 16:18:05"], "data": [285, 62, 95, 2, 14, 2, 9, 19, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]}, "label": "rating", "count": 19, "min": " and no larger maps to choose from. In the first version you had a large selection of maps", "max": "c58d87e2-558d-5eaa-96b1-2264f00e7e67"}, {"values": {"label": ["4.2727", "ef72459e-8f5c-57dc-af42-0127d2903498", "4.6993", "4.6556", "3.4091", " and experimental units are really not that great", "16/01/2022 16:17:59", "16/01/2022 16:18:00", " in SupCom2 there are around 10-15", "0", " depending on your favored style of play. You can even simply upgrade what units you have instead of the old \"\"send oldies to suicide to make room for the new guys\"\" strategy. Actually", "3.3125", "5", "4", "4.875", "4.0345"], "data": [122, 103, 81, 131, 18, 1, 1, 1, 1, 1, 1, 11, 1, 1, 19, 7]}, "label": "average_rating", "count": 16, "min": " and experimental units are really not that great", "max": "ef72459e-8f5c-57dc-af42-0127d2903498"}, {"values": {"label": ["363", "4.6556", "306", "2390", "22", " yea they are all based of the old games models but i think that most kinda suck comparatively... like the experimental units", " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "0", " it is BETTER to keep the oldies instead of suiciding them", "32", "4.2727", "16/01/2022 16:18:04", "29"], "data": [122, 105, 81, 131, 18, 1, 1, 1, 1, 30, 1, 1, 7]}, "label": "reviews_count", "count": 13, "min": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "max": "4.6556"}, {"values": {"label": ["229196240", "229179703", "229174444", "95223899", "229131414", "229087196", "229080154", "229044038", "228960695", "198688597", "198672375", "196827630", "196827194", "196230804", "195216162", "195708350", "194329916", "194187129", "127432481", "127430959", "127420280", "127414142", "127414207", "127411122", "127409004", "127407425", "127405746", "228929144", "228928290", "228863224", "228776856", "228759010", "228750584", "228749581", "228724687", "228722869", "194027229", "194017047", "192503208", "192137369", "192087597", "192080051", "192046520", "192045625", "192042914", "192041796", "127405362", "127405229", "127404696", "127396175", "127396143", "127359093", "127348302", "127348104", "127347414", "228719614", "127345863", "228712408", "228703343", "228692495", "228632763", "228622725", "228576384", "228545194", "228523449", "192040841", "192039616", "192038437", "191969147", "191868187", "191531039", "191517192", "191510980", "191473354", "191467877", "127345574", "127333838", "127321759", "127320268", "127319595", "127299640", "127295961", "127293457", "127293081", "228523275", "228509090", "228499139", "228478134", "228397787", "228341387", "228321620", "191464723", "191463669", "191462968", "191459315", "191448343", "191443448", "191440654", "191439900", "191439828", "191439957", "127291762", "127286343", "127272761", "127262343", "127260250", "127259475", "127254841", "127250995", "127250993", "127250112", "38246272", "23501684", "23367706", "19236943", "19088941", "19030618", "15250428", "15250438", "15250426", " for so called \"\"game breakers\"\" as they were know for in the old games", "127238242", "127234219", "127230795", "127187464", "127183266", "127179492", "127178055", "127177220", "127161458", "228297521", "228244888", "228226690", "228181572", "228165736", "228114419", "228085186", "228057468", "227938540", "191439701", "191439022", "191438590", "191438462", "191438175", "191437894", "191437728", "191435985", "191434602", "191433776", "127153348", "127152461", "127151155", "127149546", "127147505", "127144002", "127140095", "127137390", "127131702", "127130838", "227875021", "227791669", "227778090", "227771273", "227732223", "227730979", "227715331", "191433462", "191432612", "191432155", "191353081", "191322300", "191322155", "191321523", "191169574", "190972289", "190971178", "127127997", "127125697", "127123561", "127120887", "127117350", "127029556", "127014676", "127012426", "126806434", "15250427", "15250430", "15250425", "15250424", "15250437", " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "15250432", "15250436", "11 years ago", " because the longer they stay on the battlefield", "227695298", "227689648", "227681843", "227672104", "227658242", "227639598", "227614951", "227582245", "227560725", "227547589", "190970117", "190958407", "190900156", "190899558", "190826055", "190820482", "190815305", "190807964", "190805061", "190803084", "126755575", "126755116", "126754711", "126754570", "126746667", "126742656", "126737441", "126736040", "126678115", "126641084", "15250434", "15250431", "190795136", "190786135", "190783552", "190766977", "190764517", "190762148", "190763953", "190763710", "190763007", "190761169", "227514155", "227512948", "227493289", "227489183", "227489075", "227469318", "227466484", "227455329", "227437332", "227433603", "190758968", "190758657", "126629986", "126619345", "126599299", "126597316", "126588300", "126586642", "126576266", "126565334", "126559156", "126552237", "227368178", "227336919", "227333306", "227330788", "227308429", "227300137", "227299158", "227277590", "227277469", "160658457", "157919507", "123364925", "118294186", "116746823", "116634709", "109093076", "108515660", "75707639", "227271113", "227216898", "227212033", "227210524", "227187244", "227186461", "227165525", "227162981", "227149188", "74341808", "126539613", "126536245", "126530828", "126528004", "126526950", "126518100", "126506130", "126498760", "126495952", "227144955", "227115495", "227099195", "227073234", "363", "226961718", "226957452", "226923078", "226915139", "126476050", "126473103", "126440879", "126432204", "126430601", "126410978", "126386211", "126374385", "126350389", "126348541", "126347731", "126346918", "126344921", "126343579", "126337946", "126325080", "126323055", "2390", "126315942", "126302586", "226900312", "226893604", "226870200", "226863307", "226855621", "226844023", "226834410", "226813954", "226754257", "190364463", "122923657", "122567098", "122446616", "122436959", "122339952", "122182335", "122102991", "154204652", "141605618", "138719704", "137193968", "136798584", "136465444", "136365231", "126301922", "126301717", "126291693", "126283489", "126279116", "126277361", "126273657", "226733824", "226732965", "226732331", "226732189", "226723463", "226718702", "226704721", "226700717", "226700432", "122087294", "122023762", "122010486", "121995492", "121974894", "121930697", "121884814", "121884636", "121868056", "121864917", "126268175", "126265497", "126261158", "126253606", "126259865", "126258810", "126258784", "126256170", "126249716", "126252644", "226679986", "226677148", "226674137", "226672941", "226663884", "226662940", "226662747", "226661973", "226608892", "121860312"], "data": [1, 1, 1, 106, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "comment_id", "count": 395, "min": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "max": "95223899"}, {"values": {"label": ["d749678d-aeba-5a6b-b8e2-8d2121463672", "9f20312c-1047-5824-97d2-d5563b8fd046", "178b3b03-2c56-5abc-a016-c74c2633c9c2", "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "bc017585-3bc1-5a37-9e58-f0bed6de9a72", "4167ea1c-87b6-5dbd-a04b-56fc7d1948e9", "b4c20627-111c-5ad9-809f-11d6a82c675d", "ea9ef1ba-d537-5b73-ab71-790616ef3258", "3e14ceea-0717-51ac-9edf-6b0d17b9f978", "3bdf13c6-ed6c-5df7-a7cb-f87507d4b133", "92688319-f675-53b8-9468-2e7b1ea9bbc4", "ff2acd3f-f96f-5935-bdfc-8e29e518fb60", "a3a3d750-800d-5eef-a917-fd5b00598f06", "ebae6bfc-540e-5f39-9ce2-2d46db50b49a", "78865f85-196f-515f-90ed-a8dad95d9065", "89ac96f3-a6a7-5f6e-ac22-302869e30bc7", "65c38814-b259-591c-ae59-a3f0fbae81d0", "902d7992-f6fd-55bd-b5d7-408db5a49648", "540015d7-27e3-50f6-b66b-8646416c0cfb", "00bd1c61-b1e9-5996-9cb2-68f647941463", "5cf58f8e-75b2-555b-b9ac-0edb49219337", "992506c3-cb1d-5a05-afc6-cce6a4a437fd", "70c3cefe-763a-5aca-9b7d-5bd2b36c5595", "c1aea343-68b1-58fa-8a7d-07f265e664cb", "fec5af3e-7f63-5e5d-9649-1b81750f3e24", "bc585083-82d6-5cb5-af8a-7f19120e6f3a", "d92ea3bf-7fab-56df-802f-973a7be01387", "4eeca482-acc8-54f0-bf9c-1552ad6304c3", "b6503cc7-6b14-5ea4-ae9e-5e984741ae65", "4840bb9f-8063-54f1-aafd-dc779ba006b8", "5dfb09b5-3b7b-5c92-8d69-2e487ee55948", "58e11806-69db-59a1-bf1b-1931387149b4", "1b36ae98-a3b9-586b-b75c-92d0b0a64fbe", "ce1ab1c3-34c5-5b21-90d3-be7a37b215d1", "926fe7c6-6345-529c-91bc-35736576d50f", "b74cf53c-979d-5157-b1b1-28572636ecef", "f6a47493-63ec-510b-aba2-8a68eff9bc34", "9699ef26-f730-5927-bf3e-7cdf8ecbb2a5", "3de73f9b-98c9-56e2-805a-e539ab1e5e33", "a2bc0bcb-0540-5dca-b1c2-06430afdd624", "8c024bd3-193e-5631-802c-3a989f6d4f73", "1a337911-6166-5983-b5cf-944db19384c8", "8c51c627-f616-5bdf-aeff-d93bf787994c", "dfa3ef96-f70e-5e78-9ee8-8d0c57f017c2", "8c35296d-ba41-5598-a513-740f8566113e", "6ebdfa30-4058-5fa6-b76a-d8bc6977e810", "960cbf7c-2354-567a-ba9c-537f3e63810f", "69500d83-dab7-5078-9aa1-5e2200736382", "d361c95b-fd18-5024-a6fe-f997562e2d3b", "c74037cf-5c28-5aa1-894a-c9abd50cdc79", "ab03b0d3-cc3b-5cf9-9894-200631099bb4", "296f57cd-b10f-5bd0-8dd9-78048b7c2e37", "667613eb-326c-5e9c-a48d-bdd2461a770c", "603d6f26-ffc4-5059-8cd8-ed6ddd671e63", "7e989ba1-5dbc-561a-b719-01ed3cda849b", "4f131751-4d8a-5bfd-af50-9d2ce3dd046a", "8cbb57c6-0882-59dd-af92-73b57a213812", "86570fa2-2141-573f-93ea-6368fedc9d0d", "a3955d77-2dea-561b-823c-41bc60377780", "9e0d282d-056f-55c9-a62d-13e79bbb844c", "ee801ec0-c5cf-5655-8498-a9770f1a6921", "4ef37b88-1ab9-5d98-adfd-5a7790b9cdfc", "232f5009-6c44-540a-9e7a-040e815522eb", "bb5c5e36-48cd-533e-8b32-ac1840944224", "ce94d9a4-0183-5315-8521-941c99a5aa68", "0fcf6665-8e4c-55e5-8723-8ea686ad425a", "524f0643-9cda-5306-81ab-277f533b47da", "fd3b358c-a67f-5475-a1cd-04c862f97b4e", "aed215bd-32e5-5577-be72-8fe1a4273d12", "87901149-9f7d-5db6-9c6b-7f516bda5b83", "db0b55df-7fd4-5d5c-90d3-eac2b049be4c", "c026bcd2-f440-5b87-95d0-a9dbdd87d4fe", "0d5805fa-77a0-581e-9f6a-b5441020925d", "20b6e8de-5239-5339-97cd-f4a96cf19873", "d7a8c6c4-234e-5c12-a8d0-af859409bd8a", "09c6537e-9796-5aca-a264-354c489b7706", "b6dae06e-562f-5f67-b905-6a267a1b3147", "6ff43da6-1ce0-54d4-9080-221feba20bd8", "9dc8e634-e9bc-584c-b64b-bb39c8f54fce", "3025b560-5f5b-560b-9b15-d3c2ed1468b0", "2dee6b9f-1dd6-500a-9518-e48555992512", "348d2ec6-347b-50e5-9fe8-388a58176915", "de401188-0285-5ddd-93d8-f84f18f155e2", "6879d252-929f-560d-a2f6-c29114a460cf", "065df515-c00f-5674-8005-0e71aac9b6cc", "7b762f11-3f30-5648-898e-b365a7eaedd8", "df5e5870-c422-5585-9dbd-2f01e48ee872", "b9a43399-3aea-58dc-b1c2-96e5bab6e7f4", "e3d25147-7e31-5ade-b955-8c6c07276063", "37ab8cbb-cbe6-5514-bb5a-3223ae898d16", "156a2f4b-a3ee-5a50-8bf2-f2311c908491", "3da6f23f-4693-549c-9b9f-0faa66b56124", "66f84845-97c8-5cca-8bf1-4cc4cdfceead", "8a38edf4-1d13-54d2-a32c-f98303cbd0ac", "b25ea776-319f-5907-bb36-8330e0b9e736", "b7379f49-dc90-56f4-8823-769c4832168b", "92468c29-d5fb-59dc-a142-1e67d15d1ee1", "81bfcb3b-43a9-55da-84ca-2712183f9869", "77925e75-8d4b-5970-9020-ddd3517955c7", "22f370a8-e30f-5cea-9d38-0d7b9da2fd0b", "3c5e7a8f-7138-5143-a3dd-81d9f2bf87e6", "77005922-343e-5afd-8604-de6116cb0a81", "ead016dd-471c-550c-8335-e80ade7ecbb9", "3f2ea70f-6737-57b4-bbff-c6b5af771f90", "14829c73-4cad-510d-9d51-01ef577acadf", "fe7a0330-a5dd-530e-9497-80d37d07253b", "e59c376b-a912-50c5-9d04-8f7f3e7a6d45", "5104f652-46d7-5b1e-bdf2-55b7f55d4b22", "780060a5-4afc-5712-9c61-66c3df2f51ff", "333d879a-9b72-50d3-a5d7-faa0961846ca", "41044c39-03df-5ca0-b0da-9219160fa67b", "c64a9e38-39cc-50ef-9d30-1eed268a4a24", "8e31a70f-17f9-53d5-9f0f-3b578d7433e8", "42674a2c-bab8-5cd9-b2f4-a5b33733beb4", "322502c8-f81a-51b5-b3bf-e6e61a83b045", "c397a7c1-d874-554e-9004-4d7a2422f5d3", "8e0bfb12-1204-59aa-ae95-fc75ec400ba0", "c0b37854-ae65-508d-a8d8-05183e6ca822", "8af5ed1a-cca6-5a39-bcf8-bb9c25ec7806", "c5dd07cc-ca1f-52d8-82df-d13c4e129265", " u can make them with very little ease and there not nearly as effective as they use to be.... which i guess is the trade off for it", "928838d7-ee40-5739-a91c-37320381b139", "0a0d4148-507a-575b-8ca1-9ce89095fc80", "f30f8cd1-56b3-5068-bcd7-d59438a6da70", "caa8b6bd-4ca5-5ed9-b467-f4fc59e596ff", "b6fc226c-c88b-5332-88db-545da41ae9b3", "b0620603-ee01-512d-bdfe-b37993ab43ff", "41b29280-1727-5bba-ac8a-17e914bd2d00", "0efc324a-3a27-5e05-b98d-8cb6cd444775", "3bfce4cc-4c76-5c78-bc93-d740963116f3", "b72f7138-db42-5954-9039-1eebfbe44ba6", "750791b6-adfe-5127-aa53-9a502824f996", "83cdeff3-bf81-5aab-a214-4f778969e26c", "2f8a681e-1bd7-5a6c-a446-4ac731ed373b", "ef6ab344-54b7-5244-a7be-81066f12b6ba", "d29dc126-1eca-5ed3-8156-9f4d98d42b09", "21bbb55e-c631-5317-bbbe-e966c51ddc36", "7fc9e390-1992-5327-9a3f-8730d97e32b3", "e00ba275-4a07-5d26-b371-4317a039c78c", "e6b35618-1a65-58b4-b82f-91fe5c64d444", "85d2e8a6-54a4-5cfd-85b8-a40628881808", "de5d066a-fb60-5496-a2af-4708d4867650", "a803b874-c886-57b3-b93b-16a92cb2c4af", "9d0a0700-633a-5cb9-b33f-88479669ad1c", "78a38873-09a0-5f5c-8680-56bd3d8182bb", "0b9eb2b5-8735-5a5c-b3c1-e574976ff59a", "6680ec17-93e7-5d88-be84-252b6dcf4afa", "830e77d9-5c67-518a-a24d-48656e6ec23a", "9f9fe687-9b39-54dc-a594-be74dc951e9f", "7a0bc368-d016-51c1-a93a-e5255b8818b6", "c68ab9a9-35ca-50e7-8d99-61aa90cc6170", "3c2570e7-dcf8-5ca5-a2e5-cab3f469a020", "eb70dff8-04e8-5a64-a14e-63186d060a0e", "70075879-a707-5623-93eb-21a98adec3ff", "b2f4b512-cb05-54e0-8cdc-5513f11da130", "ca9738d7-fa47-5310-94c9-9abdf85f4aec", "7cdfe34c-abaf-5aef-9de4-e655f148a573", "92c805bc-a7f5-5195-a86c-1bae32b5992c", "342a7542-8347-5f47-a2a1-3210f50a807f", "7c0656aa-e5d5-5531-a479-c2da27eda948", "6344ef26-f49a-5fe7-adf8-f78f0291da78", "9d8c6279-b9ad-5934-8270-e45b1a2514a7", "bb1ba1ea-fdb3-5210-a1f0-c5dde357c6c5", "59c37463-7e8e-5dac-b39d-25c12a73e452", "4336655c-bf54-5815-8b4c-c7257f8ee373", "161d1563-a683-5027-9a7b-226dd83bacc9", "a9ead4c5-5697-5920-8415-47091cdf9b62", "be7a52a7-154c-5468-83e5-ce5d947f712d", "ee96d446-bfa0-5374-b74e-a26f96eab46d", "79fbee79-80ae-5908-8cda-70f9293e272f", "7e71ba28-f137-5fdd-80ab-d91a69dcd9ad", "10273c14-150a-59ac-86f3-2040fae23777", "1a5bd81d-12a7-5f67-b456-c557a1b6029b", "ce147da5-c01e-5a86-a357-f8d3ece4a123", "df892d55-bd89-528b-8528-ebb70103f590", "5465f272-2a25-544e-a43e-a137e0899216", "9603729f-86c8-5e52-a9c4-aea8bc2c705e", "4af31d2f-d9c0-55f4-9083-3945e69aede0", "7be993e6-155e-5555-998b-cedcee64ef71", "60e522b6-7f19-5e3f-8456-548142cd2603", "00a29941-a023-5474-a4bb-3c28f9699a6c", "bc7017a3-b713-5c27-9b55-944deacc859b", "11ca20bc-d09d-5da2-9f77-75560a67b0f2", "4ca56a88-18eb-5e1a-af3e-f09fb8a295b1", "a9aaf6b6-d248-5257-81b4-4261997b6957", "43d68c51-de66-5084-bb9b-beb70dd04227", "74124d14-3a82-5efd-8d25-925413486048", "65a5e017-1707-51de-9fa4-f01bd77a9e1c", "a6daf2c6-b2e0-56b6-942a-20ec613b3e8c", " don't make the same mistake I did. Do not buy this game.\"", "7d45dc21-cb6d-566e-829c-0b6a8f1fcb9d", "fe7d8b34-e569-5186-8dce-57c70a13d88c", "1", " the deadlier they become thanks to experience now. The much-famed and even moreso whined-about economy that made SupCom 1 and Forged Alliance so famous (or infamous", "6dbed12c-450d-541a-a190-c15f03c40aa6", "ddd95f84-96b2-5c7d-bb7c-53c36e6df414", "c636381d-0229-527d-99a8-bff81d749a13", "4d3e75a4-f345-5e58-bdec-b17eba6b54e8", "c434c843-886f-51ac-be66-1444953b1f34", "e98cc6f9-fb85-5bc5-8a5f-709d56e7a08a", "ab190533-6515-5e00-991f-36666c9cb8f4", "b69b8ac8-89ff-5e89-9697-52a682ad0e76", "b707b4b5-8acc-5c69-9279-f1029422274c", "ce132a16-19ad-5dc1-a222-9a18b7751770", "51346905-fab9-5ddd-bdc0-a3e78448129b", "6f4b378a-4b78-5beb-bcc2-2aea05ea730a", "15117320-4aa0-5f15-8d9f-44eb7891adfd", "7578b6e5-5098-5f49-b320-ee99268986f4", "e19bd9fd-6c3b-596b-9014-d6d8e6238e37", "31786614-0e1e-5a38-9e27-8f23084e6ee1", "3ae8c7e2-1f22-5cd8-9992-6d5f03e37b8b", "df9c8e11-c20e-5a8b-b090-975550d21a38", "9d91f740-ff30-5f49-a9e7-32cf33d739c5", "fed5a40d-6b6a-5212-aab1-7d644fd4c0d0", "017d9f32-3702-5eb4-b1fb-7426864383c7", "21945403-7c2d-5e53-bdec-30fc9caec384", "f9469cbd-8ad3-5f74-9b6d-3aefeaf073c7", "2c072257-f611-5e72-a1ab-5dc75ef88f59", "1fc8da0f-ab3c-5904-b6d7-e967083ec472", "3d6378f1-c8fb-53b7-9080-d2429741d858", "2d87329c-fbd9-571f-981d-46ff995fd728", "d9d6ab84-c03e-5838-a724-e49e367d0fdd", "03ef4326-bd0d-5d6d-8a82-673db2023dca", "1892e4f2-a10d-5cbe-ae9e-af24f821912b", "b773b1a6-5b9a-5f68-9670-3489f0334157", "d0cf2335-6dea-596b-8480-460279c701a9", "7597e0e9-5e76-5dde-8bf8-327904575e9f", "269f8e2e-b3e2-54a2-af5b-504e0de18999", "a2db9996-35e7-58d7-ada1-a48703f0843e", "c61a0a2e-6150-5816-827e-7d7fc7f7f94e", "2926a631-7fde-5f98-beff-434285a55c73", "c89c209b-87b7-51c6-b645-604bd2589c10", "fa3daaef-6785-5e0d-a7a0-53a2605e5a60", "6ac96e96-d51b-5c49-8a2a-f21a298a2960", "d433a372-ec33-57de-af65-ddd03d8458ed", "be19f9b0-7d18-50c2-8f4f-d22f83fd1081", "a56d9282-4860-5371-9f05-a9bd99c99914", "58a3cd56-3757-5683-bf5e-043f7dc92826", "a9fd61c1-57e1-5036-8cf4-01149ac3e34d", "c3f3597b-51a8-5aec-a613-90242e40e8d8", "cec310ca-6de1-5376-8bfb-8be08ffd1b87", "fe663898-37db-56ab-9d32-c3d52f93b4e5", "d95796b1-88cb-5c86-bc22-0bc9db290b2f", "4a2b7da3-cc8e-59cd-9dc0-ffa2af5d19c6", "0790d8e1-1514-528a-8f1e-1e5dc035db8b", "4984011a-1fca-57b5-89a6-e76c780daaf7", "7ca99b13-422b-5892-a441-b2dd7bf7a000", "f5f793cc-dd08-5247-9ace-2498e78f061d", "d8b5b07f-b13b-58cc-b896-615b9ad105d5", "de0956d4-0d06-55f1-afce-9551324185ce", "2dc7e561-ee75-5e53-ad76-2859903df7c3", "f255781b-e9a0-57c1-a451-7a35a3332573", "aaaaa9b0-6933-56cd-982c-9093972c44ea", "173c87ef-e2a6-5ad3-89a4-432c8c9b8d3b", "a5a4fa33-a821-53a1-82a9-e28573bb422f", "5cb903ed-3a8c-5949-adae-8c1573defb6d", "0458081f-b0d0-51c3-a5bf-819b1d1ea16b", "0370dddc-2aae-508a-b44d-122e6d641c33", "3b4eb371-c531-5ab8-ac2b-889dd0e24cfd", "11982b37-c606-5a12-a2fe-1999da7e9a6a", "049e260f-a2e3-5ee2-8422-c0b928f66317", "5542b8bf-ac17-55f6-937a-1d90f91b9677", "9bd8d11d-12c7-5078-8ffd-a76aad22839c", "deb423a5-9af3-5ba2-b788-afb7f1433960", "27f54783-5943-5768-8473-f46535b7d205", "984c0a44-286b-5f5c-a04b-21f0ec500bb6", "6ba4d664-9c8a-50a0-80af-696a0a693e1f", "1e939271-deb9-5fe8-a1c4-aa8dbdf78342", "23d9c3da-b664-52b4-bf69-0f8a7d077f90", "9bd2d34a-5e61-57c4-9d29-646e5cf6ba26", "b1f8541f-3d73-58d4-8fd2-91efc595fc96", "88ef6fb7-c95f-5675-9d98-c4a50cfd519a", "b337caff-962c-5242-b3d0-8abebb580064", "e04f8d1a-9267-530b-b5c0-10346dd373e0", "df5a7b8a-f709-59f5-b49d-dc724ec76b61", "859ac623-c5af-5604-91d5-8a99eb2504d5", "5f3917ab-9dd6-5929-9744-e3a2e874d7b4", "a99d570c-bdbd-5227-8609-ece8f499ebb5", "587a3ddd-1619-5729-88bf-61b91642d4c9", "33f65eb0-1f44-526d-9319-c906125ee5c6", "da0393de-bb8b-55f8-86de-58d92cfe4241", "2f7efb29-de97-5904-833a-c9a78dcb9212", "7615eeb0-1644-5875-856a-08aeefb4355c", "77d0486c-c3fa-55ce-a778-25a9ff85e1d6", "821dde30-9ad1-59e3-b367-e0a36dc2691b", "584ee887-b8e9-5831-b34c-9054af211b2e", "83fda476-c6ad-5de0-beb9-24a7cd48fdd2", "9a3be338-8648-50e4-a0f5-805fd576c024", "b79f70f4-fd02-53b5-8027-838f4073ed73", "123e30f0-b2b1-5458-8d8a-faee417f379a", "27ea1f05-cdda-5466-ba89-1578af352018", "71a0a99a-e767-5285-ad31-aabfed1b91d7", "05ca2650-238f-588e-a873-7007194759d7", "dbb361d8-d468-5822-a0a8-10bbb1e5c348", "bb53d5c0-348a-5800-87a7-d4eb984ca544", "89c9e45b-2b49-5be2-9e62-52634bc7fad7", "11338a10-215e-5f67-a575-5237fef59b16", "ece4609f-bd97-5a47-82b3-c1f5352598f3", "f3a80eb1-718b-5c8d-b318-b18bc83fb20e", "a77123ba-ba04-5c96-9775-f7933c733a37", "227010137", "93e6fc6f-7bf6-5a2e-b4a0-834fc2475980", "7b9af1f2-7b3d-5164-80f0-800133b61ce4", "f864ba04-27e1-5673-875f-6fd69443fb3e", "922e0d7d-c3f4-5b50-a543-e756033d3a1c", "4773a39c-0194-5088-af97-1597830af3cb", "23759918-be89-5c65-9bf4-80ffb801cdff", "378bfa7c-9e8d-5d24-9947-c0515f458a2c", "bc495ea9-fc64-52df-a68f-c177f7c045d4", "9d54e2ee-64d7-501b-adbe-31c0969dbe17", "1babf017-7fdf-5c87-8652-1407fa60eb90", "d7029cd7-b7f2-5db5-8963-596a04b78acd", "e1f7d79c-f4a9-505d-9273-c1de69d35bda", "8e92998d-0da9-5f08-b431-fcde798123c9", "7f06208f-0a2b-54ba-94ea-112a39a0c52e", "a4ae2322-89b3-504a-b7e0-9fa33a9ca17e", "138dec55-89dd-5a19-b289-861f05404137", "1df8ba9d-c4b7-5f94-ac1b-796c510d5a5e", "46be1ec8-0af4-56f1-89c5-a57e8a345971", "1704cd22-d544-5d71-9815-f5eb2372a044", "bd6cd803-2b83-5424-9c1e-5d536f889b79", "a8cb85ec-1fb1-592d-86dd-ad1977d95f62", "126319104", "aac40f5b-5309-54ee-b48f-8cef2b574aa1", "48d6e2a3-a18e-56d1-a6c2-3f3d10c0238f", "9b0e9798-1104-51bb-bb02-c4791677f066", "ab53e60a-a8f5-514d-b991-35bb8c11d5b5", "07271c3d-9b17-5d98-8c25-bdd77055b420", "213d7265-2a67-5a82-8be4-aedcc9d26874", "6a01d10d-880f-5927-a855-9877f163f764", "ccbc3319-a7f8-55cd-99c4-8df80b9f986e", "653adbc8-2641-556e-95bb-4e98b787d90b", "090663b7-8c74-501b-8c5c-ad3a2534b71f", "8a8d8b55-7214-5e92-b9ed-733d6bf7071a", "8625e7a7-4e27-5d30-a05b-fe5bf7c2cadd", "9bf14046-e0c5-500a-9dcf-e9c0e6afb859", "814c2ff9-f939-5b24-8c3e-41e751846aa3", "89ff972f-705a-50a7-8f9d-f001de728a39", "a881b3e6-56f2-5ed3-99fb-dc2394c9a4eb", "6ffa7acb-1ab2-53b2-b96c-7d8ffc9cad47", "11608ce6-435a-5fa7-8361-78c102e07aa6", "330fc9b1-4297-500d-b450-59e0c113c0c8", "29596331-f93b-5f15-b930-ea33a3c3da35", "e77e4e5f-c996-51ef-bb79-6354405c211b", "f2fad2ce-ed9a-598f-9e5a-a3ad7ea6a717", "6b553447-1f16-512b-b18d-81f6ffac6d98", "0cf0d647-5307-585d-8435-a37e7f419aa3", "4fd68a13-9df5-5e86-b0a8-836bae43d243", "36b7fb9b-c0eb-5073-b128-5bd4c7d72748", "3f2027c9-d810-5e8b-b6ea-5a2af73af35f", "dc10d9ff-527d-5235-8da4-213d2422ccc5", "fd6bea00-05a9-5cd4-98f9-5f0d4ed43eb0", "29337594-2061-52d7-9c1a-b31c9022a6b3", "c0601d16-e5fe-5975-a114-e857b25aef61", "c2e549f2-3344-5ca7-9e6a-2b4bd5a25504", "ea57e9d3-97b4-56a0-b046-1b7024e7f67a", "7c5e8e10-dca1-528f-875b-96f7b995033a", "60bdb40e-e15c-5bfa-967b-9aa559482629", "23656563-b23a-5a13-b5c5-5ab4eaabf6e9", "74c08633-86e1-5e62-a815-f443ab052ecd", "3ff9d937-f377-5e4e-b3a8-ba7eb733ad07", "2620434c-3ae6-501e-ae0e-15e040f9a198", "2cd61b63-9d87-5b31-a9f0-29eb39dc6df2", "3dab1ab5-cb69-58f7-819d-dff2b315d6af", "8592ca19-f069-5470-92be-ef5503f7df48", "3add2868-0cfc-5f48-8791-d926b2dbded2", "ad9b54e3-4762-590b-a852-63af3528cbbd", "385e416e-b857-55ee-ac2a-0576072e6373", "e052cd77-4a49-532c-879f-d46458da984a", "afd78dcb-1b2b-5967-bdaf-e82cc7a64652", "db126a54-89c7-5ad8-ba95-641b8c223538", "19ee363b-60a8-5ded-96af-6f28febe3495", "2d355f38-1266-5775-9058-b21faddb6072", "bef4412d-50fc-579b-a749-e67a52661770", "7b82a6a3-87e7-5cfe-876f-56a53ab2eecd", "fd975a90-b8e3-5159-8130-c50c5ac945eb", "bd4d2b81-94df-5627-889b-21872c0e777d", "ef5055a5-a02c-5472-87a9-158244c487f6", "86d8bb86-c5df-535b-9e95-d709cf4b5922", "17905c2b-6d32-56c8-b6eb-5d4ab9f2f219", "19a05085-2d6f-5a53-9fe9-8dc9942c7879", "e5c8c18d-9848-59fe-9d4a-12c604a675b0", "e6a73770-f7cd-564e-bf77-367069bbcb04", "fee58b67-3483-5b70-bcb6-74e5f0e93fdb", "f882a003-351a-5ef7-b7b7-757d81ef4495", "d736627e-a587-5ffc-b505-49e31c8867f4", "995d0ca0-de0d-58fa-90d5-7d9799b0e36d", "29f3ac3e-d2fb-5187-a780-1670136e97a0", "206cfb0b-c2bd-5c16-8699-f8f01d670f44", "268a103b-4fb8-5479-8872-9cb3d3383705", "8cceda67-4c9c-5187-8a0e-fae36799ed85", "bef97385-8ff8-50e6-940f-f0f05b81a9c4", "53298df5-7dec-51dc-b18f-29b2a7165011", "47719f17-1a09-557b-a952-c2ed310910b1", "a0548af2-8959-52a2-ab05-c73a838d9145"], "data": [1, 1, 1, 106, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "uniq_id", "count": 395, "min": " don't make the same mistake I did. Do not buy this game.\"", "max": "ff3fad3f-62ee-54c5-bab0-6009af0cf671"}, {"values": {"label": ["16/01/2022 16:17:56", "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "16/01/2022 16:17:57", "16/01/2022 16:17:58", "16/01/2022 16:17:59", " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "16/01/2022 16:18:00", "No: I don\u2019t recommend this product", "3.4091", " lol) has been DRASTICALLY simplified", "16/01/2022 16:18:01", "16/01/2022 16:18:02", "16/01/2022 16:18:03", "16/01/2022 16:18:04", "2bb7b6b6-1b88-5903-a898-0a754ac687d8", "16/01/2022 16:18:05", "16/01/2022 16:18:06"], "data": [13, 106, 52, 45, 47, 1, 55, 1, 1, 1, 32, 29, 27, 43, 1, 45, 1]}, "label": "scraped_at", "count": 17, "min": " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "max": "b5141b5e-d8d2-578f-a02e-1e47f25018ab"}, {"values": {"label": ["0.0 - 49.8", "49.8 - 99.6", "99.6 - 149.4", "149.4 - 199.2", "199.2 - 249.0", "249.0 - 298.8", "298.8 - 348.6", "348.6 - 398.4", "398.4 - 448.2", "448.2 - 498.0"], "data": [51, 50, 50, 50, 49, 50, 50, 50, 50, 50]}, "label": "index_stringindexer_transform", "count": 10, "min": 0.0, "max": 498.0}, {"values": {"label": ["0.0 - 3.7", "3.7 - 7.4", "7.4 - 11.1", "11.1 - 14.8", "14.8 - 18.5", "18.5 - 22.2", "22.2 - 25.9", "25.9 - 29.6", "29.6 - 33.3", "33.3 - 37.0"], "data": [407, 62, 5, 3, 4, 4, 3, 4, 4, 4]}, "label": "name_stringindexer_transform", "count": 10, "min": 0.0, "max": 37.0}, {"values": {"label": ["0.0 - 2.1", "2.1 - 4.2", "4.2 - 6.3", "6.3 - 8.4", "8.4 - 10.5", "10.5 - 12.6", "12.6 - 14.7", "14.7 - 16.8", "16.8 - 18.9", "18.9 - 21.0"], "data": [362, 78, 33, 13, 3, 2, 2, 2, 2, 3]}, "label": "brand_stringindexer_transform", "count": 10, "min": 0.0, "max": 21.0}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [280, 132, 22, 38, 11, 10, 2, 1, 2, 2]}, "label": "sku_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}, {"values": {"label": ["0.0 - 41.5", "41.5 - 83.0", "83.0 - 124.5", "124.5 - 166.0", "166.0 - 207.5", "207.5 - 249.0", "249.0 - 290.5", "290.5 - 332.0", "332.0 - 373.5", "373.5 - 415.0"], "data": [126, 41, 42, 41, 42, 41, 42, 41, 42, 42]}, "label": "reviewer_name_stringindexer_transform", "count": 10, "min": 0.0, "max": 415.0}, {"values": {"label": ["0.0 - 39.2", "39.2 - 78.4", "78.4 - 117.6", "117.6 - 156.8", "156.8 - 196.0", "196.0 - 235.2", "235.2 - 274.4", "274.4 - 313.6", "313.6 - 352.8", "352.8 - 392.0"], "data": [147, 39, 39, 39, 39, 40, 39, 39, 39, 40]}, "label": "review_title_stringindexer_transform", "count": 10, "min": 0.0, "max": 392.0}, {"values": {"label": ["0.0 - 43.4", "43.4 - 86.8", "86.8 - 130.2", "130.2 - 173.6", "173.6 - 217.0", "217.0 - 260.4", "260.4 - 303.8", "303.8 - 347.2", "347.2 - 390.6", "390.6 - 434.0"], "data": [109, 43, 44, 43, 43, 44, 43, 44, 43, 44]}, "label": "review_description_stringindexer_transform", "count": 10, "min": 0.0, "max": 434.0}, {"values": {"label": ["0.0 - 1.9", "1.9 - 3.8", "3.8 - 5.7", "5.7 - 7.6", "7.6 - 9.5", "9.5 - 11.4", "11.4 - 13.3", "13.3 - 15.2", "15.2 - 17.1", "17.1 - 19.0"], "data": [464, 15, 7, 2, 2, 2, 2, 2, 2, 2]}, "label": "recommended_review_stringindexer_transform", "count": 10, "min": 0.0, "max": 19.0}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [466, 15, 6, 3, 1, 2, 2, 1, 2, 2]}, "label": "verifed_purchaser_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}, {"values": {"label": ["0.0 - 3.5", "3.5 - 7.0", "7.0 - 10.5", "10.5 - 14.0", "14.0 - 17.5", "17.5 - 21.0", "21.0 - 24.5", "24.5 - 28.0", "28.0 - 31.5", "31.5 - 35.0"], "data": [453, 15, 7, 3, 4, 3, 4, 3, 4, 4]}, "label": "helpful_count_stringindexer_transform", "count": 10, "min": 0.0, "max": 35.0}, {"values": {"label": ["0.0 - 4.6", "4.6 - 9.2", "9.2 - 13.8", "13.8 - 18.4", "18.4 - 23.0", "23.0 - 27.6", "27.6 - 32.2", "32.2 - 36.8", "36.8 - 41.4", "41.4 - 46.0"], "data": [448, 14, 5, 5, 4, 5, 5, 4, 5, 5]}, "label": "not_helpful_count_stringindexer_transform", "count": 10, "min": 0.0, "max": 46.0}, {"values": {"label": ["0.0 - 4.5", "4.5 - 9.0", "9.0 - 13.5", "13.5 - 18.0", "18.0 - 22.5", "22.5 - 27.0", "27.0 - 31.5", "31.5 - 36.0", "36.0 - 40.5", "40.5 - 45.0"], "data": [385, 58, 15, 8, 10, 5, 5, 4, 5, 5]}, "label": "reviewed_at_stringindexer_transform", "count": 10, "min": 0.0, "max": 45.0}, {"values": {"label": ["0.0 - 1.8", "1.8 - 3.6", "3.6 - 5.4", "5.4 - 7.2", "7.2 - 9.0", "9.0 - 10.8", "10.8 - 12.6", "12.6 - 14.4", "14.4 - 16.2", "16.2 - 18.0"], "data": [380, 81, 23, 4, 2, 2, 2, 2, 2, 2]}, "label": "rating_stringindexer_transform", "count": 10, "min": 0.0, "max": 18.0}, {"values": {"label": ["0.0 - 1.5", "1.5 - 3.0", "3.0 - 4.5", "4.5 - 6.0", "6.0 - 7.5", "7.5 - 9.0", "9.0 - 10.5", "10.5 - 12.0", "12.0 - 13.5", "13.5 - 15.0"], "data": [253, 103, 100, 18, 18, 1, 2, 1, 2, 2]}, "label": "average_rating_stringindexer_transform", "count": 10, "min": 0.0, "max": 15.0}, {"values": {"label": ["0.0 - 1.2", "1.2 - 2.4", "2.4 - 3.6", "3.6 - 4.8", "4.8 - 6.0", "6.0 - 7.2", "7.2 - 8.4", "8.4 - 9.6", "9.6 - 10.8", "10.8 - 12.0"], "data": [253, 105, 81, 30, 18, 8, 1, 1, 1, 2]}, "label": "reviews_count_stringindexer_transform", "count": 10, "min": 0.0, "max": 12.0}, {"values": {"label": ["0.0 - 39.4", "39.4 - 78.8", "78.8 - 118.2", "118.2 - 157.6", "157.6 - 197.0", "197.0 - 236.4", "236.4 - 275.8", "275.8 - 315.2", "315.2 - 354.6", "354.6 - 394.0"], "data": [145, 39, 40, 39, 39, 40, 39, 40, 39, 40]}, "label": "comment_id_stringindexer_transform", "count": 10, "min": 0.0, "max": 394.0}, {"values": {"label": ["0.0 - 39.4", "39.4 - 78.8", "78.8 - 118.2", "118.2 - 157.6", "157.6 - 197.0", "197.0 - 236.4", "236.4 - 275.8", "275.8 - 315.2", "315.2 - 354.6", "354.6 - 394.0"], "data": [145, 39, 40, 39, 39, 40, 39, 40, 39, 40]}, "label": "uniq_id_stringindexer_transform", "count": 10, "min": 0.0, "max": 394.0}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [161, 99, 45, 88, 32, 56, 14, 1, 2, 2]}, "label": "scraped_at_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}]}, "selectedFE": [{"transformationsData": [{"feature_label": "index", "transformation_label": "String Indexer"}], "feature": "index", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "211.5", "stddev": "122.54", "min": "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "max": "in between each secret is so satisfying.\"", "missing": "0", "distinct": "499"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "index"}, {"transformationsData": [{"feature_label": "name", "transformation_label": "String Indexer"}], "feature": "name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "469", "mean": "", "stddev": "", "min": " and they kind of fight over it.  They really like the retro Mario on the controller", "max": "yes: I recommend this product", "missing": "31", "distinct": "38"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "name"}, {"transformationsData": [{"feature_label": "brand", "transformation_label": "String Indexer"}], "feature": "brand", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "451", "mean": "", "stddev": "", "min": " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", "max": "yes: I recommend this product", "missing": "49", "distinct": "22"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "brand"}, {"transformationsData": [{"feature_label": "sku", "transformation_label": "String Indexer"}], "feature": "sku", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "451", "mean": "266631.73", "stddev": "99207.12", "min": " #1 is eARC (awesome)", "max": "yes: I recommend this product", "missing": "49", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "sku"}, {"transformationsData": [{"feature_label": "reviewer_name", "transformation_label": "String Indexer"}], "feature": "reviewer_name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "453", "mean": "19.92", "stddev": "101.18", "min": " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "max": "zachR", "missing": "47", "distinct": "416"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviewer_name"}, {"transformationsData": [{"feature_label": "review_title", "transformation_label": "String Indexer"}], "feature": "review_title", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "445", "mean": "0.0", "stddev": "0.0", "min": " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "max": "look out gamerz, here comez awsome", "missing": "55", "distinct": "393"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "review_title"}, {"transformationsData": [{"feature_label": "review_description", "transformation_label": "String Indexer"}], "feature": "review_description", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "454", "mean": "3.84", "stddev": "1.83", "min": " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "max": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "missing": "46", "distinct": "435"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "review_description"}, {"transformationsData": [{"feature_label": "recommended_review", "transformation_label": "String Indexer"}], "feature": "recommended_review", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "425", "mean": "4.09", "stddev": "1.21", "min": " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", "max": "yes: I recommend this product", "missing": "75", "distinct": "20"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "recommended_review"}, {"transformationsData": [{"feature_label": "verifed_purchaser", "transformation_label": "String Indexer"}], "feature": "verifed_purchaser", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "258", "mean": "655.06", "stddev": "958.24", "min": " and to get 4K", "max": "yes: I recommend this product", "missing": "242", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "verifed_purchaser"}, {"transformationsData": [{"feature_label": "helpful_count", "transformation_label": "String Indexer"}], "feature": "helpful_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "424", "mean": "7017251.36", "stddev": "36576741.04", "min": " 2", "max": "Verified Purchaser", "missing": "76", "distinct": "36"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "helpful_count"}, {"transformationsData": [{"feature_label": "not_helpful_count", "transformation_label": "String Indexer"}], "feature": "not_helpful_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "424", "mean": "4495646.89", "stddev": "30454540.27", "min": " 3", "max": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "missing": "76", "distinct": "47"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "not_helpful_count"}, {"transformationsData": [{"feature_label": "reviewed_at", "transformation_label": "String Indexer"}], "feature": "reviewed_at", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "423", "mean": "91221663.0", "stddev": "124910521.85", "min": " and Experimental", "max": "fa660933-1130-5c66-9010-24d641f70bc7", "missing": "77", "distinct": "46"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviewed_at"}, {"transformationsData": [{"feature_label": "rating", "transformation_label": "String Indexer"}], "feature": "rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "406", "mean": "313231.79", "stddev": "6185743.26", "min": " and no larger maps to choose from. In the first version you had a large selection of maps", "max": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "missing": "94", "distinct": "19"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "rating"}, {"transformationsData": [{"feature_label": "average_rating", "transformation_label": "String Indexer"}], "feature": "average_rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "398", "mean": "4.44", "stddev": "0.43", "min": " and experimental units are really not that great", "max": "ef72459e-8f5c-57dc-af42-0127d2903498", "missing": "102", "distinct": "16"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "average_rating"}, {"transformationsData": [{"feature_label": "reviews_count", "transformation_label": "String Indexer"}], "feature": "reviews_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "396", "mean": "978.9", "stddev": "1006.83", "min": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "max": "4.6556", "missing": "104", "distinct": "13"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviews_count"}, {"transformationsData": [{"feature_label": "comment_id", "transformation_label": "String Indexer"}], "feature": "comment_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "165972981.36", "stddev": "56535283.62", "min": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "max": "95223899", "missing": "105", "distinct": "395"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "comment_id"}, {"transformationsData": [{"feature_label": "uniq_id", "transformation_label": "String Indexer"}], "feature": "uniq_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "117776414.0", "stddev": "113745916.96", "min": " don't make the same mistake I did. Do not buy this game.\"", "max": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "missing": "105", "distinct": "395"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "uniq_id"}, {"transformationsData": [{"feature_label": "scraped_at", "transformation_label": "String Indexer"}], "feature": "scraped_at", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "3.41", "stddev": "nan", "min": " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "max": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "missing": "105", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "scraped_at"}], "autoFE_flag": true}, "status": "new", "position": {"x": 62, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/transformation/feature-transformation.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "transformation", "text": "Auto FE", "slug": "auto-fe", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10"}, "ManualFE": {"FE": []}, "selectedFE": [], "autoFE_flag": true}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"inherited": true, "checked": true, "field": "index_stringindexer", "alias": "index_stringindexer", "type": "real", "position": 0}, {"inherited": true, "checked": true, "field": "name_stringindexer", "alias": "name_stringindexer", "type": "real", "position": 1}, {"inherited": true, "checked": true, "field": "brand_stringindexer", "alias": "brand_stringindexer", "type": "real", "position": 2}, {"inherited": true, "checked": true, "field": "sku_stringindexer", "alias": "sku_stringindexer", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "reviewer_name_stringindexer", "alias": "reviewer_name_stringindexer", "type": "real", "position": 4}, {"inherited": true, "checked": true, "field": "review_title_stringindexer", "alias": "review_title_stringindexer", "type": "real", "position": 5}, {"inherited": true, "checked": true, "field": "review_description_stringindexer", "alias": "review_description_stringindexer", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "recommended_review_stringindexer", "alias": "recommended_review_stringindexer", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "verifed_purchaser_stringindexer", "alias": "verifed_purchaser_stringindexer", "type": "real", "position": 8}, {"inherited": true, "checked": true, "field": "helpful_count_stringindexer", "alias": "helpful_count_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "not_helpful_count_stringindexer", "alias": "not_helpful_count_stringindexer", "type": "real", "position": 10}, {"inherited": true, "checked": true, "field": "reviewed_at_stringindexer", "alias": "reviewed_at_stringindexer", "type": "real", "position": 11}, {"inherited": true, "checked": true, "field": "rating_stringindexer", "alias": "rating_stringindexer", "type": "real", "position": 12}, {"inherited": true, "checked": true, "field": "average_rating_stringindexer", "alias": "average_rating_stringindexer", "type": "real", "position": 13}, {"inherited": true, "checked": true, "field": "reviews_count_stringindexer", "alias": "reviews_count_stringindexer", "type": "real", "position": 14}, {"inherited": true, "checked": true, "field": "comment_id_stringindexer", "alias": "comment_id_stringindexer", "type": "real", "position": 15}, {"inherited": true, "checked": true, "field": "uniq_id_stringindexer", "alias": "uniq_id_stringindexer", "type": "real", "position": 16}, {"inherited": true, "checked": true, "field": "scraped_at_stringindexer", "alias": "scraped_at_stringindexer", "type": "real", "position": 17}], "actual_schema": [{"inherited": true, "checked": true, "field": "index", "alias": "index", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "name", "alias": "name", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "brand", "alias": "brand", "type": "String", "position": 2}, {"inherited": true, "checked": true, "field": "sku", "alias": "sku", "type": "String", "position": 3}, {"inherited": true, "checked": true, "field": "reviewer_name", "alias": "reviewer_name", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "review_title", "alias": "review_title", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "review_description", "alias": "review_description", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "recommended_review", "alias": "recommended_review", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "verifed_purchaser", "alias": "verifed_purchaser", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "helpful_count", "alias": "helpful_count", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "not_helpful_count", "alias": "not_helpful_count", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "reviewed_at", "alias": "reviewed_at", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "rating", "alias": "rating", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "average_rating", "alias": "average_rating", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "reviews_count", "alias": "reviews_count", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "comment_id", "alias": "comment_id", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "uniq_id", "alias": "uniq_id", "type": "String", "position": 16}, {"inherited": true, "checked": true, "field": "scraped_at", "alias": "scraped_at", "type": "String", "position": 17}], "selected_schema": [], "created_at": "2025-01-18 23:45:30.274000", "originalcount": 5321, "samplecount": 546, "samplefile": "/FileStore/platform/sampleData/678c3d1a820abd653b9b85be/part-00000-63ae79d1-6839-4975-8817-215afb701a8c-c000.csv", "joinSchema": [], "updated_at": "2025-01-18 23:50:04.811000", "__v": 0, "datacache": 0, "sampleData": [{"index": "FYI...the 65\u201d HD television I had to replace was a Samsung that was about 4 or 5 years old that stopped working after some loud cracking and popping noises that sounded like the transformer on an overhead power line blowing out. However", "name": " my 42\u201d VIZIO that I bought in \u201808 doesn\u2019t even have a single bad pixel. Food for thought.\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "10 months ago", "recommended_review": "2", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "229167959", "reviewed_at": "16e925e3-1e59-537e-aa67-1675b613d351", "rating": "16/01/2022 16:17:56", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "8", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "jonck", "review_title": "Great features", "review_description": "I got this today 2/25 for my birthday present from my son as a surprise gift, without any prior guess or information at all. My previous one in my master bed room was quite old Samsung 50\u201d PD TV, which was ok but heavy and bulky compared to this. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "16", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Ryan CIN3MATIX", "review_title": "Beautiful Elite Series 2", "review_description": "This controller has always been great but this one is a work of art.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "195708350", "uniq_id": "89ac96f3-a6a7-5f6e-ac22-302869e30bc7", "scraped_at": "16/01/2022 16:17:57"}, {"index": "19", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Skyturtle97", "review_title": "Excellent purchase.", "review_description": "Love the controller use it everytime I play. The remote plays excellent. Be carefull of the back buttons though do to being removable I feel like they will wear out faster than most.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "18 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "194187129", "uniq_id": "902d7992-f6fd-55bd-b5d7-408db5a49648", "scraped_at": "16/01/2022 16:17:57"}, {"index": "27", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jeremy Green", "review_title": "Another Win-tendo Jewel!!", "review_description": "The quirky style that shined in Yoshi\u2019s Wooly World has gotten a serious upgrade in this new gem from Nintendo.  Like all it\u2019s first-party titles, this game is nearly flawless.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "42", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "DrKillem", "review_title": "Amazing!", "review_description": "Best Xbox controller I've owned. Worth every penny. Owned for a month with no issues. Only con is I wish there were replacement joysticks, I love these but i know I'm going to wear them out, and I won't have Master Cheif green ones to replace :/", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192503208", "uniq_id": "3de73f9b-98c9-56e2-805a-e539ab1e5e33", "scraped_at": "16/01/2022 16:17:57"}, {"index": "44", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "eyesayahh", "review_title": "Best Controller", "review_description": "This controller is incredibly responsive. It\u2019s fully customizable with lots of additional features & settings that can be adjusted to your preferences. I was skeptical at first due to the price but after a fair amount of use I wouldn\u2019t game with anything else", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "4", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192087597", "uniq_id": "8c024bd3-193e-5631-802c-3a989f6d4f73", "scraped_at": "16/01/2022 16:17:57"}, {"index": "53", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "SamuraiMatt", "review_title": "Tank Yoshi and the layered egg aiming", "review_description": "Fun and cute, but some of the mechanics don't work that well (Tank Yoshi and the mutil-layer egg aiming). Still fun, but needs improvement in the mentioned areas. See Caddicarus' analysis.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127396175", "uniq_id": "c74037cf-5c28-5aa1-894a-c9abd50cdc79", "scraped_at": "16/01/2022 16:17:57"}, {"index": "75", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Marco AP", "review_title": "Buttons don\u2019t register", "review_description": "AXYB buttons do no register unless they are 100% fully pressed in. Annoying there is no pressure sensitivity!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "18", "reviewed_at": "1 month ago", "rating": "1", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191531039", "uniq_id": "db0b55df-7fd4-5d5c-90d3-eac2b049be4c", "scraped_at": "16/01/2022 16:17:58"}, {"index": "76", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "I own this", "review_title": "Excellent controller", "review_description": "This no longer available item is excellent and you should buy one, but you can\u2019t.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "41", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191517192", "uniq_id": "c026bcd2-f440-5b87-95d0-a9dbdd87d4fe", "scraped_at": "16/01/2022 16:17:58"}, {"index": "78", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "516", "review_title": "Solid controller", "review_description": "So far I love the feel and look of this controller. Need to wait and see how the grips hold up to give it a 5 star rating.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "4", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191473354", "uniq_id": "20b6e8de-5239-5339-97cd-f4a96cf19873", "scraped_at": "16/01/2022 16:17:58"}, {"index": "82", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Bigbadbarry", "review_title": "Yoshi Fun!", "review_description": "I loved the Yoshi yarn game on the 3DS & I love the New Yoshi Yarn game on the switch.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "86", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "HeliosExe", "review_title": "gud", "review_description": "10/10, it is a very creative, thinking out of the box game, it might be a bit easy, but it is fun to and I will 100% it even if it's the last thing I do.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127299640", "uniq_id": "2dee6b9f-1dd6-500a-9518-e48555992512", "scraped_at": "16/01/2022 16:17:58"}, {"index": "87", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "platygirl", "review_title": "Yoshi's Crafted World... Buy it TODAY", "review_description": "OMG, this is the ultimate of fun, silly, fantasy escapism. Sit back, relax, and give yourself an hour to let Yoshi explore the hand-made world of tape, cardboard, and pipe cleaners", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127295961", "uniq_id": "348d2ec6-347b-50e5-9fe8-388a58176915", "scraped_at": "16/01/2022 16:17:58"}, {"index": "3. The remote is also not bad at all.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "The Bad: Pre-calibrations could improve", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "100", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Harbinger86", "review_title": "Love it", "review_description": "Great item and excellent condition. Works awesome!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191464723", "uniq_id": "3da6f23f-4693-549c-9b9f-0faa66b56124", "scraped_at": "16/01/2022 16:17:58"}, {"index": "101", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Incredible controller!", "review_description": "Very cool design, feels great and comfortable in my hands.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191463669", "uniq_id": "66f84845-97c8-5cca-8bf1-4cc4cdfceead", "scraped_at": "16/01/2022 16:17:58"}, {"index": "102", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Halo Infinite Elite Series 2 Controller", "review_description": "This Halo Infinite Elite Series 2 controller is so awesome with the Halo theme on it, it's beautiful.  Being able to customize the controller to my liking ranging from the controller sticks, d-pad, and how short you want your trigger throw is freaking amazing compared to a normal controller.  Only con is that it's expensive, but once you open up the whole package and unboxing experience it is well worth the price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "28", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191462968", "uniq_id": "8a38edf4-1d13-54d2-a32c-f98303cbd0ac", "scraped_at": "16/01/2022 16:17:58"}, {"index": "108", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Parker86", "review_title": "Worth every penny.", "review_description": "This was my first elite controller and I love it, it\u2019s definitely a game changer and looks beautiful.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439828", "uniq_id": "22f370a8-e30f-5cea-9d38-0d7b9da2fd0b", "scraped_at": "16/01/2022 16:17:58"}, {"index": "132", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Ems C", "review_title": "Big replay value", "review_description": "I'm in love with everything from this game and I appreciate the replay value as well. You can go back to a level and find new tasks/goals", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127230795", "uniq_id": "f30f8cd1-56b3-5068-bcd7-d59438a6da70", "scraped_at": "16/01/2022 16:17:59"}, {"index": "134", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Kids love i", "review_title": "Kids love it", "review_description": "It actually looks crafty and there is so much to explore and you can", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "141", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TCTV", "review_title": "Very Nice", "review_description": "This is my 3rd Vizio TV. 1st OLED. They are all 5 star products!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228297521", "uniq_id": "b72f7138-db42-5954-9039-1eebfbe44ba6", "scraped_at": "16/01/2022 16:17:59"}, {"index": "159", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Adyn Evans", "review_title": "Great once I got the working product.", "review_description": "Thumbstick issues straight out of box. Had to send back to Microsoft to exchange for working one. After that it\u2019s wonderful. More of a quality control issue on Microsoft\u2019s end than gamestops fault, however when I reached out to GameStop about the purchase I was told they didn\u2019t have any to replace it with. Just a general pain in the butt just for me to get a working product that I paid a lot of money for.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191433776", "uniq_id": "9f9fe687-9b39-54dc-a594-be74dc951e9f", "scraped_at": "16/01/2022 16:17:59"}, {"index": "160", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "glumee", "review_title": "Nintendo Just KNOWS Fun!", "review_description": "Typical, classic, Nintendo fun! Challenging? Not very. Enjoyable from beginning to end? Absolutely!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127153348", "uniq_id": "7a0bc368-d016-51c1-a93a-e5255b8818b6", "scraped_at": "16/01/2022 16:17:59"}, {"index": "173", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "deshon", "review_title": "OK Updates would make it better", "review_description": "Some features are missing and broken but when it works its great!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227791669", "uniq_id": "6344ef26-f49a-5fe7-adf8-f78f0291da78", "scraped_at": "16/01/2022 16:18:00"}, {"index": "197", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "RobertKW", "review_title": "Surprisingly fun", "review_description": "I haven't been a huge fan of the series since it is a easier version A Mario title but this game has been surprisingly fun", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127014676", "uniq_id": "bc7017a3-b713-5c27-9b55-944deacc859b", "scraped_at": "16/01/2022 16:18:00"}, {"index": "217", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Twan", "review_title": "Price to feature king!", "review_description": "Wonderful image, oodles of features and an asking price that\u2019s within  reach of the average consumer, what more Can you ask for.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227582245", "uniq_id": "b69b8ac8-89ff-5e89-9697-52a682ad0e76", "scraped_at": "16/01/2022 16:18:00"}, {"index": "218", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Res136", "review_title": "Great picture", "review_description": "I\u2019ve always liked Visio. My first 50\u201d had one backlight diode burn out after 7yrs heavy use. Replaced with 50\u201d nano Visio. I was happy with the upgrade. Figured I could get a 55\u201d within the space constraint I had. Got this one as open box. And WOW! The picture POPS of vibrancy and consistent brightness.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227560725", "uniq_id": "b707b4b5-8acc-5c69-9279-f1029422274c", "scraped_at": "16/01/2022 16:18:00"}, {"index": "225", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "BxBNicX", "review_title": "Best controller ever", "review_description": "Its similar to the regular elite it just feels lighter quality feels slightly better and it looks so hecking cool in person so many details that the pictures dont do it justice", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190820482", "uniq_id": "31786614-0e1e-5a38-9e27-8f23084e6ee1", "scraped_at": "16/01/2022 16:18:00"}, {"index": "232", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Dadadum", "review_title": "#1", "review_description": "Game is great for parents to play with their kids.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126754711", "uniq_id": "f9469cbd-8ad3-5f74-9b6d-3aefeaf073c7", "scraped_at": "16/01/2022 16:18:01"}, {"index": "233", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Mr Dingus", "review_title": "Fun!", "review_description": "Very fun! As someone playing through sekiro, this was a nice pallet cleanser.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126754570", "uniq_id": "2c072257-f611-5e72-a1ab-5dc75ef88f59", "scraped_at": "16/01/2022 16:18:01"}, {"index": "245", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "PM117ER", "review_title": "Looks pretty - never worked", "review_description": "It came broken\u2026. Stick drift on the right thumb stick right out of the box.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "1", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190766977", "uniq_id": "c61a0a2e-6150-5816-827e-7d7fc7f7f94e", "scraped_at": "16/01/2022 16:18:01"}, {"index": "252", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "mdfsandman", "review_title": "Great picture.  easy setup", "review_description": "I had no problems after mounting the TV and the set up was a breeze", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227514155", "uniq_id": "a56d9282-4860-5371-9f05-a9bd99c99914", "scraped_at": "16/01/2022 16:18:01"}, {"index": "257", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jos\u00e9viera264", "review_title": null, "review_description": "The best \u201cAmerican product 100% costumer satisfacci\u00f3n  guaranteed", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227469318", "uniq_id": "fe663898-37db-56ab-9d32-c3d52f93b4e5", "scraped_at": "16/01/2022 16:18:01"}, {"index": "262", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "JPez1", "review_title": "Amazing controller", "review_description": "Great controller! Only wish I had the halo Xbox to go with it", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190758968", "uniq_id": "7ca99b13-422b-5892-a441-b2dd7bf7a000", "scraped_at": "16/01/2022 16:18:01"}, {"index": "270", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "cheeseman585", "review_title": "A Modern Take on Yoshi's Story", "review_description": "This is a proper modern evolution of the Yoshi formula.  Giving you access to the fore- and background when throwing eggs adds an extra dimension of exploration and the collectibles are definitely worth getting.  The flower requirement to progress to new areas is rarely difficult to fulfill, but it emphasizes the collection aspect in a game that gives you a lot of tools to do so and is chock-full of stuff to see.  If you've ever loved playing a platformer, you need to play this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126576266", "uniq_id": "a5a4fa33-a821-53a1-82a9-e28573bb422f", "scraped_at": "16/01/2022 16:18:02"}, {"index": "286", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "TimB76", "review_title": "Super fun", "review_description": "We Bridges this for Christmas for my nephew everyone had a good time playing", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "123364925", "uniq_id": "9bd2d34a-5e61-57c4-9d29-646e5cf6ba26", "scraped_at": "16/01/2022 16:18:02"}, {"index": "302", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Imagine1959", "review_title": "Great tv", "review_description": "The colors are incredibly vivid, even with a standard HD signal. I also love that it has screen mirroring for my iPhone along with a bunch of other viewing options.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227162981", "uniq_id": "821dde30-9ad1-59e3-b367-e0a36dc2691b", "scraped_at": "16/01/2022 16:18:03"}, {"index": "308", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "SD Dad", "review_title": "Yoshi is great", "review_description": "Got this for my 2 sons they love & have a lot of fun playing it together", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126528004", "uniq_id": "27ea1f05-cdda-5466-ba89-1578af352018", "scraped_at": "16/01/2022 16:18:03"}, {"index": "Makes a perfect 2nd controller for kids.\"", "name": "yes: I recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "3 years ago", "review_description": "4", "recommended_review": "4.875", "verifed_purchaser": "32", "helpful_count": "122140626", "not_helpful_count": "0b338d34-27a3-56a0-9787-1d3b437f1ba9", "reviewed_at": "16/01/2022 16:18:04", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Great sequel to Wooly World\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "126297513", "not_helpful_count": "1962b25e-379f-515a-a961-26950bbd081d", "reviewed_at": "16/01/2022 16:18:05", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "376", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jack Badgerlord Fox", "review_title": "Weaponized Cuteness at it's Finest", "review_description": "Not a heck of a lot wrong with this game. I like to say this is the epitome of Weaponized Cuteness. The designers did a fantastic job with level design. It feels like they actually built every level in the game with cardboard and construction paper in reality and then put it into the game, and they stick with that through the entire game. The controls are tight and the yoshis are as adorable as ever.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "382", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "LaBestia", "review_title": "Great tv quality - could use a microphone remote", "review_description": "This tv has been fantastic and especially since we recently purchased a 5.1 Dolby surround system. Mandalorian looks, and sounds amazing now after getting this tv. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "385", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Tom42", "review_title": "Great picture", "review_description": "Bought for picture quality and I am not disappointed. It is fabulous. I am actually surprised at how wonderful the display is in my home. Very satisfied and would buy again. If it goes on sale anytime soon I will buy another one for another room in my home.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226732331", "uniq_id": "23656563-b23a-5a13-b5c5-5ab4eaabf6e9", "scraped_at": "16/01/2022 16:18:05"}, {"index": "389", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Concerned vizio tv owner.", "review_title": "Terrible software", "review_description": "I bought the tv about a month ago and have never had as many problems with a tv in my life. Vizio has a reputable name so of course I wanted to give the oled a try. Day one when I got the tv home it wouldn\u2019t power up. So after plugging the tv up and unplugging it a few times I got it to power up. The oled does have a beautiful picture but now every morning when I want to turn on the tv it won\u2019t power up again. I have to unplug the tv for 30 minutes EVERY morning for it to come on now. While I\u2019m watching tv the sound just goes away at times and I have to reboot the tv sometimes 3 times before the sound comes back on. At times the hdmi won\u2019t recognize it has the cable or game system connected so I have to turn it off and on again when that happens. This is just unacceptable from vizio. I hear there will be firmware updates but how long will that take?  I don\u2019t know what to do should I return the tv and try another vizio oled or just stay clear of vizio because this is the beat quality they can produce right now", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226704721", "uniq_id": "2cd61b63-9d87-5b31-a9f0-29eb39dc6df2", "scraped_at": "16/01/2022 16:18:05"}, {"index": "420", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TomsVizio", "review_title": "Almost great for gaming", "review_description": "120hrz, VRR, VRR+HDR, black screen but at 60htz it looks great! Vizio please fix.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "434", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "TheEyesHaveIt", "review_title": "Excellent", "review_description": "I\u2019m a sucker for a 3D side scroller with an  interactive background. The art is phenomenal and the small, finer details are top notch.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126248119", "uniq_id": "b8403b8a-3a76-59e4-804e-02aca8146f29", "scraped_at": "16/01/2022 16:18:06"}, {"index": "436", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Bocho45", "review_title": "Yoshi time", "review_description": "Fun game....it took me 1 day to finifh it...should have been bigger and a bit more hard..but it is a fun game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126247183", "uniq_id": "1de1526c-76af-5a89-93d1-1bd12a4f64bf", "scraped_at": "16/01/2022 16:18:06"}, {"index": "440", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "MacFan2410", "review_title": "Awesome game. Music is the only draw back.", "review_description": "Really fun and thought out game. A lot to do and find. Attention to detail is amazing. So far music variety is the only draw back.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126242816", "uniq_id": "ba31126f-3e77-54f6-8ff4-68e2e15d3330", "scraped_at": "16/01/2022 16:18:06"}, {"index": "444", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Johnwicked", "review_title": "Almost perfect", "review_description": "I bought this TV about a month ago. The picture is out of this world good. Since about th 2nd firmware update the TV does not always turn on. I had worked for Geek squad in the past so I know how these products work It is not user error. I contacted support through chat and they say it is not a known issue. If you go on about forums you can see it is a widespread problem. I'd this would be corrected I try would be a 5 star review. I am out of my return window so I certainly hope this issue is corrected.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226599103", "uniq_id": "a55472fc-0d7a-5056-b86f-64b5c181a6cb", "scraped_at": "16/01/2022 16:18:06"}, {"index": "485", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "djFox", "review_title": "Carefully Crafted Joy", "review_description": "Yoshi's Crafted World is everything I had hoped for -- a solid Yoshi title that I can choose to play casually when I want some mellow fun, or play obsessively to go for 100%.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "486", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Robert.Rob", "review_title": "Great TV", "review_description": "We\u2019ve had the TV up and running for two days. So far, it\u2019s been an amazing addition to our HomeKit connected home.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226509543", "uniq_id": "cd39e728-95d5-59b9-b12b-7c91ab92de88", "scraped_at": "16/01/2022 16:18:07"}, {"index": "519", "name": "ENHANCE Flexible LED Gaming Headset Stand", "brand": "ENHANCE", "sku": "307514", "reviewer_name": "Chris R", "review_title": "Decent", "review_description": "Only issue is that the USB ports do not support Fast Charging on the station. Tried charging my phone and it was going to take 6 hours.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4", "reviews_count": "1", "comment_id": "1109149704", "uniq_id": "5d963a19-e6ae-529e-9f3d-b7c312291ad5", "scraped_at": "16/01/2022 16:18:08"}, {"index": "538", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "KasperJazz", "review_title": "Game for Wolf Lovers", "review_description": "If you love wolves you\u2019ll love this game. The storyline is intriguing and well thought out", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6512", "reviews_count": "129", "comment_id": "140255194", "uniq_id": "d7546f35-1fd9-5395-9b2f-3d8d4183c2ce", "scraped_at": "16/01/2022 16:18:08"}, {"index": "580", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "Wonderwoman734", "review_title": "Please play it!", "review_description": "I loved this game, it has an engaging story line. The art was so unique and enjoyable. The side missions were very cohesive with the main quests. The only odd part was the ending but they made it work. All in all I highly suggest playing this game! \u2764\ufe0f", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6512", "reviews_count": "129", "comment_id": "129548101", "uniq_id": "517ddaea-1ba9-55c9-86b1-b5635eaa0583", "scraped_at": "16/01/2022 16:18:09"}, {"index": "584", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "Daniel Saini", "review_title": "Art", "review_description": "Beautiful representation of Japanese folklore through ukiyo-e like cellshading. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "The graphics in CW are superb. It amazes me how realistic and detailed every single thing is in this game! The levels are fun", "name": " but there\u2019s not much challenge. It\u2019s very easy to complete a level without taking any damage.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "As with most Yoshi games", "name": " you still seek out the flowers", "brand": " coins", "sku": " etc in every level", "reviewer_name": " but now there\u2019s a hide and seek challenge with each world where you\u2019re tasked to find hidden items in each level. It becomes real redundant and exhausting.\"", "review_title": "yes: I recommend this product", "review_description": "Verified Purchaser", "recommended_review": "1", "verifed_purchaser": "0", "helpful_count": "2 years ago", "not_helpful_count": "3", "reviewed_at": "4.6556", "rating": "2390", "average_rating": "126204575", "reviews_count": "926f8b58-35d6-5103-a0c9-0d4177b3608f", "comment_id": "16/01/2022 16:18:09", "uniq_id": null, "scraped_at": null}, {"index": "620", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "hsalem", "review_title": "amazing picture, needs 2.1 update", "review_description": "hdmi 2.1 not working as of now, but picture is insane", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "225958360", "uniq_id": "79cfc4fd-a1cd-57a2-9d9b-9d7bdd180f5f", "scraped_at": "16/01/2022 16:18:10"}, {"index": "633", "name": "LucidSound LS35X Black Direct Connect Wireless Gaming Headset for Xbox One", "brand": "LucidSound", "sku": "150229", "reviewer_name": "Mustangguy18", "review_title": "Decent", "review_description": "It\u2019s a pretty solid headset for the price.  Very excited to no longer have a cable to my controller", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.125", "reviews_count": "56", "comment_id": "191870757", "uniq_id": "5632fc84-664c-552d-83c6-176185354fe4", "scraped_at": "16/01/2022 16:18:10"}, {"index": "644", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "Bp3d", "review_title": "A classic", "review_description": "This is a title that was originally released during the last year of the ps2 and honestly one of that console's best. It features a beautiful artstyle, innovative interface, and great story steeped deep in Japanese lore with an overall theme of restoring the beauty of nature with some humor thrown in from time to time as well, with an epic Zelda like gameplay. Unfortunately this would be the swan song for Clover studios (famous for Viewtiful Joe) but they certainly went out on a high note. Some minor graphical glitches mar this version but otherwise a truly great title and one of my all-time favorites from it's era.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.6512", "reviews_count": "129", "comment_id": "117221259", "uniq_id": "482c12a3-247b-5007-a307-e8c073683821", "scraped_at": "16/01/2022 16:18:10"}, {"index": "649", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "MADMAN39", "review_title": "Xbox for life", "review_description": "Great controller it when feels different than the Normal one", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "191531935", "uniq_id": "7ff4026a-4e2a-56ee-bee5-cc98597775d1", "scraped_at": "16/01/2022 16:18:10"}, {"index": "663", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ricardo20", "review_title": "Vizio OLED Review", "review_description": "I bought these tv a month ago, and I so very happy I did, beautiful picture, I can\u2019t wait to buy my Xbox Series X to see how great it plays games.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "225321740", "uniq_id": "8834963e-4106-54f9-a85c-8d49ce4e8615", "scraped_at": "16/01/2022 16:18:10"}, {"index": "672", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "Xerostarr", "review_title": "Can finally play without digging out the ps2", "review_description": "Great game and nice that they rereleased it for newer consoles.  Love the art style and the game play still holds up well since the first release.  Not sure how it would compare to the wii version with wiimote support, but if you enjoyed it on ps2 you'll enjoy it here.  Didn't really make much use of the touchpad support for celestial brush techniques, but that could be something some players may enjoy more than the usual analog stick.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6512", "reviews_count": "129", "comment_id": "115560120", "uniq_id": "a74fffd9-b5ce-5c99-97e0-880e7bba9f58", "scraped_at": "16/01/2022 16:18:11"}, {"index": "697", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Robbyj1500", "review_title": "Camera blocks gameplay", "review_description": "If you want to stream with it, the camera will be on your monitor as well blocking gameplay", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "3.969", "reviews_count": "129", "comment_id": "191374468", "uniq_id": "88280e84-ecf7-57bc-aa8d-0acf464e2d72", "scraped_at": "16/01/2022 16:18:13"}, {"index": "700", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Anonymously anonymous mus", "review_title": "Facts over opinion", "review_description": "Bought this for a buddy since he was twitch streaming w just a mic, he loves it as do I bc I get to see his pretty lil face now. Ohhh an btw this literally shipped in a day. He was goin in vaca for the weekend and it showed up a half hour before he left. Seriously excellent timing GameStop!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.969", "reviews_count": "129", "comment_id": "190894313", "uniq_id": "89b2f7d5-2766-5a33-a39f-c597c0f1591e", "scraped_at": "16/01/2022 16:18:13"}, {"index": "702", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Rmora023", "review_title": "Ps5 camera", "review_description": "It's great! My only complaint would be is that there is no mic for the camera. Other then that, the visual quality of the camera is pretty great, I love it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "4", "average_rating": "3.969", "reviews_count": "129", "comment_id": "190661558", "uniq_id": "ede7c01e-3797-51b4-a80d-883fb7b41559", "scraped_at": "16/01/2022 16:18:13"}, {"index": "703", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "deegeedee", "review_title": "Does not work with PS4 titles!", "review_description": "The thing is not compatible with PS4 games that need a camera!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 months ago", "rating": "1", "average_rating": "3.969", "reviews_count": "129", "comment_id": "190561474", "uniq_id": "394bcb04-b98a-5db5-813d-3bebb4c28444", "scraped_at": "16/01/2022 16:18:13"}, {"index": "712", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Nathand60", "review_title": "Left blue Nintendo Joy-Con Purchase", "review_description": "So far we havent had any drifting issues which is saying alot with a left Nintendo joycon. All in all were pleased with our purchase", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "181301865", "uniq_id": "da289789-2dc5-55ab-96e3-a7c119fef179", "scraped_at": "16/01/2022 16:18:13"}, {"index": "720", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "MP75", "review_title": "Good but missing much needed improvements", "review_description": "It does what it states. Although, it would have been nice if they had thought ahead and added additional features and components to it. A mic would have been great. Ability to incorporate it into your VR setup would have also been a great addition.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "737", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "JWashington", "review_title": "Beware there's no mic on the camera", "review_description": "The ps4 camera was better honestly, the took the mic off of the camera which was super useful. Other than that it's alright I guess.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "3", "average_rating": "3.969", "reviews_count": "129", "comment_id": "180611737", "uniq_id": "e44d5428-51f3-5a92-ad0b-e4f339884fc0", "scraped_at": "16/01/2022 16:18:14"}, {"index": "742", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Anonymous", "review_title": "completely unnecessary purchase", "review_description": "don't buy, you can't even use it to talk in while chatting with friends.  I haven't even been able to use it once.  Save your money, or use the old one if it even works.  have no clue", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "9", "reviewed_at": "10 months ago", "rating": "1", "average_rating": "3.969", "reviews_count": "129", "comment_id": "174274602", "uniq_id": "99539197-850d-5452-bb13-1a79882c05b0", "scraped_at": "16/01/2022 16:18:14"}, {"index": "743", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "TheStonerd", "review_title": "Good quality", "review_description": "Perfect for streaming on PS5, just make sure your room is well lit so it can look sharp.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "3.969", "reviews_count": "129", "comment_id": "172766123", "uniq_id": "9b711b04-98b8-5b1d-9551-90b98eba9591", "scraped_at": "16/01/2022 16:18:14"}, {"index": "744", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "ReikimasterColin", "review_title": "Hd camera is excellent", "review_description": "Easy to use. Hook was super easy. Couldnt be happier with my HD camera", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "3.969", "reviews_count": "129", "comment_id": "172608606", "uniq_id": "80431fd0-c0eb-5f1f-925b-7421bf7208f6", "scraped_at": "16/01/2022 16:18:14"}, {"index": "756", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Anonymous", "review_title": "Used Joycons are not worth it.", "review_description": "Has JoyCon Drift. I recalibrated several times and joystick drifts south no matter what I do. Took 3 1/2 weeks to get to me, and then when it finally came it wasn't usable. Do not recommend getting this product used at all.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "160870891", "uniq_id": "32ca1f15-3fa7-525f-8f7f-8e00fa2d428b", "scraped_at": "16/01/2022 16:18:15"}, {"index": "759", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "Deathstroke4561", "review_title": "Best game I've gotten in a long time", "review_description": "I freaking love Theif. When I played the demo it was really good. Now since I've got the game, it's even better. The gameplay is awsome, the graphics on it are amazing, because I love Unreak Engine, and the feeling of sneaking around and being surprised is fun.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.52", "reviews_count": "125", "comment_id": "147865236", "uniq_id": "c8583c62-b66b-5227-a510-5250e9fcd4f4", "scraped_at": "16/01/2022 16:18:15"}, {"index": "774", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "Big U G", "review_title": "Must play", "review_description": "Once i learned the movements this is fun to immerse oneself in.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "3.52", "reviews_count": "125", "comment_id": "120884154", "uniq_id": "73740f63-c497-5b45-b7c7-9252422d80b7", "scraped_at": "16/01/2022 16:18:16"}, {"index": "796", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "driftz33", "review_title": "Joy-con works as described", "review_description": "Joy-con was in good condition, no damage or issues", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "143235030", "uniq_id": "9e79717d-e07b-51b9-bde2-2f132925ce1e", "scraped_at": "16/01/2022 16:18:16"}, {"index": "808", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "MrYarboro", "review_title": "Really good game!", "review_description": "This is my first thief game i have played and i had fun playing it. Really the only problem i have with it is that the map is kind of hard to understand, it's hard to get around for me. I got this game on the day it came out and i still play it today it has replay value.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "4", "average_rating": "3.52", "reviews_count": "125", "comment_id": "37965430", "uniq_id": "c6d658bc-e7e1-5314-be6b-ed777bb0be50", "scraped_at": "16/01/2022 16:18:16"}, {"index": "827", "name": "The Simpsons Game - PlayStation 3", "brand": "Electronic Arts", "sku": "930082", "reviewer_name": "KnightTime", "review_title": "Great Game", "review_description": "This game is awesome it is so fun and crazy which games are not like any more. there is so many people that want games like assassin creed and fps and I'm sick of it I love how silly this game is yet creative and its fun also it has split screen co op which is the best when friends are over or if you have siblings It is short but it is repetitive great buy", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.0385", "reviews_count": "26", "comment_id": "32623088", "uniq_id": "f243790c-735f-530b-be84-f6589f223312", "scraped_at": "16/01/2022 16:18:17"}, {"index": "839", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "Misterb4", "review_title": "Old Thief Fun", "review_description": "I'm an old time fan of the original and this game brings back all those great memories of thief from the past. Thief is a stealth game and all the reviews pointing out flaws don't seem to realize this isn't a FPS. Love stealth, you'll love Thief!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "4", "average_rating": "3.52", "reviews_count": "125", "comment_id": "34780117", "uniq_id": "4820e2b6-c3f4-5a94-9806-332f1bc13759", "scraped_at": "16/01/2022 16:18:18"}, {"index": "842", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "CrakingHeads", "review_title": "How they product did not work", "review_description": "Product was not working properly had to buy new controllers", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "2", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "141250752", "uniq_id": "4341ee4f-49fe-5923-9f88-c07e9f54e848", "scraped_at": "16/01/2022 16:18:18"}, {"index": "846", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "LCPC", "review_title": "Was defective", "review_description": "Didnt charge. Didnt lock into the handheld console. Slid right off. Needed to exchange it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "140980786", "uniq_id": "2fc5aa96-cba8-5916-8de6-31d4de900cd2", "scraped_at": "16/01/2022 16:18:18"}, {"index": "851", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Mamabear0307", "review_title": "Some people", "review_description": "It didn\u2019t work. I had to take it back and get another one. But I will add Gamestop was amazing about it!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "140346309", "uniq_id": "011521d9-ebc0-5a5b-b125-5327293ba233", "scraped_at": "16/01/2022 16:18:18"}, {"index": "855", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "MarcusM822", "review_title": "Functionality  Superb", "review_description": "My switch is finally getting the use it deserves. My old old pro con had drift and never locked on to the console and it was bought and replaced new. This one was preowned and works better than my previous ones.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "138752892", "uniq_id": "e2f02a9c-7a53-52d2-b4a2-53e62bd88c71", "scraped_at": "16/01/2022 16:18:18"}, {"index": "860", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Dennis Anty", "review_title": "Bought to salvage", "review_description": "I bought the joycon to take apart and reshell, all the pieces worked like a charm", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "137739327", "uniq_id": "10158236-221e-5930-9580-34ed5f3b8d7d", "scraped_at": "16/01/2022 16:18:18"}, {"index": "869", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "Tearlessdeath", "review_title": "Destroying a series", "review_description": "I had high hopes when Eidos Montreal said they were making this game I had high hopes this is the company that did Deus Ex: Human Evolution which was a beautiful game. There are some minor problems with this which I can deal with but when you add them up it starts to feel like they just didn't care about the franchise that they were making. (1) The voice acting in the cutscenes was average but when half of the times the lips and the voice move off key and it looks like a English dubbed Chinese movie. (2) The characters in the story are so boring they have no appeal to the story and they are very forgetful. (3) the load point between parts of the city were stupid crawling in between boxes and lifting a log at the end was to generic they could of changed up the animation to different parts. P.s also I've only ever had motion sickness once in gears of war franchise when you run, and this game was making me sick I had to play in 1 hour runs. did this happen to anyone else? I would recommend maybe a rent but don't buy this and you won't be disappointed.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "7 years ago", "rating": "2", "average_rating": "3.52", "reviews_count": "125", "comment_id": "34711984", "uniq_id": "fbf765fe-d56e-54bc-a4b6-a351dca989b9", "scraped_at": "16/01/2022 16:18:18"}, {"index": "875", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Yezenia", "review_title": "Great buy", "review_description": "Works perfect. Connected right away. No issues what so ever.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "137025588", "uniq_id": "cf8bb203-2ce8-5871-a689-bb7867c07b6b", "scraped_at": "16/01/2022 16:18:19"}, {"index": "884", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "123456789Jess", "review_title": "Great buy", "review_description": "I bought these for my husband's bday and he said they are wonderful. He loves how sturdy they are and the mic mute feature with the flip of the mouth piece is a great addition.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 months ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "188827697", "uniq_id": "cd757dc8-2991-5753-9848-af4f604e21a8", "scraped_at": "16/01/2022 16:18:19"}, {"index": "888", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "OldGasbag1965", "review_title": "Great headset", "review_description": "The sound is amazing I connected with optic very clear", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "174247519", "uniq_id": "2907c197-ed3c-5acc-a40d-b1660aca6630", "scraped_at": "16/01/2022 16:18:19"}, {"index": "895", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "KP88", "review_title": "Please Stop!", "review_description": "Don't buy this game\u20265 minutes in and you see the little potential it has. It is awful, not enjoyable and at times I can't believe I paid hard earned money for it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "8", "reviewed_at": "7 years ago", "rating": "1", "average_rating": "3.52", "reviews_count": "125", "comment_id": "34678417", "uniq_id": "a1e48cc7-1488-5d9a-9d49-a6fd1bcd4e59", "scraped_at": "16/01/2022 16:18:19"}, {"index": "912", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Djjuliamarie", "review_title": "Joycon", "review_description": "Needed replacement, they had a preowned for a tiny bit less than new.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "131846676", "uniq_id": "9e3afce0-b305-5f5f-91d9-28bcdd216a0b", "scraped_at": "16/01/2022 16:18:19"}, {"index": "919", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Deadlyswordsman", "review_title": "Useful", "review_description": "Glad i got this for my bride to be since hers was being weird.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "131114528", "uniq_id": "dac0e068-caba-5859-a494-7d02809fbedb", "scraped_at": "16/01/2022 16:18:19"}, {"index": "922", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Deaththekid52", "review_title": "Amazing game!", "review_description": "This is by far one of the best games I have ever played.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "132120455", "uniq_id": "d0350668-c95f-506e-8fb2-e362401a297a", "scraped_at": "16/01/2022 16:18:20"}, {"index": "You become a leader", "name": " but have zero leader choices. Makes absolutely no impact to the game even though they make a big commotion about it. ", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "AI is horrific and can throw sticky grenades", "name": " knives", "brand": " ect through walls with perfect accuracy. Be ready for an extremely unfair fights. So I hope you're ready to cheese some conflicts. ", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "-\"\"enemy players\"\" have rediculous accuracy and damage. ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Original voices and subtitles! However there's no English audio. So there's no choice.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "926", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Darkrose29", "review_title": "Good game", "review_description": "We watch the anime and love it got the 1st game it was good but not what we were looking for this one is better and love the game play so far", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "128645824", "uniq_id": "6ffa4c49-e6d2-5a1a-847d-a4a60dfd1eb0", "scraped_at": "16/01/2022 16:18:20"}, {"index": "944", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Leo3", "review_title": "Great buy", "review_description": "Great deal and works great with my PS5.  Very comfortable headset.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "171204137", "uniq_id": "e0d63651-9f79-5d2f-a192-b7f2d3c0ecde", "scraped_at": "16/01/2022 16:18:20"}, {"index": "945", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Rickismadman", "review_title": "Gaming set", "review_description": "These headphone set is far the best to what I need and more, comfy and loud and clear thanks", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "166241537", "uniq_id": "98a98fb4-58ce-51b8-aa10-ab2cce57eb2b", "scraped_at": "16/01/2022 16:18:20"}, {"index": "956", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Donelin", "review_title": "A good game but...", "review_description": "one excellent game but only one flaw...Not in english", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "3", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "124842910", "uniq_id": "4d597074-7696-5208-826c-29fc21a15697", "scraped_at": "16/01/2022 16:18:20"}, {"index": "961", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "TaylorS", "review_title": "Broken", "review_description": "It was broken - no matter what I did, the stick veered upward", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "129240509", "uniq_id": "0bdb503f-829c-545a-8a06-cc3adf3a9382", "scraped_at": "16/01/2022 16:18:21"}, {"index": "964", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Everett Klomp", "review_title": "Used Left Joy-Con", "review_description": "The replacement left Joy-Con is fine and works properly.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "127967469", "uniq_id": "8e9a56eb-cb6d-5390-9a2b-ccacb84f50a0", "scraped_at": "16/01/2022 16:18:21"}, {"index": "976", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Bernard M", "review_title": "PS4 RIG  800 HS Headphones.", "review_description": "Overall very good headphones, only thing is that they don\u2019t have super human hearing for games like CoD. But they are excellent at canceling out background noise, very loud and clear sound. And have great battery life. I would recommend these headphones.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "142047495", "uniq_id": "ea6fd264-fdf3-51c6-8cfa-cadb8211aebf", "scraped_at": "16/01/2022 16:18:21"}, {"index": "977", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Alex Velez", "review_title": "Just being Real", "review_description": "i have medium to long hair so it tends to slide out of place a bit with the extra strap it has for comfort. great for long gaming sessions. great sound quality but not the best sound for helping me pinpoint an enemy location in a live action FPS like my most played game Apex Legends. Comfort make up for that tho. i tend to play for hours with these on they what there supposed to do. they haven't shocked me yet. and unlike my previous head set there enough comfort in these headphone that they don't cause any discomfort. i think there good. These headphone are definitely better than Turtle Beaches", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "141896944", "uniq_id": "868e7df4-14bf-5225-ad4b-b2a55af8f1ef", "scraped_at": "16/01/2022 16:18:21"}, {"index": "987", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "xizanagix", "review_title": "Great!", "review_description": "I bought the game a year ago, finally finished it. Story line was good, a lot of work done on this. Great job!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "122684989", "uniq_id": "a6f4b563-c7bf-570e-9e71-d4f45408479d", "scraped_at": "16/01/2022 16:18:21"}, {"index": "996", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "EthanW", "review_title": "Worth It", "review_description": "My left joycon was lost a few weeks ago and I didn\u2019t know what to do. I had bought the switch with the neon colors, and was disappointed to find the Left Neon Joycon was not available for retail sale. GameStop was the only place I could find it, so I made the purchase. It arrived quite a bit late, but I think that was a fault of USPS, not GameStop, and it was worth the wait. My original joycon had issues from the start, so this was actually a step up. I highly recommend this, as it is half the price of a new one and it functions and looks perfectly.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "126248968", "uniq_id": "e9a9a3c7-e807-537e-bf3a-79a7d89f0ca5", "scraped_at": "16/01/2022 16:18:21"}, {"index": "997", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Leon99", "review_title": "New switch joy con", "review_description": "It works good, plus I didn\u2019t have to get a different color than the one I already had.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "126060090", "uniq_id": "cf74313f-1487-5b52-9168-4cf2b4e52f47", "scraped_at": "16/01/2022 16:18:21"}, {"index": "999", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Kothanare", "review_title": "Joy-Con left dosnt work vary good", "review_description": "Every left joy-con i buy pulls to the left after about a week i think Nintendo needs to fix the problem.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "3", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "125539310", "uniq_id": "4069aeba-91b5-55c9-9f58-c56f7e38abf1", "scraped_at": "16/01/2022 16:18:21"}, {"index": "1005", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Brandon Waters", "review_title": "RIG 800HS - Great Quality and Satisfied", "review_description": "Amazing sound, Great quality, product as described and packaged very well. Decent price and compatible to top ps4 headsets for sure", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "140824544", "uniq_id": "e281628d-7845-529a-99f9-8b6d72f6a2d5", "scraped_at": "16/01/2022 16:18:21"}, {"index": "1040", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "KendraTG", "review_title": "Just what I needed.", "review_description": "My original left joy-con got permanently out of alignment and could no longer be properly recalibrated,so finding this was great. It works perfectly and I have been enjoying being able to play in handheld or TV mode without the cursor or my character suddenly just moving all over the place.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "123616113", "uniq_id": "81d20c8d-5787-57b9-9d1d-4630a396be7a", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1080", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Brandonhsa", "review_title": "Better than the original", "review_description": "Bought as a second joy con and was very pleased with quality of used.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "120436668", "uniq_id": "a726ab39-5531-580b-9abb-de0456d3fc92", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1082", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Frank Nez", "review_title": "Don\u2019t buy pre-owned.", "review_description": "Pre-owned price was cheaper but not worth the gamble. Purchased to use on a trip only to find out the product was defective. Very dissatisfied.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "119306733", "uniq_id": "4049c309-0bb1-5905-8502-9a53736cf524", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1089", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Universegirlaz", "review_title": "Breaks away from the other SAO games", "review_description": "The GGO arc of SAO was by far one of my favorites of the series. I have played all the SAO games and became annoyed that every single one praised Kirito every 5 seconds and than left my own character as an after thought. Not Fatal Bullet. Right from the begining yiu make your own avatar and can change it anytime! ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1108", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Bleu20", "review_title": "Not Bad", "review_description": "It's pretty fun! Though there's a lot of grinding involved and typical SAO moments", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "115239567", "uniq_id": "e5e8f10f-d380-544b-8a05-b812828c800c", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1120", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Dmuchison", "review_title": "Good game.", "review_description": "About this about a week ago, and it's a good game. There's a lot of talking scenes, especially in the beginning of the game, but after you get into the action it is very good. Good controls, no major complaints. Though I do wish some of the events that they talk about you actually have to take action in instead of just watching them talk about it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "114288668", "uniq_id": "2055d519-1c34-516d-a45f-6a44836539b1", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1121", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "lockboy69", "review_title": "Quick, easy and inexpensive", "review_description": "We were at my daughter's soccer game and my younger son had his Nintendo Switch with him. A few weeks prior he had closed the Switch in the arm rest of the car and mangled the left blue controller. We had manahlged to piece back together or so we thought. So while at the game he was running around and some how the black knobnon the controller fell off. Luckily there was a Game Stop only minutes away and instead of having to pay for a new set or single controller the store rep offered a referphished one at a much lower cost.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Mike\"", "name": "No: I don\u2019t recommend this product", "brand": "Verified Purchaser", "sku": "43", "reviewer_name": "4", "review_title": "3 years ago", "review_description": "5", "recommended_review": "3.9133", "verifed_purchaser": "738", "helpful_count": "114048554", "not_helpful_count": "c6c8ae50-0d69-53e3-bd69-9bd04365f45c", "reviewed_at": "16/01/2022 16:18:23", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1122", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Zagima", "review_title": "Great game", "review_description": "Love the graphics and by far the best sword art online game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "114258927", "uniq_id": "9919f0c3-ff2f-5d82-b2e3-cc1db3cc5c88", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1133", "name": "Star Wars Episode IX: The Rise of Skywalker Supreme Leader Kylo Ren Force FX Elite Lightsaber", "brand": "Hasbro", "sku": "195533", "reviewer_name": "Andreia h", "review_title": "This is amazing", "review_description": "[This review was collected as part of a promotion.] I couldn't wait to get this going. Put it all together and was like why wont it light up. Then I realized the blades weren't in all the way. So make sure of that. Push in and rotate. All 3 of them. Works just fine after. It has amazing sound and it lights up a dark room. Its pretty heavy as well. As a star wars fan this was amazing. I couldn't stop playing with it and my fiance was like seriously as he was watching a movie I was like fight me as I was pretending we were in a star wars movie lol. Holds up on stand great. I like the battery pack. It all is amazing. Instructions could have written words on what to do. But doesnt take away how fun and great this lightsaber is.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.5952", "reviews_count": "42", "comment_id": "137973623", "uniq_id": "ab64d2f8-fe44-5bd5-a5b7-590dd3afe5b4", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1151", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Usmc87", "review_title": "No wrist strap", "review_description": "It's insane to sell these at the same price as new and not include wrist straps! Straps are 7 dollars apiece. I just got pre owned blue left and right and neither had a strap.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "37", "not_helpful_count": "27", "reviewed_at": "4 years ago", "rating": "3", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "95352445", "uniq_id": "45388ff8-bdd7-5098-b26d-a25e5866c2f2", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1158", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "mighty_mouse220", "review_title": "Decent", "review_description": "Decent headset with clear audio. Clear mic with not much feedback issues at all", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "129414154", "uniq_id": "81ab2201-f139-555b-8732-9f9dfe11777e", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1162", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Kayla150", "review_title": "A MUST-HAVE", "review_description": "I've envested 75 hours into this game and have loved every second of it. I love everything sword art online. To the novels, anime, and the games! Like it's past games, fatal bullet is amusingly well done. This game is a must play! Has a great story!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "25", "not_helpful_count": "3", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "111137419", "uniq_id": "5676380d-8a2d-5bf2-acf3-ddf0387dc53f", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1171", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Kbuchek1", "review_title": "RIG 800HS wireless headphones", "review_description": "Works good and thinking about buying another one. I would recommend this to all", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "127322103", "uniq_id": "a06d8218-b9b3-5bcc-8d5e-37eb477de3b7", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1180", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Gathman", "review_title": "YOU ARE NOT PREPARED!", "review_description": "Holy cow amazing! Secong only to Astro A50 in terms of sound! Honestly astounding battery life! And very durable with breathable ear padding! Best headset for its price point!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "125923879", "uniq_id": "ab294a9d-4ec4-52ba-94f1-c3342449c45f", "scraped_at": "16/01/2022 16:18:25"}, {"index": "And great sounds\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.4111", "verifed_purchaser": "596", "helpful_count": "125060685", "not_helpful_count": "a40b4ef2-9174-5f9e-91eb-e93fec127b27", "reviewed_at": "16/01/2022 16:18:26", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1239", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Jboyd01", "review_title": "Amazing Headset", "review_description": "It is an amazing headset that\u2019s durable and convenient. Definitely worth the money!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "124543187", "uniq_id": "da31894b-fa23-537d-8dba-b2defd4677e1", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1247", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "TheXeroLink", "review_title": "A Fantastic 3DS Game", "review_description": "This is a great Zelda game. Originally this game was to be a remake of TLoZ A Link to the Past, the team decided to make it it's own game. It is a blast to play and the mix of familiar with new things is a great reason to pick up this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "130450633", "uniq_id": "a9de33d9-bcf8-5211-924b-66b1a91f6157", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1269", "name": "Honey-Can-Do Floating Wall Shelf", "brand": "Honey-Can-Do", "sku": "323846", "reviewer_name": "Purpie", "review_title": "Pretty but not very useful", "review_description": "[This review was collected as part of a promotion.] The shelf is well-made and attractive. I personally would prefer the wood shelf to be a little bit darker.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1284", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "YdoUneed", "review_title": "Greatest of all Time", "review_description": "Best Zelda game EVER!! Nintendo should make more in the same style!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "125425009", "uniq_id": "40534795-b24c-518d-88d6-3809b93d3cec", "scraped_at": "16/01/2022 16:18:28"}, {"index": "1289", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "BigDiesel870", "review_title": "Great features!", "review_description": "I bought this about two months ago and it is the best sound quality that I\u2019ve ever had in a headset", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "123532667", "uniq_id": "7921cfee-bf36-53b7-9e1a-099e587b818e", "scraped_at": "16/01/2022 16:18:28"}, {"index": "1308", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Sexy Salad", "review_title": "A Link Between Worlds......it's not bad.", "review_description": "This was a decent title to play but most of the dungeons didn't feel as long as they could have been.  And while I felt most of them were too easy, I did find two of them to be annoyingly difficult.  Not because they were clever but because their layouts weren't as clear cut.  And don't get me started on that stupid stealth section.  All and all, its a decent title and it'll keep your busy in your off time if you needed something to fill it.  Oh, I enjoyed the 2D transformation and would like to see this power return in a future title.  That was a cool one.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "125136206", "uniq_id": "9c22e76f-95b3-5394-9d35-9f9dda14e594", "scraped_at": "16/01/2022 16:18:29"}, {"index": "1320", "name": "NES Controller Metal Water Bottle", "brand": "Paladone", "sku": "234047", "reviewer_name": "MysticSeer", "review_title": "Review", "review_description": "Very nice, I really like it. Holds a full o", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1326", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "AnthemEager", "review_title": "control party and game chat from headset", "review_description": "Protip. Use the digital and usb connection as instructed. Make sure your input and output is set to the headset. Your done. bottom control is overall volume. Top control adjust party and game. Top for game, bottom for party.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "122197053", "uniq_id": "fa4e8a84-9e72-52a2-a82c-7f8406058a6b", "scraped_at": "16/01/2022 16:18:29"}, {"index": "1331", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "ShadieBlack", "review_title": "Amazing Quality", "review_description": "I bought this headset a week ago and they haven\u2019t failed. They are super nice and heavy duty compared to my turtle beaches. Yeah I know turtle beaches are supposed to be the stuff. The RIG 800 HS beat them. They have easy instructions hooking them up. Basically self explanatory. Sound quality is great. Super comfy around the ears and head. I can wear them for hours on end without being uncomfortable. I haven\u2019t find anything negative about them yet. Overall I give them a 5/5 rating.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "121472523", "uniq_id": "2b74e2c3-6e06-5610-a450-8625154a1bcd", "scraped_at": "16/01/2022 16:18:29"}, {"index": "1338", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Dodgers4life79", "review_title": "Awesome game!", "review_description": "It is a good game! The game is good but there is one part I didn\u2019t like and that was that is was confusing in one part but that is because I\u2019m stupid. I would recommend the game to Nintendo players!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "121301206", "uniq_id": "d7e505cc-8a72-56d4-aa7a-a503857090a9", "scraped_at": "16/01/2022 16:18:30"}, {"index": "1362", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Me06", "review_title": "Lots of fun", "review_description": "Great game. I\u2019m a big fan of the Zelda Franchise. Never disappointed", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "117131638", "uniq_id": "e48b7e50-d87f-5362-8d65-5a2daaaa3ff6", "scraped_at": "16/01/2022 16:18:30"}, {"index": "1366", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Ryan7068", "review_title": "Best headset I have ever had", "review_description": "Very comfortable and great sound. Best purchase I have made in a very long time. Well worth every penny.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "120108799", "uniq_id": "27a6adbf-8b20-503b-953c-2561003122eb", "scraped_at": "16/01/2022 16:18:30"}, {"index": "1381", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Ginamc73", "review_title": "Fantastic fun", "review_description": "If you liked/loved A link to the past as I did you're going to love A link between worlds more. Same classic LOZ game play with better graphics & loads more to figure out and do. I love this game & am very happy we purchased it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "114895086", "uniq_id": "8380dd25-a92f-5f6c-a1b8-bd7f671d6c89", "scraped_at": "16/01/2022 16:18:31"}, {"index": "Great game!! Highly recommend!\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "3 years ago", "review_description": "5", "recommended_review": "4.6818", "verifed_purchaser": "396", "helpful_count": "114340700", "not_helpful_count": "d5045ec5-7957-5041-b14b-dc41dd138907", "reviewed_at": "16/01/2022 16:18:31", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "COMFORT", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "BATTERY", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1404", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "FearTheKilt", "review_title": "In my top five Zelda Games.", "review_description": "So, I'm a massive Zelda fan. I've played all but three games, The first two (I don't have an NES) and Skyward Sword (I refuse to buy a Wii). A Link Between Worlds is only out ranked by Wind Waker, Ocarina of Time and maybe Minish Cap or Majora's Mask. I absolutely love the game. It is absolutely beautiful to look at, the sound track is amazing, the gameplay feels like the Minish Cap and I believe it will, or at least should, become a classic. However, it's not all good. There are two mechanics that I find interesting. First, is the 'wall merge' this is a cool little mechanic that allows you to merge into a wall for a short time. It's not that I don't like this mechanic, but it's integrated into a ton of puzzles and I have a tendency to forget about the more gimmicky mechanics like this which causes me to get stuck (even on my third play through). Second, is that you 'rent' most of you items. Now, this one really sucks. When you die you lose all of those items. But that is not the reason I hate this mechanic; the reason I hate this mechanic is that you never know just exactly what you're going to need in a dungeon. If it weren't for this mechanic Link Between Worlds would easily be my favorite game of all time; it is awful and should NEVER be put into another Zelda game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "4", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "62007788", "uniq_id": "dcb444d4-0319-5d07-bcc9-bd9a0f357bb7", "scraped_at": "16/01/2022 16:18:31"}, {"index": "1408", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "george4963", "review_title": "great headphones", "review_description": "i just got them and the way it sounds is great  i hear everything i can walk around the house and still talk on them i us them in the division and believe me i didn't know i can hear so many things thank you again", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "118471798", "uniq_id": "80b56588-fa45-5377-bdfc-eb7026791ac5", "scraped_at": "16/01/2022 16:18:31"}, {"index": "I can't emphasize enough just how fantastic a Zelda game this is. The only person I would not recommend this to would be one who only likes character and narrative-driven games .\"", "name": "yes: I recommend this product", "brand": null, "sku": "2", "reviewer_name": "1", "review_title": "6 years ago", "review_description": "5", "recommended_review": "4.6818", "verifed_purchaser": "396", "helpful_count": "51795339", "not_helpful_count": "1e9e21c7-edbc-5c4d-a9c5-3aaaf9e406ef", "reviewed_at": "16/01/2022 16:18:32", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1426", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Egzacklee", "review_title": "These headphones are terrible", "review_description": "Terribly awesome is more like it! Completely wireless, light, excellent battery life, easy installation, and great sound quality! I am quite satisfied with them and I\u2019m sure you will be too :D", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "116908645", "uniq_id": "447f8e13-f98c-55ee-a7a2-2eedd33a3f7d", "scraped_at": "16/01/2022 16:18:32"}, {"index": "1434", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Briandaniel45", "review_title": "High quality headphones", "review_description": "I was happy with them until the mic randomly stopped working within the first month.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "114908493", "uniq_id": "6491e6d4-dd1d-5202-b77f-8a97c2e56ff6", "scraped_at": "16/01/2022 16:18:32"}, {"index": "1436", "name": "Mothergunship - PlayStation 4", "brand": "U&I Entertainment", "sku": "177892", "reviewer_name": "JRMons71", "review_title": "Fun game.", "review_description": "It is kind of fun, have only played it a little. But have had fun while playing it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "2.963", "reviews_count": "27", "comment_id": "140433821", "uniq_id": "c71dc548-c396-5569-907b-dd2eab1e614a", "scraped_at": "16/01/2022 16:18:32"}, {"index": "The game\u2019s graphics are good", "name": " and the use of the 3D effect is exemplary; it legitimately contributes to some parts\u2019 visual quality. The soundtrack and sound effects are both great", "brand": " also. Of particular quality are the Overworld themes of both Hyrule and Lorule. The story is good", "sku": " and the characterization of Ravio", "reviewer_name": " Princess Hilda", "review_title": " and Yuga is nicely executed (for a video game). The optional order of dungeon completion (in Lorule) was a nice addition", "review_description": " too. The combat system is simple yet effective", "recommended_review": " and though some Lorulean enemies are a bit overpowered", "verifed_purchaser": " this should be mitigated by eventual health and weapon upgrades. And though some specific instances in the game felt a bit obscure as to how to progress", "helpful_count": " this can probably be attributed to my inaptitude at Zelda games. Rest assured", "not_helpful_count": " enough experimentation and exploration can generally solve most puzzles and problems.", "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1458", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Anonymous", "review_title": "Amazing", "review_description": "It is amazing to be able to play these games again. Especially Heavy Rain and Beyond. I am so beyond thrilled. I can't put my controller down", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "4 months ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "186932523", "uniq_id": "e71c7058-a1e2-5107-bb24-0df1527af504", "scraped_at": "16/01/2022 16:18:33"}, {"index": "1471", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Anonymous", "review_title": "A Cult Classic", "review_description": "I purchased this game yesterday and it was totally worth the forty bucks. Ravio is great and the weapon renting system is also good. It even has good field as well as dungeon combat. I recommend it to all kinds of gamers.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "34264786", "uniq_id": "da8d1c71-86a2-5b8c-a4e5-5f94a8a916e1", "scraped_at": "16/01/2022 16:18:33"}, {"index": "1484", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Knightwolf4444", "review_title": "My opinion", "review_description": "Living in Michigan I just had to have the game Detroit. All games in this 3 pack are exceptional. Like that you can play them more than once and have different outcomes.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "129378436", "uniq_id": "4a5482f3-e6d3-5767-bced-990a1c6479dd", "scraped_at": "16/01/2022 16:18:33"}, {"index": "Also he talks. 'Nuff said.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1503", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "StLouisR1", "review_title": "Almost worth the price, except GameStop ruins the", "review_description": "The games have great story, even so the game mechanics pull away from the player\u2019s enjoyment. Timed button combos do no justice to the games. Finally, GameStop does not recognize the package upon return and will only take the games back individually.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "127695455", "uniq_id": "4d277bc0-328c-5214-a50f-b38fdea799a5", "scraped_at": "16/01/2022 16:18:34"}, {"index": "1505", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Charlie McLane", "review_title": "Detroit", "review_description": "When I bought the game for my son, I asked the clerk specifically if there was cussing in the game and she said there was not. However, the game was full of inappropriate language. Actually, overly bad and the sad part is it isn\u2019t necessary; the game isn\u2019t bad actually.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "2", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "127661606", "uniq_id": "430354d4-bf36-5676-98ed-3dff5045ec02", "scraped_at": "16/01/2022 16:18:34"}, {"index": "1512", "name": "KidKraft Wall Storage Unit with 8 Plastic Bins White", "brand": "KidKraft", "sku": "318705", "reviewer_name": "VGB", "review_title": "Wall storage unit", "review_description": "It looks good but not great quality and came damage during shipment. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1524", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Chameleon6", "review_title": "Classic", "review_description": "Awesome value for 3 classic games! I love this collection.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "126239586", "uniq_id": "5e03e18c-7f92-5dd9-b26d-ff2fdc0f5ad3", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1533", "name": "Remnant: From the Ashes - PlayStation 4", "brand": "THQ Nordic", "sku": "213157", "reviewer_name": "jan_luv_souls", "review_title": "Most fun CO-OP since Dark Souls", "review_description": "This is a fantastic game!!  We are having a blast playing the whole game together me and my family and friends. We are doing campaign and survival mode. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "If you are not a dark souls fan", "name": " this is still a MUST HAVE!!!!\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "3", "review_title": "0", "review_description": "1 year ago", "recommended_review": "5", "verifed_purchaser": "3.8", "helpful_count": "35", "not_helpful_count": "162535778", "reviewed_at": "ce32cb8a-5885-5cbf-a887-1a0c4dda67a7", "rating": "16/01/2022 16:18:35", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1536", "name": "Remnant: From the Ashes - PlayStation 4", "brand": "THQ Nordic", "sku": "213157", "reviewer_name": "Saltbuddie", "review_title": "Multiplayer unplayable", "review_description": "Constantly get kicked off, unable to host or join. Can\u2019t like a game if I can\u2019t play it. When they update I\u2019ll take this review down.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "19", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "3.8", "reviews_count": "35", "comment_id": "158131136", "uniq_id": "c1bea9ca-62a5-50b9-b1c4-efb7d7cbf019", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1554", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "lilchris9", "review_title": "Interactive movies, not quite games.", "review_description": "These games are focused on story over gameplay. If you're looking to have fun, none of these 3 will satisfy that itch.  ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "But if you are looking for a good story or a nice movie", "name": " these 3 can be one to pick up.\"", "brand": "No: I don\u2019t recommend this product", "sku": "Verified Purchaser", "reviewer_name": "0", "review_title": "0", "review_description": "2 years ago", "recommended_review": "3", "verifed_purchaser": "4.6156", "helpful_count": "359", "not_helpful_count": "125555134", "reviewed_at": "4e366b4c-2cc4-55f9-ba18-00f7bd06978f", "rating": "16/01/2022 16:18:36", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1562", "name": "Hasbro Star Wars: The Black Series The Clone Wars Phase I Clone Trooper 6-in Action Figure", "brand": "Hasbro", "sku": "212504", "reviewer_name": "LordLudicrous", "review_title": "New Clone Trooper Rocks Socks", "review_description": "It looks kind of shoddy in the picture, but is absolutely gorgeous in person. 10/10 figure!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2857", "reviews_count": "7", "comment_id": "165122497", "uniq_id": "551def4c-d1ea-5830-9770-9f79a1575e7d", "scraped_at": "16/01/2022 16:18:36"}, {"index": "1576", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Manuel Moreno", "review_title": "Awesome Game Quantic Dream Collection.", "review_description": "Its a fantastic game really great detail. Glad i bought the Quantic Dream Collection.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "125058241", "uniq_id": "edaf07bb-8965-5608-a84e-e8b56f6d4eec", "scraped_at": "16/01/2022 16:18:36"}, {"index": "1577", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Kenny Rutledge", "review_title": "Great game", "review_description": "Only played Detroit so far, but it is a great game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "124865400", "uniq_id": "d6ed4a03-1d69-5e96-b41e-d9ee139ce539", "scraped_at": "16/01/2022 16:18:36"}, {"index": "1599", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Dellabrown", "review_title": "3 really awesome games for a low price", "review_description": "Beyond two souls and heavy rain were on ps3 and on the sony store as ps4 digital downloads. I do not have internet so for these to be released as a physical copy is a great thing. Detroit become human is fantastic.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "123692491", "uniq_id": "f8046a09-7715-5584-b1ac-2f850f742dc0", "scraped_at": "16/01/2022 16:18:37"}, {"index": "1602", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Jody_Beltoff", "review_title": "Great graphics!", "review_description": "My best friend and I bought this a couple of weeks ago, and we absolutely love it! The graphics in the games are great as well as the plot!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "123503740", "uniq_id": "9c402316-a154-5bd7-a807-af65b43ddda6", "scraped_at": "16/01/2022 16:18:37"}, {"index": "1615", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Tbearrow", "review_title": "Amazing interactive game play", "review_description": "The graphics were beyond expectations. The storylines were just so well thought out. Then the fact you had a chance to do the dialogue with both characters at once idk if that\u2019s ever been done before", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "123031434", "uniq_id": "d26a62ef-3342-53c9-96ea-610703c3e018", "scraped_at": "16/01/2022 16:18:38"}, {"index": "1619", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "SexySheikah", "review_title": "Detroit human is something special!", "review_description": "Heavy rain was a leading game of its time, the graphics are updated but the game is aging difficultly. Beyond is a game with mixed concepts although intriguing it can be hindered by game mechanics. Detroit human is where this five star rating is a must. This game is beautiful, crisp, and you never know when the decision you'll make will change lives. Peace or war, obey or freedom, sacrifice or living to fight another day. It's an amazing game where each character draws you in in different ways making you question truly what the best decision for yourself and or for everyone else is. The concept of an aware AI has been in our eye sight for years, but this game touches on the heart of it and demands the player to choose where they stand. The draw backs would be the occasional forced story line where the choice you would make isn't an option, lack of tutorial leaves the occasional negative consequences when an action was missed and lastly the game mechanics and view screen can on occasion leave you struggling to get your bearings. BUT in all honesty these things are so minor. The ending left me wishing they'd given us more but I see room for a second game and only hope the story just might continue. Overall this game left me emotionally ragged in all the ups and downs my people went through, along with making me really feel and know every action could save or kill my character. I give it a solid nine out of ten and a must play recommendation for anyone looking for a game where your decisions matter.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "122906309", "uniq_id": "1b7f2295-be8c-5c52-ba9b-44014bd760b0", "scraped_at": "16/01/2022 16:18:38"}, {"index": "1633", "name": "Funko Pop! TV: The Simpsons Belly Dance Homer 2021 FunKon Exclusive 4.75-in Vinyl Figure", "brand": "Funko", "sku": "234661", "reviewer_name": "Lees316", "review_title": "Great item. Dented boxes.", "review_description": "All 3 of mines came with dented corners on the outside box covering. As a collector, I now have to find one with a good box to add to my collection, after putting it in a plastic protector.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "4 months ago", "rating": "1", "average_rating": "4.3165", "reviews_count": "79", "comment_id": "186196537", "uniq_id": "3fc3e637-4d7f-5308-a132-3e2ecc509c39", "scraped_at": "16/01/2022 16:18:39"}, {"index": "1644", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "SqPondMe", "review_title": "Great Watch", "review_description": "The watch does everything I wanted a watch to do. Provides me with all the tracking information I want for my activities and sleep. Plus I have downloaded all my playlists from my Spotify account  to listen on my earbuds without carrying my phone with me.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 days ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236716078", "uniq_id": "76300ac8-5f3d-57cb-a25c-c676a0b44d38", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1647", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Gratefulheart", "review_title": "Advanced device", "review_description": "The device is working properly, but it\u2019s a bit more than I need. I\u2019m struggling to track my runs through the device or the app. At one point a great run got messed up and I couldn\u2019t adjust it- very frustrating! It\u2019s user error, but don\u2019t buy more device than you need.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 days ago", "rating": "3", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236682794", "uniq_id": "a630ce16-1648-5eea-8e8c-3ef4a42b75bc", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1648", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "DrDrano", "review_title": "Great Watch", "review_description": "Love the watch. Great price. No, it doesn\u2019t have all the bells and whistles but it does what I need it to do.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "13 days ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236568109", "uniq_id": "41ea8bc5-f28f-561b-8c3d-2f0fa98937b6", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1651", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Lisas", "review_title": "Lack of open water swimming features", "review_description": "It was a Christmas present. I love open water swimming so I was excited to get a Garmin watch that my husband had been told would be suitable and the shop. Now I have to figure how how to get it to track open water swimming.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "22 days ago", "rating": "3", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236379383", "uniq_id": "c0bd4937-6692-5811-9a1d-391eaf5dc144", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1668", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Am13", "review_title": "Suggestions", "review_description": "Me acaba de llegar el reloj y me parece perfecto, el color, la forma y algunas de las animaciones que tiene as\u00ed como la aplicaci\u00f3n, sin embargo en esta versi\u00f3n de m\u00fasica que compr\u00e9 no est\u00e1 YouTube Music, en la cual tengo mi membres\u00eda ya paga, ser\u00eda bueno si pudiesen agregarla.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 months ago", "rating": "4", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "233280024", "uniq_id": "1b7e1336-2fa4-5725-baed-a66e84b4ef1c", "scraped_at": "16/01/2022 16:18:42"}, {"index": "1685", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Tmichelle", "review_title": "Love the features. Easy to use.", "review_description": "I bought this a couple weeks ago and it's great. Love being able to track my workouts and foods. The only thing I wish I could do is connect to pandora.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "231362178", "uniq_id": "31090aea-7f31-5bd4-be90-6312e5b3ffbf", "scraped_at": "16/01/2022 16:18:42"}, {"index": "1694", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Kimmer", "review_title": "Love it!", "review_description": "Just received this a few days ago.  Love it!  Was easy to set up,  am 63...and NOT tech savvy . It is light weight, and very comfortable as well. Thank you Garmin! Shout out to my wonderful husband who found this and bought it for me!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "230607357", "uniq_id": "27629623-e553-5ff9-be7d-a0d24430d7c9", "scraped_at": "16/01/2022 16:18:43"}, {"index": "1703", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "Sunshine Lady", "review_title": "The Michael Jackson Wii The Experience", "review_description": "I can\u2019t rate it yet. I actually put this gift in the back of the closet and forgot about it. It was supposed to be a Christmas gift. Oh my goodness, I know she will love it!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "6", "reviewed_at": "11 months ago", "rating": "1", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "172406215", "uniq_id": "5b02899b-2ca1-5278-b3a0-706f3c1d6cd5", "scraped_at": "16/01/2022 16:18:43"}, {"index": "1721", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Scottz", "review_title": "It\u2019s ok", "review_description": "The size is smaller then expected and the display is not as clear as I would have liked it. A lot to learn with a lot of pages and menus. Does not have an easy quick view of simple displayed like Apple has. Also, My bank is not a participant in Garmin pay. In hind site I should have spent the extra money and bought an Apple.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "227443296", "uniq_id": "33a582b6-fc07-53b8-a4f0-264ca25ef6e1", "scraped_at": "16/01/2022 16:18:44"}, {"index": "1724", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Tmurphy", "review_title": "Christmas gift", "review_description": "My husbamd bought this for me as a gift. I want to love this watch BUT it is not very accurate. I use the Eliptical A LOT and the steps and calories are way off on this watch from my Eliptical. Also the heart rate. I did plenty of research and read reviews on this amd the Fitbit Versa 3 and decided on this one. Unfortunately, it did not live up to the hype. I will more than likely be sending it back.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "2", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "227293985", "uniq_id": "830438b5-2456-5ab7-bdcc-3b89de0451ca", "scraped_at": "16/01/2022 16:18:44"}, {"index": "1734", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Ken2108", "review_title": "Pulse-Ox", "review_description": "I bought my watch not knowing it had a pulse-Ox on it. I started using it at night while I slept only to find out I needed supplement oxygen at night. I showed my readings to my pulmonary doctor. She had me wear a medical-grade pulse-ox overnight and was put on oxygen 2 days later.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "226381411", "uniq_id": "f29d05af-1cc0-57ff-a1d5-3ede318ed8c9", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1737", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "kmerr", "review_title": "Very Accurate", "review_description": "I love my new Garmin Venu SQ.  It's easy to use and keeps excellent data", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "225733460", "uniq_id": "09fc027a-c16b-585c-9d4f-1d6ba0351fb8", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1753", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "awitiwari", "review_title": "Not worth", "review_description": "In such a competitive era. I dont expect such quality from Garmin. If we compare it to that of Sam active 2 that is more promisinhg and havubg good features.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "2", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "225054788", "uniq_id": "6561f0f6-cc44-5e75-94bb-2a35f582b0f2", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1754", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Plt3334", "review_title": "Really nice watch", "review_description": "very pleased with the watch to date. Long battery life, great features and easy to operate.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "224997450", "uniq_id": "ead79a4d-3238-5e81-9769-0949dc1232a4", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1756", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Nonickname", "review_title": "Great features", "review_description": "Integration with my 520 plus is good, but instructions could be more precise.  Video instruction for each section would be helpful (ie golf, bike, walk, run etc).pairing Videos would also help. I realise that some are available, but a more logical progression / order would be beneficial .", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "224941773", "uniq_id": "0d289e97-5e81-5ba1-9b9a-440bcbe1af82", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1757", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "JudP", "review_title": "Really good, but not quite great.", "review_description": "Two days in and I really like the watch. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Cons:", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Settings menu only available on watch itself.  Why can't this all be found on the phone app?", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1769", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "Dnick91", "review_title": "Great game", "review_description": "My girls love it.... a bit pricey for a older game but no complains", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "117828026", "uniq_id": "066ec339-5fe1-5e19-b366-fe7318ee33db", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1771", "name": "Nerf Elite 2.0 Flipshots Flip-8 Blaster", "brand": "Hasbro", "sku": "291038", "reviewer_name": "kareeokie", "review_title": "HE LOVES THIS NERF GUN!", "review_description": "[This review was collected as part of a promotion.] Well I gave this to my grandson and he immediately knew how to work it ad started running through the house flipping it from side to side. He loves the sound it makes when it flips. Like racking the gun.  This Nerf Gun is a hot!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 months ago", "rating": "5", "average_rating": "4.6364", "reviews_count": "11", "comment_id": "185100949", "uniq_id": "56ae035b-d898-5895-b9a8-5a5ac08e3ab2", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1773", "name": "Nerf Elite 2.0 Flipshots Flip-8 Blaster", "brand": "Hasbro", "sku": "291038", "reviewer_name": "scarle291", "review_title": "Lots of fun", "review_description": "[This review was collected as part of a promotion.] My 7 year old son loves everything Nerf! He loves this one. It holds eight bullets. Four bullets go in at each end of the barrel. After shooting the first four you flip the barrel and shoot the last four. My son loves that feature. It takes the Elite bullets which shoot pretty far in this. The green slide to flip the barrels also is a sight. Very cool with the flashy green color on it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 months ago", "rating": "5", "average_rating": "4.6364", "reviews_count": "11", "comment_id": "184500862", "uniq_id": "64b0e255-2665-5b63-9013-7b2c53c845b8", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1774", "name": "Nerf Elite 2.0 Flipshots Flip-8 Blaster", "brand": "Hasbro", "sku": "291038", "reviewer_name": "MrsJG", "review_title": "So much fun!", "review_description": "[This review was collected as part of a promotion.] The Nerf Elite 2.0 Flipshots Flip-8 is a great new asset to the Nerf family. My husband is a kid at heart and loves shooting alongside my two sons. He loves the flip action and said the flip reloading action is exciting. He was able to trick our sons into thinking he ran out of bullets but unbeknownst to them he flipped it on them and continued the Nerf war, they were definitely surprised! It has great accuracy as well as power and precision. You need to add the Nerf Elite 2.0 Flipshots Flip-8 to your collection! Can\u2019t recommend it enough!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "6 months ago", "rating": "5", "average_rating": "4.6364", "reviews_count": "11", "comment_id": "183625704", "uniq_id": "f50a8948-a0d2-5cf2-bb1d-a2072905f6a8", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1782", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Mightyduck", "review_title": "Authentic", "review_description": "Authentic and in great shape, works fine on New 3ds XL", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "190604893", "uniq_id": "22a33e9c-b902-5b83-b4bb-3eb09f5958e0", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1787", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Wally88", "review_title": "Solid game", "review_description": "Solid game and story line. I hadn\u2019t played a Pok\u00e9mon game since 2006 (diamond was my last game), so just wanted to get back to playing. Black was a good refresher.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "6 months ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "183265767", "uniq_id": "40bad41e-133e-5836-bb3e-74c880c44954", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1790", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Brewmama11", "review_title": "Heartbroken kid", "review_description": "After three weeks to arrive, we received a defective game. My son is heartbroken that we cannot get a replacement in a timely manner. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1796", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "ROSES7", "review_title": "ITS LIKE DANCING IN A MICHAEL JACKSON MUSIC VIDEO.", "review_description": "ITS A GREAT GAME TO DANCE TO BY LEARNING THE ACTUAL MOVES LIKE MICHAEL JACKSON. HAD SO MUCH FUN DANCING TO THE GAME.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "29389468", "uniq_id": "0a4c8839-6c9d-5f76-9d3b-52b886800311", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1804", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "It didn't work!", "review_description": "I bought the first one and it arrived visibly corroded. I took it back to the store and ordered another one. The second one looked fine but it didn't work when inserted into the game. I had to make another trip back to the store. I am not impressed.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "6", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "163288834", "uniq_id": "7b9645da-76d5-5a41-ab43-383748cf629f", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1805", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "pokemon black", "review_description": "Great game. Missing link to get all my pokemon from when I was a kid to SWSH... Great service too. Almost impossible to find a legit copy these days.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "163262408", "uniq_id": "98d8a8aa-9381-587e-9151-39ab8868f5d5", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1810", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "Damaged", "review_description": "Bought the pre-owned but it wasn't even working. Opened it and it was entirely scratched up.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "4", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "161310290", "uniq_id": "9e4043b0-5034-5091-ac25-849b7e936379", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1812", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "aham3", "review_title": "Awesome for a party", "review_description": "Awesome with a group of people for a party also great for lowering the fat bulge areas.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "21100124", "uniq_id": "ea407d31-0642-5f02-a38c-0853c1dd9c99", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1826", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Acasa", "review_title": "Instant classic", "review_description": "I have logged so many hours into this game just exploring all the areas and re-exploring. Plus the post game has many things to keep you occupied including connecting with friends via Entralink, and a battle subway.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "136507470", "uniq_id": "1178096b-6cbf-5348-844a-e8055c0d380d", "scraped_at": "16/01/2022 16:18:47"}, {"index": "It is Nintendo's first try at making pok\u00e9mon semi 3D. It has a great story in-game with bad guys and good guys alike", "name": " and a bunch of great new pok\u00e9mon to catch and places to explore.  Another amazing installment in the franchise!\"", "brand": "yes: I recommend this product", "sku": "Verified Purchaser", "reviewer_name": "2", "review_title": "1", "review_description": "2 years ago", "recommended_review": "5", "verifed_purchaser": "4.4195", "helpful_count": "553", "not_helpful_count": "131438003", "reviewed_at": "2cc7226c-f8cd-5986-8a8d-75967cb63d59", "rating": "16/01/2022 16:18:47", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1833", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "PrincessCeeCee167", "review_title": "Love the Game", "review_description": "I really love this game.Its very fun, when we have parties we play it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "18180307", "uniq_id": "6361788e-6585-5d7f-a81e-9801a71ad40c", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1858", "name": "Battlefield 1", "brand": "Electronic Arts", "sku": "125976", "reviewer_name": "Keno82", "review_title": "Needs improvements", "review_description": "The overall concept of the game is good; I do like how the game comes with new features like the bayonet charge. I also like the options of a vehicle having the capability of holding a lot of people. What I do not like is the game is full of glitches. This is not a well-polished game at all. It leaves a lot to be desired. If you have a FPS that you already like and know this may not be a good choice for you. The vehicles being able to carry multiple passengers are the only good feature about them. The viewing angles are awful and while this might be historically correct is does not make for good game play. Shotguns are ridiculously over powered! People one shot from halfway across the map as well as handgun sniping seems to be happening too. I don\u2019t know if this a cheating issue or a skill issue. The last point I would make is that all the servers have very low Tic counts. This can make for some very short games. More load time then actual play time. I would only recommend this game if you are looking for a game that takes place during this time period or you would want a FPS while not having one that is current.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "13", "reviewed_at": "5 years ago", "rating": "2", "average_rating": "3.5556", "reviews_count": "9", "comment_id": "77563020", "uniq_id": "3110ae52-7eb0-5c0b-88ff-a3b7357bfca5", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1875", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Matt K", "review_title": "Defective product", "review_description": "Game cartridge was defective.   Tried on 3 separate systems and it would not play.   They should test games before they sell them", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "2", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "123820104", "uniq_id": "1dbd4757-f8c5-5275-82a8-257a80253225", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1876", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Stluv", "review_title": "Great features", "review_description": "I bought again for my son who lost it during a move.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "123293495", "uniq_id": "028ce26a-8afa-5977-8fd6-616dcaccfde9", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1883", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "jay260410", "review_title": "This is the best dance game ever.", "review_description": "Micheal Jackson the experience is the best dance/workout game ever. It is very fun at parties. Also it is E for everyone which is also great. the graphics are tremendous, most songs look a lot like his videos.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "16569609", "uniq_id": "f572fed2-b87c-556a-8f5d-2c8201683e70", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1893", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "DiddlyDangDax", "review_title": "Very underrated", "review_description": "I would recommend this to any Pok\u00e9mon fan that owns a ds. It gets way too much hate and not enough praise. Definitely worth the money.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "122488815", "uniq_id": "0080ba56-f8d2-5ede-a8f4-8677389ec106", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1894", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Scardra", "review_title": "Classic Pokemon", "review_description": "I actually already have a copy, but I bought the new one for a friend. This game is your classic Pok\u00e9mon game and is amazingly fun (as usual). Compared to older games, it has almost no previous Pok\u00e9mon until you beat the league, still amazing though.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "122403545", "uniq_id": "052e8641-ef45-5b6b-95d7-ba311cd19dd3", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1906", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "RabidSyndrome", "review_title": "The most fun we've had in a long time.", "review_description": "We brought this game home with our Wii -- it was one of the two games that made the family decide to even get that console! -- and popped it in pretty quickly. After dancing to one song, even my mother, who truly isn't a fan of video games in any shape or form except for the occasional arcade-style game, wanted to play. We managed to spend almost three hours just having sheer FUN with this, trying out the songs, dancing along, singing, whatever.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1911", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "butterflyheart426", "review_title": null, "review_description": "The brand is the number one in my eyes and so many others.  It is not expensive and are used in many items and they last a long time.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 months ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "231067298", "uniq_id": "e9ad26dc-e566-501c-9d9e-3bd71c4c5008", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1956", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Dragonfly9178", "review_title": "Great product", "review_description": "[This review was collected as part of a promotion.] So I have been using these batteries for 2 weeks now. My kids hot wheel track is still going strong. This toy is played with alot in a day. Very pleased with this brand and will be getting more soon", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "203053564", "uniq_id": "c1183791-12a3-58ea-885b-82d349bce3d2", "scraped_at": "16/01/2022 16:18:50"}, {"index": "1962", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Dave Rhomberg", "review_title": "new maglite 4  d cell had to chisel out batteries,", "review_description": "new maglite 4 d cell,had to ream and chisel out batteries.4 more of the same 8 pack never used,not past exp.,leaked on shelf in house.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "1", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "167989226", "uniq_id": "69011d89-0852-5a66-a922-3b7780b90ce5", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1965", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "THE UNTOUCHABLES 1987", "review_title": "one of the best fighting games since MK.", "review_description": "Injustice Gods Among Us is from the people who bought everyone the one and only, Mortal Kombat series. this game is a lot like Mortal Kombat only with DC superheroes and villain's. every fighter is great in the game; it only depends who you like. the story mode is very deep, and exciting. plus the extra content is a bonus for the ultimate edition. overall great fighting game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "9", "not_helpful_count": "1", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "95564509", "uniq_id": "fe05bd46-9844-5008-a172-3a57b7242347", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1967", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "334g", "review_title": "Injustice gods among us U edition", "review_description": "I think it's a perfect game I love it and the best part is that the are making a second one on xbox one. One thing I think should be upgrade is the moves the should put a lot more power moves and stuff.Hope the second game is just as good.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "1", "reviewed_at": "5 years ago", "rating": "4", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "72447391", "uniq_id": "ddef3a6b-b3ab-5ac1-b26f-269279bb2199", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1974", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "oooop", "review_title": "super fun", "review_description": "the unova region is one of my favorite regions in all the pokemon games, this game would be a great way to start", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "61362200", "uniq_id": "fc529662-7bfc-59eb-94a3-fa338848211d", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1976", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "SlivergamerHD", "review_title": "Fun game", "review_description": "Pokemon Black is a really great game but it has some stuff i hate. The story in Pokemon black is a really fun and interesting, it's about a team trying to take away Pokemon from all trainers but i'm not going to talk too much about that, the story is not too long or too short. 1 of the problems I hate about this game is most Pokemon look weird I know it's not a new thing but they should improve. The gameplay is AWESOME they changed some of the battling moves so they look cooler now and sometimes when you are playing the camera turns in different angles so it doesn't feel like some blocky world. A other problem is when you finish the story you don't really have nothing to do except catching them all but there isn't that much Pokemon unlike the other games. After all Pokemon black is a really great,fun and awesome game and you can play with your friends like in the other games so I really recommend to play this game if you are a Pokemon fan.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "6 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "50354893", "uniq_id": "a4ab0688-dd16-5c7a-905d-9396a7b19d93", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1977", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "radicalhanna", "review_title": "New Favorite", "review_description": "Now, compared to Nintendo's last few Pok\u00e9mon releases, this one is by far the greatest. The graphics are great, and the overall gameplay and storyline are stimulating enough to not put this game down! Definitely the greatest release since Leaf Green.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "7 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "38242995", "uniq_id": "53415750-686f-5812-8e21-ce31015b2dc6", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1987", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "BAdreon", "review_title": "Longer lasting", "review_description": "[This review was collected as part of a promotion.] I used these batteries in a battery-draining shower radio. The batteries wear down so quick, but these batteries from Rayovac lasted a lot longer. And for the price, they are definitely a great value.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "4", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "145994071", "uniq_id": "1b2bd358-e3fe-5a5f-9d18-cf85ae9702b8", "scraped_at": "16/01/2022 16:18:51"}, {"index": "2003", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "rc77", "review_title": "Great Bundle!", "review_description": "feel more secure and prepared having this storm bundle handy.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "83302070", "uniq_id": "d4b2ea5c-361f-5aa4-bc98-5fd8d04c1f66", "scraped_at": "16/01/2022 16:18:52"}, {"index": "2004", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Fancy", "review_title": "Lantern great, flashlights great but don't really glow in the dark.", "review_description": "The Lanterns are great. They throw off alot of light. Really light up a room. Highly recommend them.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2009", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Fisherbob", "review_title": "Great lantern. Everyone needs at least 1.", "review_description": "Already had the older model and the new model is just as great. Very bright lantern with a neat locator light. Great product. Have not tried the flashlight yet.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "47066222", "uniq_id": "a2d02269-0dba-50ab-8fe2-cae67e2c4dce", "scraped_at": "16/01/2022 16:18:52"}, {"index": "2010", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Immillion", "review_title": "BUY THIS GAME!!!!!!!!", "review_description": "This game is a good game I have spent countless hours playing this game it is my overall 3rd favorite ds game of all time I highly advise casual gamers and hardcore gamers to buy this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "30426404", "uniq_id": "0343ec48-9c6f-5b4b-95d9-cb905a931acc", "scraped_at": "16/01/2022 16:18:52"}, {"index": "2014", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "martin117", "review_title": "A bit of a flop", "review_description": "\"Now, in no way am I one of those pokefans that hates the games just because they are new. I've played Pokemon since blue and have loved all of the regions from the coastlines of johto to the island of sinnoh I've played them all and I loved the games. I've clocked in at least 200+ hours each. Unfortunately this came to an end when i played that unbearable mess that was White or maybe Black version. I don't remember because those games were in no sense \"\"fun\"\" they ruined the XP system", "recommended_review": " gave us the worst Pokemon up date.. Ice Cream and Garbage bags ? Really? but worst of all was the incredibly corny story line about some brain washed kid and Pokemon being friends instead of tools... which almost every Pokemon is to all trainers except the protagonists... in this case N... this game was so bland that after i beat the elite four i turned off my DS and took it straight to BB to get 30 back... i had no interest in the after game because the legendary trio was so lame it wasn't worth it to me", "verifed_purchaser": " I am going to buy B2 or W2 and hope that it is not quite this bad.\"", "helpful_count": "No: I don\u2019t recommend this product", "not_helpful_count": null, "reviewed_at": "0", "rating": "2", "average_rating": "8 years ago", "reviews_count": "3", "comment_id": "4.4195", "uniq_id": "553", "scraped_at": "29144828"}, {"index": "Beautiful cut scenes", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Hope this has helped!\"", "name": "yes: I recommend this product", "brand": null, "sku": "0", "reviewer_name": "1", "review_title": "8 years ago", "review_description": "3", "recommended_review": "4.4195", "verifed_purchaser": "553", "helpful_count": "27876126", "not_helpful_count": "37f668aa-e81b-598b-8c4d-f0cd930bb7f0", "reviewed_at": "16/01/2022 16:18:52", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2019", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "pieguy007", "review_title": "this is AWSOME!!!", "review_description": "This is one of the best games i have ever played. i would reckomend this game to any one that likes Poke'mon", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "25885232", "uniq_id": "b531d7ed-2ac8-5603-aa47-475889d389af", "scraped_at": "16/01/2022 16:18:52"}, {"index": "2032", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Jallet", "review_title": "really?", "review_description": "Good graphics, I just dislike that you can't skip the cut scenes so it is very drug out.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "7 months ago", "rating": "2", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "181535341", "uniq_id": "fc141d51-7785-524f-a967-0c3fb8552f69", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2036", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Anonymous", "review_title": "W2K19 awesome game", "review_description": "My 7 year old WWE fanatic likes it best out of all the WWE GAMES and he has them all!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "175624511", "uniq_id": "127d59f9-0ac9-585f-a4b7-378346bc2ec6", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2041", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Cliff51", "review_title": "Great lights", "review_description": "I really like the LED lights. The lantern is not big, but gives out a lot of nice, white light. This means it is easy to find a place to put it. The 2 small flashlights also put out a lot of light and can be stored in a car glove compartment or pocket. Part of the small flashlight housing emits a faint glow after use so you can locate it.Overall, wonderful products.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "25083130", "uniq_id": "1cb81a6a-ccf2-5f29-8b85-2a671e3c9de9", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2045", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Jeff124642fhkfdkjfdjcstuk", "review_title": "Just ok", "review_description": "Lantern is very small. Was expecting something a bit bigger for a battery operated lantern. Flashlights are good for a pocket size light. Not sure yet how long a set of batteries will last. It would be more upfront if you would give the product measurements instead of just the lumens. Most people don't know 1 lumen from the 240 lumen light you sold me. The 240 sounds great but in reality it is not a great amount of light. I put I would recommend, just be aware of what you are buying.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "3", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "21603096", "uniq_id": "4ec87bef-40ca-5132-9f0e-72f63f0cc65c", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2049", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "staarz", "review_title": "Love this summer storm set", "review_description": "Love this set. The lantern which is tricky to open and insert batteries is wonderful. We are going to really enjoy this come summer time. and the little flash lights are small tho oh so powerful...", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "17240519", "uniq_id": "cea0c9b7-7f99-5598-9e76-9cef6f2f1726", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2050", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "RAS4442", "review_title": "Well worth the money", "review_description": "Very good products for the money. I bought two bundles and I consider it almost a steal at the price I paid. Thanks Ray-O-Vac!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "16874529", "uniq_id": "625de5f6-4bc9-5308-9798-ba130e36d872", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2059", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Rella", "review_title": "Great light in a small package.", "review_description": "After Hurrican Sandy I knew I need some additonal lighting for when the electric was off. I purchased one lantern, when I saw how much light it delivered I purchased several more for my family. Lots of light for a little lantern. All ready for the next storm.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "13738444", "uniq_id": "5801ef6a-07a9-5e8b-9d25-a260d38f22fb", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2067", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Anonymous", "review_title": "Fun gameplay", "review_description": "A fun game that lets you experience, wrestling to the fullest. I had a great time with the game", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "141241223", "uniq_id": "9cb8272b-7bff-5dc7-a420-199495d3138e", "scraped_at": "16/01/2022 16:18:53"}, {"index": "I gave it 4 stars because no instructions were enclosed.\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "9 years ago", "review_description": "4", "recommended_review": "4.6053", "verifed_purchaser": "76", "helpful_count": "13432861", "not_helpful_count": "01196490-6250-5220-9a6e-441f1fd59dcc", "reviewed_at": "16/01/2022 16:18:54", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2087", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Cool C 23", "review_title": "WWE 2K19", "review_description": "love WWE 2K19 all my favorite  wrestlers game play is great.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "138045712", "uniq_id": "656e2695-44fb-5508-abb0-a91686a6943c", "scraped_at": "16/01/2022 16:18:54"}, {"index": "2099", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "gamer332", "review_title": "Why? just why? why nintendo? :(", "review_description": "I bought this game thinking it would be better than diamond or pearl. What was nintendo doing the past 4 YEARS? The pokemon were stupid!!! There was no creativity! They should just make a remake of firered or some older pokemon game or something!!! I would not even recommend this to a 4 year old!! please nintendo, while im trying to keep my manners make a better game. >:(", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "30", "reviewed_at": "9 years ago", "rating": "2", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "23101716", "uniq_id": "5f1eceb8-6c4c-581a-af68-84642acc67e4", "scraped_at": "16/01/2022 16:18:54"}, {"index": "Turned out beautiful.  Also added remote controlled battery lights to the ceilings", "name": " makes it look very real especially when the front is closed.\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "5", "verifed_purchaser": "4.7143", "helpful_count": "21", "not_helpful_count": "227821313", "reviewed_at": "c8141619-216e-5423-a6b6-0676189a6571", "rating": "16/01/2022 16:18:54", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "It takes time to put it together but if you download the app that it\u2019s recommended (BILD) it\u2019ll be so much easier to follow the steps and faster to get it done.\"", "name": "yes: I recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "5", "recommended_review": "4.7143", "verifed_purchaser": "21", "helpful_count": "227570761", "not_helpful_count": "92f11ede-101e-5170-a54e-d9cde699f876", "reviewed_at": "16/01/2022 16:18:54", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2130", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Destroyah92", "review_title": "Here's hoping to 2K20.", "review_description": "I finally bought this at the 20 buck price, because I feel like that's what these titles are really worth now. The match expansion is cool, creating a MITB is neat too, albeit very lite form of it. But the gameplay is still the same with little really added to it. The paybacks are okay, but not really much of a momentum shift change. & the Daniel Bryan showcase is like playing wrestling Bop-It!. The entire match is just do the certain objective until a cutscene happens that leaves you at a disadvantage or just finishes the match for you. 2K still needs work on these.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "131180169", "uniq_id": "c8c30750-78e7-55cb-807f-5af6b04ea234", "scraped_at": "16/01/2022 16:18:55"}, {"index": "Loved it", "name": " now using it for trading. Thanks Nintendo!\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "3", "review_title": "0", "review_description": "9 years ago", "recommended_review": "5", "verifed_purchaser": "4.4195", "helpful_count": "553", "not_helpful_count": "21964345", "reviewed_at": "aff53db0-c595-5dc7-9b83-3df81f153269", "rating": "16/01/2022 16:18:55", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2135", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "pikachuandpiplup", "review_title": "i love pokemon", "review_description": "i love pokemon. and i love the game its fun. all my friends like to play my game. i think pokemon games are addicting.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "21880477", "uniq_id": "5a759751-8175-5dbc-8449-7acc6aac5423", "scraped_at": "16/01/2022 16:18:55"}, {"index": "2136", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "HIGHLANDER7412", "review_title": "Pokemons still got it", "review_description": "I got the Pokemon black Dsi bundle and i was very pleased with it. It was a little over priced because i dont see charging over $150 for a hand held system as even reasonable but i digress. The game play is fun and the use of the c-gear makes it where you have to go online to do alot of things but its still a good game. The online how ever is not appealing in the least. While the use of wifi trading from around the world is kool you often come across 5yr olds with all rare and shiny pokemon who taunt you in the trade center or you incounter those who only want rare pokemon and will give you a very common pokemon in return (ex. they want to give you a magikarp for your reshiram). I still love the game as ive grown up in the pokemon era. I totally recommend this game to anyone who loves pokemon as i am 18 yrs old and in college and i still play pokemon.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "21879943", "uniq_id": "732c8a56-dc68-5ac2-9808-990574c0d9ef", "scraped_at": "16/01/2022 16:18:55"}, {"index": "2143", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Bowl", "review_title": "Increased Difficuilty ^_^", "review_description": "Great game! most of all they increased game difficulty :D", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "21099371", "uniq_id": "d10df274-6646-564f-9256-be07d87d5510", "scraped_at": "16/01/2022 16:18:55"}, {"index": "2162", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "KnockEmDown90", "review_title": "Missed opportunities/Do not limit reversals", "review_description": "There\u2019s no real technique. You have limited reversals and that\u2019s not realistic. This hand has a lot of potential and opportunities to improve. I used to love wresting games now I don\u2019t think I\u2019ll ever purchase another one", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "129853736", "uniq_id": "cae5d5c7-3b2a-52ea-bbb5-3795ecb3a076", "scraped_at": "16/01/2022 16:18:55"}, {"index": "2180", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "LJAMIN", "review_title": "Finally!", "review_description": "It has finally happened and wwe 2k has made a game with a decent story for my career mode. It\u2019s honestly a cheesy storyline that made me laugh a few times but still better than what you\u2019ll watch in the wwe nowadays. With more legends than I remember you\u2019ll find yourself enjoying this game even if youre not a fan of the current wwe. There is a grind to unlock everything though unless you just want to pay to unlock everything. Really am glad about the story mode though. That alone made this purchase for me enjoyable. Few glitches but nothing game breaking. Would recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "129459445", "uniq_id": "64476435-2642-535d-a36f-16279cd16760", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2185", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Drgnhrt", "review_title": "I miss thq", "review_description": "It's ok. Story mode is back which was refreshing. Still not worth new price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "128665316", "uniq_id": "3e903293-eae0-5518-8562-f038a3ace848", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2187", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "amzing93274WiiandDSFan", "review_title": "New! good :) :D :)", "review_description": "fun worlds new game play elimits And fun puzzils and Gameplay new tips of battles and New pokemon good online amzing Lots to do its a Long keeps u bizzy. Lots of good Gameplay and 3D worlds its realy good! i love it! PS good story and So funny parts easter eggs and Black city if u git this one. it fills differt and New. PS its have new music good parts i love online its crazy adding difert fill than the Other pokemon games if ur bord with the Same old pokemon give this a Try!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "20224758", "uniq_id": "37df71aa-5af2-539e-8db2-bafcce0e2c78", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2193", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Zachattack22", "review_title": "My favorite pokemon game", "review_description": "This is my favorite pokemon game because of all the new features that are in the game. If your a pokemon fan or someone who wants a lot of extra content out of a ds game. You can't go wrong with pokemon black.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "19913310", "uniq_id": "2421035a-eafe-5735-bdac-2c6446d7f7f6", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2198", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "Brittanya", "review_title": "Good game buy not thr version he wanted", "review_description": "The game is fine just wasnts the one i came in for. This game is like the one on the phone.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "3", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "154428436", "uniq_id": "9f17e545-ef19-54d2-b66a-8ec09cc76812", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2201", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "SamGTX", "review_title": "Fun and addicting", "review_description": "Fun and addicting game, but ends too soon, needs more levels!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "137878231", "uniq_id": "d3e8178b-6d54-5840-89b6-6e7e419a92f7", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2203", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "CodyMac", "review_title": "PVZ what more can I say?", "review_description": "Another classic, with multiplayer no less. Can't beat it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "131210116", "uniq_id": "f79788ee-a1af-523b-8723-c90173a11acf", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2224", "name": "Hunting Simulator - PlayStation 4", "brand": "Maximum Games", "sku": "150357", "reviewer_name": "deer hunting man", "review_title": "Not a good game", "review_description": "This game is not what I thought it would be. Was looking for a little more realistic hunting experience.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "3", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "3.1529", "reviews_count": "85", "comment_id": "123109874", "uniq_id": "fba87fb1-121b-5a47-a8e4-3750c47558f1", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2229", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "AGB1988", "review_title": "Love it", "review_description": "My Daughter bought the game for herself so she could create her wrestler to team up with Charlotte Flair..", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "128421334", "uniq_id": "20933cc4-b7de-5a5c-8e09-f96a27ab5a64", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2231", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Cide Kazama", "review_title": "I play for the building and creating i enjoy", "review_description": "It\u2019s like it always has been. Depends on how you want to play", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "128014670", "uniq_id": "0a5675ae-2445-5180-87ad-a91925ae422a", "scraped_at": "16/01/2022 16:18:56"}, {"index": "2237", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Pokemaster1", "review_title": "TOTALLY AWESOME", "review_description": "I have loved pokemon ever since my first one: gold. I am very impressed with the creativity, graphics, gameplay, new pokemon and EVERYTHING. Unless you hate pokemon more than anything, you will like it. My only complaint is that it doesnt go on forever! Great job, Nintendo!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "19768082", "uniq_id": "eeb12943-e018-5f40-90db-dff32742f9e2", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2241", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "prime10293", "review_title": "Fantastic", "review_description": "This game is amazing. This is easily the best generation since Gold/Silver in my opinion. The game provides the best story of any previous pokemon game and manages to keep the basics intact. The new pokemon you can find in the Unova region look stupid and their names don't help them, but once you play the game you start to fall in love with a lot of these pokemon like I did.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "19596494", "uniq_id": "da1ae16d-b12d-5203-9838-6904cfb13df5", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2255", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "JonfromPortland", "review_title": "This game sucks", "review_description": "It requires you to have an xbox gold live membership to play. I'm not going to buy an xbox gold live membership!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "20", "not_helpful_count": "6", "reviewed_at": "7 years ago", "rating": "1", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "42013375", "uniq_id": "13d80c63-171b-5d1c-b692-fa5dd8fc97ec", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2256", "name": "Hunting Simulator - PlayStation 4", "brand": "Maximum Games", "sku": "150357", "reviewer_name": "Zacriley80", "review_title": "Meh.", "review_description": "Pretty good. Graphics and realism suck a little but overall it\u2019s fun.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "3.1529", "reviews_count": "85", "comment_id": "119897829", "uniq_id": "0df37cbe-0d14-5776-a965-c7980b8ed0c1", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2286", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "EternalFlamesOfDeath", "review_title": "Overall Good.", "review_description": "I reserved this game and got it the morning it was released and from the moment i played i was drawn into its new landscape and the overall story. However Some of the creatures they choose are rather poor with certain ones but there are some i just was in awe of. I loved that there where more 3-D effects while traveling and in battle along with a few more areas. If your a seasoned pokemon fan and have been since the begining then you will find this game rather easy to beat, but it is still a fun installment in the series.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "4", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "19053019", "uniq_id": "c4095540-fd06-53ad-8ddf-3d7cfdb3e48b", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2289", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "MIDSHADOW99", "review_title": "THIS GAME IS AWESOME", "review_description": "YOU SHOULD GET THIS GAME ITS BETER THE ONLINE AND I RECOMED THIS GAME TO EVERYONE OUT THERE!!!!!!! THANK YOU FOR READING GET THIS GAME TODAY!!!!!O YEAH THE ONLINE VEISON SUCKS!!!! GET TIS GAME ON THE XBOX 360!!!! I WISH THEY HAD THIS FOR THE WII!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "8", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "25208424", "uniq_id": "53c12fe3-53db-5e39-b334-9ccd74f7b9a8", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2291", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "Hedy75", "review_title": "Love it!", "review_description": "I bought this when it first came out. My kids and I still play it. We loved it so much, I bought it for Xbox 360 too. I love the Zombies. I love the all the little side games you can do. I'm even going to preorder The Sims 3 Super Natural so I can get all the PVZ gear. This is just an awesome game if you want to play for fun or just kill some time.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "6", "not_helpful_count": "4", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "24441953", "uniq_id": "976dcdcc-8992-5cf4-8ea8-f35a9f0f8cc3", "scraped_at": "16/01/2022 16:18:57"}, {"index": "They make the reversals hard to do it\u2019s either to fast", "name": " to slow or shows green but doesn\u2019t work properly. ", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "I find the controls very slow and the character takes way to long to get up and do anything. I\u2019m actually close to just removing this game off my system because it\u2019s so annoying. This game has a lot of potential if they fixed a few things.\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "2", "recommended_review": "4.2351", "verifed_purchaser": "1195", "helpful_count": "126268881", "not_helpful_count": "2b1ca8ac-e072-5e0e-9f58-461554a16bb3", "reviewed_at": "16/01/2022 16:18:58", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2313", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Lil Biggie", "review_title": "Why aren\u2019t all the characters unlocked.", "review_description": "My kids love this game. We wish all the characters were unlocked without having to buy a season pass for $29.99 but other than that they live the game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "125907014", "uniq_id": "a4101f8c-a6d1-573d-a47c-9258af8ed656", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2330", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Codbo4", "review_title": "Wwe2k19", "review_description": "My player mode could be put together better. It\u2019s seems like it was made in 2007, last years was better my player gets worse every year.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "125251087", "uniq_id": "0f9a8f8a-7989-55a6-b098-83c5d2513126", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2334", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "Anonymous", "review_title": "Pretty Good", "review_description": "Plants vs Zombies is a very fun and addicting game. The graphics are totally cartoon, but that doesn't change how fun it is. You have to use lots of strategy to complete each level. The different plants and zombies get very creative and funny. I would suggest this buying this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "19685372", "uniq_id": "ba956bde-a711-59a6-8480-9ced72934fa4", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2336", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Bmart202119", "review_title": "Great game", "review_description": "The graphics are really good. Game play is awesome.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "125145254", "uniq_id": "8c0d0982-7888-5a81-9f01-5f1ed3533c4c", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2338", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "punk99", "review_title": "awesome game", "review_description": "this game is the best pokemon game ever made on ds", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "18849430", "uniq_id": "4d6fceda-db5b-5b9b-a9c6-25e1ceb3d9ad", "scraped_at": "16/01/2022 16:18:58"}, {"index": "-Not every Pokemon can be seen or captured until Nintendo releases an Event. Japan has had a bunch so far", "name": " mainly Dream World", "brand": " but everywhere else lacks Events to introduce the remaining few Pokemon unavailable.[can you say Keldeo?]", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2349", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "andrewpbeast", "review_title": "A Great Last Game to the DS", "review_description": "This was the last game for the DS to some. The 3DS was about a month away, and no one could wait. But Nintendo pulled out a new Pokemon main series game to end the DS off, and we had no problem waiting another month for the 3DS. This game, in my opinion, is what Pokemon Diamand and Pearl should have been. It actually boosted up the graphics, made the Pokemon always moving, added a new camera view (both in battle and out), and made online play accessable. Plus the game has a lot of content... including 150 ALL NEW Pokemon. So... let's get on with the review. -----GRAPHICS------ Nothing ground-breaking, but they still look very nice, and the animations are great! -----FEATURES----- The game features 150 new Pokemon. That might be enough to make you want to buy this game. Plus there is a whole new region to explore with new cities, characters, and a whole new dramatic story. Plus all of the Pokemon from past versions are able to be caught or traded after the main game is over... so replay value is pretty high. -----GAMEPLAY----- The gameplay is awesome. It is Pokemon (and its fast paced, unlike diamand and pearl were). You run around and explore areas, finding your way through puzzles and areas, and pitting your Pokemon together in classic RPG battles. Pokemon in its prime. -----CONCLUSION----- This game is awesome. If you do not own either black or white, buy one of them (or both!!!). These games are true Pokemon classics... enough said!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "8", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "18762069", "uniq_id": "6a245aea-2dc8-5485-8180-cd35fe8d1539", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2360", "name": "Hasbro Power Rangers Dino Charge Green Ranger Lightning Collection 6-in Action Figure", "brand": "Hasbro", "sku": "248018", "reviewer_name": "Greatwolvie", "review_title": "Excellent Power Rangers", "review_description": "Great items, super fast shipping,  packed very well", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 days ago", "rating": "5", "average_rating": "4.3333", "reviews_count": "6", "comment_id": "198421551", "uniq_id": "324d5d25-2120-5e07-a77a-1fad6c4ece90", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2374", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "PAPASMURF8182", "review_title": "To many glitches", "review_description": "Has to many glitches in match always freezing in main event overall yall rushed the released before perfecting it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "124510344", "uniq_id": "af86cacc-6e4e-5a85-85f7-32805b8ce3b1", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2376", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Bison272", "review_title": "Nice but I am not ready...", "review_description": "Create a character was too hard to understand and I gave up.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "124300716", "uniq_id": "d5864fe7-7eaa-5072-9011-a881984ec596", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2377", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "shadowfinnjake", "review_title": "Good game but...", "review_description": "Great game with great graphics and creation modes. Showcase was a bit short though. MyCareer isn't what you'd expect and it's a story, not YOUR OWN career. It was cheesy. Universe mode needs to freaking step it up and make it like SvR 2007 GM Mode. Good game, lacks replayability.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "124193192", "uniq_id": "ed358df1-989b-584d-9e3c-9e80935cdda9", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2389", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Jmaine285", "review_title": "Great quality and picture", "review_description": "[This review was collected as part of a promotion.] I got this monitor to game. The quality of the picture is very good. Refresh rates are fantastic. Get a Samsung and never look back.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "212314351", "uniq_id": "d89dbbd5-591a-507f-b136-9d23a5ce4c0b", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2409", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "amazing!!!!!", "review_description": "soooooooooooooooooooooooo gooooooooooood i cant stop playing it!!!!!!!!!!!!!!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "18318830", "uniq_id": "c854fa84-82b1-5113-8aa8-2ead6ce52e28", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2419", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Holcs", "review_title": "Last and Last", "review_description": "[This review was collected as part of a promotion.] I got this product about a couple weeks ago and I finally got to use them on my fishing trip I put them in my aerator in my minnow bucket we fished all day and the next morning they were still as strong as when I put them in", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231566093", "uniq_id": "847b3b6b-c949-5d0a-8aeb-d0d36f297ea6", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2421", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "european game", "review_title": "You sent me a European Game", "review_description": "You guys sent me a European Game. I meanit works fine and everything it's still in english and the Switch is region free but don't you guys not take foreign games?", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "4", "reviewed_at": "5 months ago", "rating": "3", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "185874023", "uniq_id": "fffef95e-5e25-58df-9125-8cb2795d9862", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2426", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "NorCaliChick", "review_title": "Sing the doom song", "review_description": "Great game play, story line!! My switch handles the graphics well. Love this game!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "174105080", "uniq_id": "71afef1e-cddf-56fc-bb07-e5c5a4dcc1b8", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2427", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Colonel CoOp Campaign", "review_title": "NEED CO-OP CAMPAIGN!!!", "review_description": "WHY NO CO-OP CAMPAIGN???", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2433", "name": "MXGP 3: The Official Motocross Videogame - Nintendo Switch", "brand": "Square Enix", "sku": "158344", "reviewer_name": "R 3 4 P 3 R 26", "review_title": "Maybe for someone else", "review_description": "Can't honestly say if this is a great game or a bad game. Bought it for my 4 year old. Tired to help him learn how to play but it was rather difficult though. Me and him play several other racing games together but couldn't get into this one.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "3.1212", "reviews_count": "33", "comment_id": "137020523", "uniq_id": "d4d9bd59-29ef-5b5b-a0a6-0ae5fca2b630", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2434", "name": "MXGP 3: The Official Motocross Videogame - Nintendo Switch", "brand": "Square Enix", "sku": "158344", "reviewer_name": "Deerstanddave", "review_title": "Worth the money", "review_description": "This game is quite fun to play. Definitely very challenging and fast pace. This has got to be my favorite dirt bike game on the market right now. I grew  up playing the mx unleashed series, and while this game is fun to play it definitely has got nothing on mx unleashed but is in my opinion a lot better than monster energy sx and moto racer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "3.1212", "reviews_count": "33", "comment_id": "125601051", "uniq_id": "3ed92e41-059c-50a3-ab6c-a4e21e7e3c5f", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2437", "name": "MXGP 3: The Official Motocross Videogame - Nintendo Switch", "brand": "Square Enix", "sku": "158344", "reviewer_name": "Braaap42", "review_title": "The best of the three !!", "review_description": "I have this game for my PS4 from the first one to the third. This is by far the best of the three ! Tracks are laid out more realistic the customization is great from the gear to the bikes... Freaking killer graphics my daughter could even tell the difference in a muddy or dry track... Next thing they need is to give a free ride option !", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "9", "not_helpful_count": "1", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "3.1212", "reviews_count": "33", "comment_id": "108196865", "uniq_id": "190d69ee-ea91-501a-a476-cb4ebab0935b", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2438", "name": "MXGP 3: The Official Motocross Videogame - Nintendo Switch", "brand": "Square Enix", "sku": "158344", "reviewer_name": "Katerina", "review_title": "Horrible graphics and game control", "review_description": "Do not buy this game if you are looking for quality! My ten year old saved all his money to buy this game on its release date. He has been talking about it every day for weeks. He even woke up two hours early to play it before school. He played it for less than a minute and immediately noticed the poor quality of the game. I immediately called nintendo and asked for a refund which we might see in 5 business days. Extremely disappointed. We are huge motocross fans and riders, I really wish they didn't give us such a let down.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "9", "not_helpful_count": "14", "reviewed_at": "4 years ago", "rating": "1", "average_rating": "3.1212", "reviews_count": "33", "comment_id": "108168411", "uniq_id": "696dec38-d086-5db0-954d-31399d01b704", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2442", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Icedragonenigma", "review_title": null, "review_description": "It's great. Allot more options on match types. Most of the nxt guys are in game.. Some animations are funky", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "123738346", "uniq_id": "b64a73f2-2897-519b-a7d6-3afecdd572ab", "scraped_at": "16/01/2022 16:18:59"}, {"index": "IM REALLY EXCITED  SOON THE SEGA GENESIS WILL ARRIVE AND WILL BE GAMING TO REMEMBE MY  CHILD THROWBACK MEMORIES\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "5", "recommended_review": "4.1605", "verifed_purchaser": "81", "helpful_count": "212228908", "not_helpful_count": "1dc922c3-884a-59f7-af42-993737467508", "reviewed_at": "16/01/2022 16:19:00", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2463", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "drhunz", "review_title": "Excellent as always", "review_description": "[This review was collected as part of a promotion.] It's hard to know what to say except, Energizer makes awesome batteries. The only thing wrong with Energizer batteries is that they last so long that I am not sure how the company makes any money waiting for people to replace them.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231493660", "uniq_id": "3795cb9e-7a6c-5949-b64c-65b03ea18d60", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2477", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Autobotleo", "review_title": "Doom is a blast.", "review_description": "Fantastic game filled with lots of action and tons of nods to the original series of games", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "142931558", "uniq_id": "305d5bc1-f6eb-51f5-ac54-598cc7437f60", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2481", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Erickus", "review_title": "Great game", "review_description": "Excelente game. A bit disappointed on the port, still fluent though. The game itself is superb.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "141857413", "uniq_id": "dea8c346-f705-5dbb-8061-310bb0ca00f7", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2482", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Lotuspod13", "review_title": "Doom", "review_description": "I have been playing the doom series since 93 when it came out on pc I was 3 at that time slaying demons on my dads lap and I have to say it never disappoints (except for the movie adaptations -_-)", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "141566122", "uniq_id": "3022a654-1aca-5e38-8fdb-997e30bcbacc", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2485", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "almathewj", "review_title": "GREAT JOB NINTENDO!", "review_description": "Pokemon is back in another installment in the series, pokemon black and white in the Unova region. when i started this game i imediately noticed how the characters are very pixelated. i think nintendo spent so much time on the region that they slightly neglected that actual people along with the pokemon.after all the people are what we are really going to be looking at. even if you've never played a pokemon game before, you will love this game. Also, for any returning fans, BUY IT! no matter what type of games you like this game is a must buy! 10 out of 10 stars!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "18222902", "uniq_id": "0cebf3b6-cf00-550e-9a64-1fe3b1e81249", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2522", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Monniemommy", "review_title": "Our go to battery", "review_description": "[This review was collected as part of a promotion.] We have three kids under 10 and go through many batteries throughout the year.  Energizer is the only brand that seems to be worth its salt.  We will always purchase this product, don't be fooled by the discount off brands, it's not worth it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231326382", "uniq_id": "4316e20b-5432-50c0-9429-d98165f8683d", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2526", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Rmh00", "review_title": "Never Disappointed", "review_description": "[This review was collected as part of a promotion.] As a family we have always used Energizer batteries and they have never let us down obviously good quality long lasting expiration dates and who doesn't love the Energizer Bunny. After trying the Energizer Max batteries we definitely will be buying these they seem to give a little bit more power and definitely last longer. We will continue to be an Energizer battery family M will definitely recommend these to our friends", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231299380", "uniq_id": "14cfbe38-c4d1-5e06-a24c-437ad4a39b65", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2528", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Billy Bob Thorton", "review_title": "Doom on the go!", "review_description": "Its amazing what doom accomplished on the go. Granted it wasn't the best game graphically but I have doom in the palm of my hands now. Something the PS4, Xbox and the PS Vita could never do.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "141389571", "uniq_id": "c18e0891-a46a-5975-8964-72ec2bd775b8", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2541", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Drifttttttttt", "review_title": "Not what I expected", "review_description": "I got pokemon Black with a good impression that it was going to be awesome and epic just like all the others. I was sadly mistaken. The pokemon are ugly and not cool, the old ones are way better. They are obviously in it for the money now and have no compassion towards it. 3D imaging is just lame to me, I dont care about the graphics, I just care if i can see what im doing while having fun. Pesonally Ive been playing pokemon since FireRed, and Black and White versions are just not worth it to me.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "10", "reviewed_at": "10 years ago", "rating": "2", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17929549", "uniq_id": "ed3e50e5-11e3-525c-be56-bcc67e588011", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2545", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "POKEPHSYCO", "review_title": "BEST GAME EVER", "review_description": "Pokemo black is a great game but the cries arent theyre names like the show. The graphics need improvement bu the story line is great. The starers are as always water,grass and of course fire.but why cant u catch botgh legends tell me.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17907206", "uniq_id": "cec260d7-8b48-5b28-9e4c-e16d36ad2dcc", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2546", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "dagugtggggggggg", "review_title": "Pokemon Down Grade", "review_description": "They took out many things and I hate the lack of graphics plus they took out many other Pokemon including legendaries.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "51", "reviewed_at": "10 years ago", "rating": "1", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17898386", "uniq_id": "1be05a57-1551-578c-8ada-efa2dffb06b7", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2555", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "badbart", "review_title": "A ton of new and old school wrestlers", "review_description": "I bought this on sale at Gamestop and I really like it. I haven't bought a wrestling game in a long time but I am glad I got this one! Great graphics, the moves are easy to pull off, even for me. Get it you will like it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122724026", "uniq_id": "dfb5b137-510e-5588-a02e-8299fb3c8c01", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2569", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Hsayy", "review_title": "Great!", "review_description": "[This review was collected as part of a promotion.] I have an old school flashlight that takes 2 D cell batteries, and these are fantastic! The bulbs are incandescent so they use a lot of energy in a short amount of time. It's an old clunker of a flashlight, but it's been my workhorse for decades. Glad to know I can keep using it even longer with better and better battery technology these days.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231259045", "uniq_id": "d6a2df04-861c-5482-8369-3f01779d50fb", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2579", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Christopher Hess", "review_title": "Great Game with Great Software", "review_description": "Honestly it's a great game. I really haven't had any bugs or errors. Campain and multiplayer make it worth it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "136355821", "uniq_id": "c377a9b3-47b8-51ac-9890-d5562a89d16d", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2592", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "shadowman95", "review_title": "Pokemon Black summary", "review_description": "I love this game it is what it was suppossed to be i have no regrets, this is just as good as yellow version.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17775354", "uniq_id": "91bacf9d-cc9b-59c4-99f1-992096da6679", "scraped_at": "16/01/2022 16:19:01"}, {"index": " the repair facility in new jersey is another joke.  they will waste your time and sell you garbage.\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "1", "recommended_review": "4.1605", "verifed_purchaser": "81", "helpful_count": "199197236", "not_helpful_count": "b6a3a5ff-fb8a-594f-8b5e-113882c41b6e", "reviewed_at": "16/01/2022 16:19:02", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2612", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "MK19", "review_title": "Great monitor", "review_description": "i'm leaving a 5 star review because this monitor rocks for the price. also, someone left a review for not being able to mount the monitor...that person must not have known what they were doing...easy to mount just use spacers to clear the shroud, not very hard unless you make it hard.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "199087810", "uniq_id": "70a0179d-36ad-5597-987a-205bb42581a2", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2616", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Anonymous", "review_title": "2 Week old", "review_description": "it has been two week since i purchase and the button power/menu button started to have issue. g-sync is it working? don't know cause i still see break in the image where g-sync suppose to smooth it out. the menu sometime can't be read. turning it off is sometime a pain.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "198013487", "uniq_id": "51e1b50b-d95d-5e68-961d-974d2499c139", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2617", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "zeron2", "review_title": "This is listed as G-Sync Monitor - But Ghosting", "review_description": "Hi.  I purchased this monitor specifically because it is listed as Gsync Compatible, and it is verfied by Nvidia as Gsync Compatible.  Its great when its close to the refresh rate.  However, some games that when the Frame Rates go below 100, or even 120 - 144hz, there is terrible ghosting and blurriness when Gsync is on.  Why is this?  If its officially Gsync Compatible, then there should be no ghosting as according to Gsync Compatibiltiy, Gsync should work 1-240 Hz on this.    Perfect example:  In Overwatch, during the menu screen, Blizzard caps it at 60FPS.  There you can see terible purple ghosting on the characters or letters on the menu when they move, when they are on a darker background.  Otherwise during game when you reach high refresh rate to 240hz, its fine.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2620", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Bella125", "review_title": "Great value", "review_description": "[This review was collected as part of a promotion.] It's Energizer, not much more to say!  Always reliable and last a long time for me.  This is the first time I have tried the Energizer Max and so far, so good.  I'm expecting great results as with other Energizer products.  Can't go wrong with this brand!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231198339", "uniq_id": "54cb9d30-f7bf-597e-9c31-ae798aaa18e2", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2671", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "MontanaMustang", "review_title": "Powerful batteries", "review_description": "[This review was collected as part of a promotion.] I put the Energizer MAX Alkaline D Batteries in my flashlight and the light beam is strong and powerful. I expect these batteries will last longer than most batteries and I like that because I use my flashlight on a daily basis and need it to be reliable. I have always trusted the Energizer brand and it has never let me down.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231133143", "uniq_id": "72d7becf-e0ad-5d62-bafc-7925205ff8db", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2672", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Anna s", "review_title": "Long lasting", "review_description": "[This review was collected as part of a promotion.] I love the energizer brand. Their batteries always outlast any other brand that I buy. I use them in many things around my house and they have worked far longer than anything else. They work in everything from kids toys, to smoke alarms.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231129734", "uniq_id": "32699f30-3af3-5e7e-b5b3-490bdb3e7fe7", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2678", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "bRADfromMalibu", "review_title": "great price, would allow greater than 85hz", "review_description": "great price and great design but did not display 144hz without problems, tried several different displayport cables with a gtx 1070 that was not overclocked. could not push past 85hz settings on PC without red flickering pixels and artifact. RMA submitted.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "196601558", "uniq_id": "65cb8572-be3c-5959-ae2b-8fcb84b386be", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2681", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Adnls", "review_title": "Long life", "review_description": "[This review was collected as part of a promotion.] I got the Energizer MAX Alkaline D Batteries, 2 Pack and they are great. The life of them is awesome and I would definitely recommend it to family and friends and I would purchase again for sure in the future.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231092717", "uniq_id": "a043695e-72ea-59da-b731-792616b6d1f0", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2682", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Wolfy", "review_title": "Dont buy for gsync", "review_description": "Overall performance is fine; but horrible overshoot with freesync, gsync.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "While the colors are fantastic (purple is the best example of rich color on this display)", "name": " the refresh rate makes great use of my high end video card", "brand": " and the curve is set to the exact distance for optimal viewing", "sku": " and the contrast is sharp as a knife", "reviewer_name": " the ghosting was so bad while gaming and watching movies the monitor was nearly unusable for anything that has high contrast smooth motion.  Scrolling on web pages showed little to no signs of ghosting at all. But", "review_title": " motion in gaming was deeply \"\"haunted\"\".\"", "review_description": "No: I don\u2019t recommend this product", "recommended_review": null, "verifed_purchaser": "0", "helpful_count": "0", "not_helpful_count": "1 year ago", "reviewed_at": "1", "rating": "4.1605", "average_rating": "81", "reviews_count": "193524000", "comment_id": "71e5712a-62de-5b14-a654-db0340faa21d", "uniq_id": "16/01/2022 16:19:02", "scraped_at": null}, {"index": "2690", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "LaPlant", "review_title": "Good graphics n game play", "review_description": "Bought it about a month ago. Very good game. Better than last year's. That's all us fans of the game can ask for, is that every year it gets better. N thank you for that.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122668881", "uniq_id": "630d4950-a05e-53e2-bff5-2f5f31d2eec5", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2692", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Firedoglb", "review_title": "Great action!!", "review_description": "Great game.  Much high flying action.  My 13 year old cannot put it down.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122392007", "uniq_id": "f63fe09f-9c30-50f3-b8ae-998aadf08f34", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2694", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Otawo99", "review_title": "Previous WWE games were better", "review_description": "It\u2019s not a horrible game, but it\u2019s not great either.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Be refurbished but it was severely scratched and very poorly packaged. It is obviously a used product.\"", "name": "No: I don\u2019t recommend this product", "brand": "Verified Purchaser", "sku": "12", "reviewer_name": "4", "review_title": "1 month ago", "review_description": "1", "recommended_review": "3.8558", "verifed_purchaser": "104", "helpful_count": "191712728", "not_helpful_count": "7f8df1b9-8c51-59f6-85b2-4623a0c65259", "reviewed_at": "16/01/2022 16:19:03", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2729", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Trixiesue", "review_title": "The best", "review_description": "[This review was collected as part of a promotion.] I think that these Energizer MAX batteries are the best. They last longer than most batteries do. They work great and the flashlight I put them in is bright, so I know they are doing their job! I will be buying them again.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231053539", "uniq_id": "4807da67-c6ce-5995-947a-057d227f7e57", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2739", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Retriever222", "review_title": "Stands out from the rest", "review_description": "It is a great game, don't get me wrong. The Pokemon in this game is really childish, since the Pokemon don't look as good as the other ones. Also the starter Pokemon are the worst i have seen out of all the other games. The 3 on 3 Pokemon battle just ruins it, because you can just gang up on one opponent and knock him out, which ruins it. Other then that it is a good game.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "6", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17506451", "uniq_id": "970129dd-7a5d-5d8a-98eb-c74812c5a183", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2741", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "AgentOrangeTV", "review_title": "Eh....", "review_description": "Aside from the controversial multiplayer that is a mix of Halo and Call of Duty with the loadouts, which is new to the Doom series (Yes I am old school purist when it comes to the old school Doom multiplayer) but while it is quite convenient to just have DOOM on your switch on the go, the game does have to suffer a bit in the technical department so You won't get those sweet 60 frames per second which is crucial because you got alot of demons to kill and you can't have less than 60 due to all the things go on.   Also, same as the other xbox, ps4 and pc platforms, the game play is too restricting in my opinion.  also, there is no snapmap mode so you can forget about creating maps.   and lastly, the multiplayer is, again just a mix of Halo and Cod, riddled with loadouts because it's too difficult for millennial to actually find weapons on the map and the demon runes are truly unnecessary and all it is just a crutch to help a losing team win.   back in the old school days, all you had on you was a pistol and 50 rounds for it, so you'd either find weapons, armor and whatnot or else you were a dead man.  other than all that, it's an okay game on the switch.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "7", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "126981703", "uniq_id": "55ed5ec0-31ab-54f7-a314-06e951e202dd", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2746", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "TMAC412", "review_title": "DOOM DELIVERS", "review_description": "DOOM is easy to play and lots of fun. One of the better games I\u2019ve purchased for the switch...", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "125973481", "uniq_id": "831bc2b2-ecd4-58a0-96c9-1f863b7cc529", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2757", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "BostonBadBoy417", "review_title": "Best game of the 2k series by far", "review_description": "I bought this two weeks ago and I am very impressed. I am enjoying the myplayer mode immensely as well as the universe mode", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "121176247", "uniq_id": "7bd29635-6731-56c1-8dd0-01abf8d8e765", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2763", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Nurse Gina", "review_title": "Very pleased..", "review_description": "The pgone was exactly what my daughter wanted. It was in like new condition. She is very pleased with the purchase.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "5", "not_helpful_count": "3", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "191198503", "uniq_id": "9aebd358-a081-5538-8463-7e81b756bb0d", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2772", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Kellie B", "review_title": "iPhone 12 Pro 512GB", "review_description": "I received this phone refurbished and it looked brand new even though the rating was good not excellent. It has performed beautifully with no issues whatsoever. Would definitely buy another product from GameStop.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "8", "not_helpful_count": "1", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "190336482", "uniq_id": "6fc9cec8-cc30-57f8-a5d1-6ebd514cf379", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2775", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Glaredad", "review_title": "Dark Pictures game trilogy is amazing.", "review_description": "Phenomenal gameplay and story with multiple endings.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "4 months ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "187006002", "uniq_id": "32743c06-fd8d-551b-bace-e08796e0d5c4", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2786", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Jealee101", "review_title": "Works well", "review_description": "[This review was collected as part of a promotion.] Once I received these I immediately put them into a game we have that requires this size battery. We played all night 2 nights in a row and they held up pretty well! They haven't died yet, but the power doesn't seem to have went down at all and no skipping in power which sometimes happens with batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231039162", "uniq_id": "d390c864-d4fc-5ae9-8008-2c19876c152e", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2796", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "haloreachgamer", "review_title": "best game ever", "review_description": "if you like the ds than this is the right game for you", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "3", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17488293", "uniq_id": "dd0ea573-b9e6-5ec3-ba45-66ee0b58d211", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2820", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Kleptobang500", "review_title": "Awesome features", "review_description": "This title is very good  better than 2k18 bringing back the limbs system great ( don\u2019t know why he took it out to begin with ) good fun with friends and online is way fun I say way better then last year game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120827055", "uniq_id": "06b2fcb0-8d98-52fc-af63-4a11e49bc35b", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2828", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Huebsch", "review_title": "Choices", "review_description": "This game really does let you change the game based on your choices. Ran thru it in about 4 hours but a good play", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "147829164", "uniq_id": "393628c0-98b2-51fe-8d04-625a4b6f3000", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2854", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Expensiveretard", "review_title": "Great", "review_description": "I have played many pokemon games and I think this is the best yet! This game has the best graphics in pokemon ever (compared to the past pokemon games)! I have played this game every day since it came out and I think you could pick this game up and love playing this game every single day!!! If you don't believe me the buy a copy for yourself!!! \ue405", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17401309", "uniq_id": "60a161c4-45fa-57d0-90af-80265495a360", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2857", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "SilverSoul88", "review_title": "Good, but Definitely Not Great", "review_description": "Story: Right from the start, the big cinematic/anime intro is based on a character that isn't you. Yep, and the story is pretty slow at the beginning. Team Plasma is closely related to the Pokemon version of PETA: only they still use Pokemon to battle with. One thing that is new is that your rivals are actually involved throughout the game and not just in certain parts. Overall, okay, but not great. Gameplay: Pretty much another Pokemon game, w/o new Pokeballs. You've got 150+ brand new Pokemon and that's it so a big throwback to the Kanto region. I did find some of the new attacks and abilities interesting, but that's a given with any new generation. The XP system is different, too: instead of fixed amounts, Pokemon level up depending on the level gap between other Pokemon. This makes it a bit more challenging and is one of its strongest points. Miss the touch interface emphasis from HG/SS, but it's still present. The C-Gear is cool and other goodies make it stand out from the previous versions. Graphics: Many Pokemon are not very appealing or original, and the few that are can be a lot of fun to use. There is a lot more 3D influence in this game and the various camera angles and field designs are really impressive. This is another one of the game's strongest points. I wish they didn't trade so much clarity of the Pokemon designs for movement; they looked really good in HG/SS. Sound: It's an okay score, not bad or great. Some tunes are catchy, but overall okay. Interesting how certain elements in the game cause changes to the soundtrack. Lasting Appeal: Was pleasantly surprised at the quality of the game, but not blown away. Definitely a must for Pokemon fans, but a little sketchy for little kids. Though the battle system is relatively the same, leveling up isn't. I doubt that they will get through the game easily with just a Lv. 70 Emboar.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17397619", "uniq_id": "640c638b-a270-53e9-8bae-c74ca4446f7d", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2860", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "rockophilla1", "review_title": "Same game, new characters, better story line.", "review_description": "\"Every year WWE 2k premieres it's new game. \"\"New\"\" game! Only thing that changes are some characters", "recommended_review": " add a few moves and new my career story. This year's is no different. I like the story mode starting off in the Indy circuit", "verifed_purchaser": " but you really have no control over your character and life", "helpful_count": " like last years my career. And I wish they would let you customize your character from top to bottom. What's with the name Buzz and you can't create your character to match the name!!!\"", "not_helpful_count": "No: I don\u2019t recommend this product", "reviewed_at": "Verified Purchaser", "rating": "0", "average_rating": "0", "reviews_count": "3 years ago", "comment_id": "3", "uniq_id": "4.2351", "scraped_at": "1195"}, {"index": "2861", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "2amNoTouchy", "review_title": "Great game, but intense and graphic", "review_description": "Great game, but I'm probably too old to really get into it. I played a fair amount of the original PC game and I'm sure this one would grow on me since the graphics are pretty amazing and the game play is intense. But it was a bit too gory to have around my kids so I returned it and got Zelda BOTW and SMK8. If you're into fast-paced, intense shooters then this won't disappoint!!! I have to admit, my eyes just aren't what they used to be and it was tough (for me) to play on the tiny Switch screen. I can't really rate how a major gamer would see this one, but for what it's worth it was one of the best games I've ever played for what my expectations were before I bought it. I think maybe someday I'd like to buy it again, but for now it was a bit much. I'm not a huge video game player and you would need to immerse yourself in it to get the full experience. I've just got too much adulting to deal with. I can't knock the game for anything. I would highly recommend it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "124577928", "uniq_id": "92f3785b-cfad-5702-a97f-7acbc1a67972", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2877", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "dfiles88", "review_title": "DOOM is great", "review_description": "I like DOOM. If you don't like DOOM, I don't like you.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "123258546", "uniq_id": "d8c4d5aa-1212-5981-9752-2fd9f3b2baa7", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2890", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Snowdog75", "review_title": "A lot of fun!", "review_description": "Really enjoyed Until Dawn and thought this looked to be a very similar experience.  Though the storytelling wasn't quite as good as Until Dawn, it was still quite enjoyable nonetheless.  Quite spooky!  Definitely recommend a play through.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "142135317", "uniq_id": "fe240ab6-89ac-5aaf-9d54-3b22d9978c37", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2892", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "MARVEL4U2C", "review_title": "Cinematic Horror at Its Best", "review_description": "I've been craving to play another game as gripping as Until Dawn, and the Man of Medan does just that. This game is the best of gameplay and suspenseful movie wrapped into one and I cannot wait to play the next game in the Dark Anthology series", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "141636541", "uniq_id": "85a2b82a-b8fb-5697-aa6c-c4767f397d0a", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2897", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "GameGenie78", "review_title": "Man of Medan", "review_description": "Loved it!  Watching a movie where your decisions keep everyone alive, or kill some, or maybe them all.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "141157796", "uniq_id": "eb995c7c-9e5b-55f5-ae28-1dc9bf14a42e", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2907", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "kobryant3", "review_title": "Good product", "review_description": "[This review was collected as part of a promotion.] I loved using these D batteries because they last longer. I would recommend it to my family and friends. I used mine in my lantern and it runs very good. The light is bright and stays lit for longer times.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230968407", "uniq_id": "a1a90d84-c878-5ed2-96cf-181c6d4d71bd", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2909", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Cheezhead", "review_title": "pretty good but...", "review_description": "I think that its a good game but the old pokemon games are more fun. Also this is really short for a pokemon game i beat it in 3 days.i mean it was fun but too short and really easy also get white its better dont make the mistake i did", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17395969", "uniq_id": "21050925-aed4-5554-a5b2-d9a57c174573", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2911", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "palestunna", "review_title": "Cool", "review_description": "By far the best pokemon game ever. The graphics are amazing! 3-D citys are just cool.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17377625", "uniq_id": "1c6bc91d-6ccc-5caa-98ee-eabe97c7ed21", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2922", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Vanhala69", "review_title": "Very intense!", "review_description": "I bought the game a week ago and have completed the Campaign along with trying out the some of the other options. This game is very good, and keeps you on your toes throughout the whole Campaign. I wouldn\u2019t suggest if you suffer from high levels of anxiety and paranoia. Aside from that, it\u2019s a great title that really knows how to keep things interesting.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "121323698", "uniq_id": "9964746a-e85d-5df0-8a04-09f729f5477f", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2923", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "asexton2011", "review_title": "Not worth it", "review_description": "We got this game a couple of weeks ago. This game glitches so much. There are times where the superstars are wrestling and then all of a sudden, one guy is standing in the corner and the other guy is standing near by but nothing is happening. They won't move for a bit.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120290549", "uniq_id": "2e7ee69d-a28c-5582-9a29-573d012aed9a", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2950", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "HottMorgan", "review_title": "Fallout, the 4th one...", "review_description": "Fun and a good Fallout game. Could have a little better graphics...", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "155467746", "uniq_id": "6b0db150-a945-5e70-93aa-5914fd54bb23", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2952", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Forte Kosakku", "review_title": "Fallout 4 Shoots to Kill", "review_description": "Its the fallout engine and world you know so well but with a focus on building little fortified communes for people to live in which makes all that scavenging that is so addictive, worth something. Anything you can store in inventory can be used to build something however, if you have an internet connection, you can access mods for free and just have toolboxs of unlimted materials waiting at each location. Its hard to resist that and if you do that , youll sorta negate the reason for collecting anything other than ammo, weapons, armor, clothes and whatever you like to display in your home and camps. The beauty of that was that for me, it didnt ruin the game , being a god right off the bat with all my goodies was just awesome. Im here to explore and do whatever i want since the world ended. The game is a blast and its funny and smart but the characters could have been more original like in Fallout 2 or 3. Even new vegas had great npcs and this one does too just not as many. The graphics on the Pro i use are just awesome. The colors in the game are vibrant its defiantly the best fallout game in the 3d universe made so far. Worth it. Gun physics are better and the way eneimes react to gettin hit by each shot after a certain perk is got adds fantastic realism. Shooting living things never felt so satisfying.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "155037582", "uniq_id": "ebc5af7e-d2b2-5065-a71f-e74e79a04be0", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2954", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "ADadinIowa", "review_title": "Fallout 4.", "review_description": "Fallout is always a fun game and this one does not disappoint at all.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "151986812", "uniq_id": "78b8cd63-ee72-57ec-99f1-2ac4c50a110e", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2957", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Topher42", "review_title": "Fallout 4", "review_description": "Loved it. It very fun and you have options to use mods and the fact that you can have a dov is awesome", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "143989046", "uniq_id": "66982a01-bc22-5f3c-a666-e8d3c1f9b82e", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2961", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "dhall1984", "review_title": "Amazing game", "review_description": "I loved this game. Way better than Until Dawn. A must have for anyone who loves decision making movie games.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "140693974", "uniq_id": "cfeaf824-22e8-5199-a28f-88cd3b12f6ab", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2971", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Jack888888888888888", "review_title": "It doom!!!", "review_description": "It doom, you buy this to play a run and gun with chainsaws and BFG ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2976", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "RighteousRed96", "review_title": "Great gameplay!!!", "review_description": "My fianc\u00e9 and I bought a nintendo switch and bought Doom for it. The graphic and gameplay are amazing. And excellent revamp to the old styles.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "119235168", "uniq_id": "3328c629-a75c-51b7-9fcb-f9b54d65b874", "scraped_at": "16/01/2022 16:19:06"}, {"index": "2979", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "IDB207", "review_title": "Fantastic", "review_description": "Thought it would be absolute trash, being that it was for a Nintendo console, and also that it was for the switch. But it\u2019s absolutlely fantastic. It performs just as it would perform on any other console, with the PC Master Race being the exception. I actually quite enjoy playing DOOM on the switch, more than I had enjoyed playing on my PS4/XB1 12/10 would recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "118516588", "uniq_id": "da7ae1c1-8b44-524b-8046-ab51257c29b7", "scraped_at": "16/01/2022 16:19:06"}, {"index": "2982", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Josh8024", "review_title": null, "review_description": "It could improve. Its the same every year. They need to bring back create a story mode.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120095714", "uniq_id": "7f55e48d-1b41-5b97-944d-8ee63ce12e65", "scraped_at": "16/01/2022 16:19:06"}, {"index": "the annoying thing is the faint intermittent \"\"crack\"\" coming out of the left & right speaker alternatingly.  i wouldn't care because i have a 5.1 sound system", "name": " but it unmutes itself  and begins to crack again.  thought it might be the firmware & driver", "brand": " so i updated the firmware and installed the driver and it still does it.", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "and gaming!  just awesome to have such a huge view.  from fps to driving to rts", "name": " it is amazing how much i can see.  i highly recommend having a beefy gpu to run it at anything above 120hz and ultra settings", "brand": " like a rtx3090.  if you can afford it", "sku": " get this monitor.  you won't regret it!\"", "reviewer_name": "yes: I recommend this product", "review_title": null, "review_description": "0", "recommended_review": "0", "verifed_purchaser": "5 days ago", "helpful_count": "5", "not_helpful_count": "4.5319", "reviewed_at": "643", "rating": "213917867", "average_rating": "543cd2f0-adf4-53cc-95ea-62754c1b0b0c", "reviews_count": "16/01/2022 16:19:06", "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "in the image you can see i'm using pbp mode to have a beautiful bezel-less experience to have work & home up at the same time.  note", "name": " i am using a usb switch for keyboard & mouse to switch between the two computer sources.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "on the ~50% of the time where it worked as intended", "name": " hdr performance was abysmal due 10 zone edge lit dimming creating huge vertical bright spots.\"", "brand": "No: I don\u2019t recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "20 days ago", "recommended_review": "1", "verifed_purchaser": "4.5319", "helpful_count": "643", "not_helpful_count": "213293004", "reviewed_at": "9771a3b8-700d-5611-9d43-678b87d215f8", "rating": "16/01/2022 16:19:06", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3013", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Nari", "review_title": "Best Pokemon Game To Date!!!", "review_description": "When I first heard they were producing another Pokemon game, I will admit I was more than a bit....... unsure. At first glance of the new Pokemon, I actually laughed, and said this was going to be the worst game, and they should really give up on Pokemon if this is what they've got. I WAS WRONG. While some of the Pokemon are still unsatisfying compared to past Pokemon, I have truly fallen in love with this game. The graphics are impeccable, and Castelia City is the most incredible work of art and amazing graphics I've ever seen on a Nintendo DS. The only complaint I have is that the menu should be on the touch screen like it was in Heart Gold and Soul Silver, instead of the C Gear..... but I love the C gear as well so it's hard to decide how I really feel about the set up. Although, like I said, I'm sill iffy on the Pokemon, but I understand how they came to be so, since the game is largely focused on industry, the Pokemon reflect that. Trubbish and Garbodor are the only two I still really don't like. But again, Best Pokemon game to date. I'm truly in love!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17344936", "uniq_id": "8e112777-7ea8-5ffe-b0db-ebbeebade8cd", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3014", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "POKEMON GAMERS UNITE TO FOR 1 ENTITY", "review_description": "amazeing game with great graphics i love it so much it deffinetly great if your new to pokemon like i always say in with the new out with the old and so on platinum was great soul silver was amazeing and i deffinetly cant wait to get this game its been anticipated for a year now and i will be getting it some time in the next few weeks so yeah :D must have for pokemon gamers POKEMON GAMERS UNITE!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17344836", "uniq_id": "b65318f8-e2d5-5c89-832b-4458652d549e", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3024", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "JAK0", "review_title": "Length of game play", "review_description": "Wish the story line was longer, bit over all an enjoyable game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "137418430", "uniq_id": "faf32838-5bed-5e03-8944-d4360355bfba", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3025", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Nathaniel Gross", "review_title": "Still haven\u2019t finished it but it\u2019s great.", "review_description": "As you can probably tell by the review title I\u2019m still working on beating the game at the moment. While the characters in this aren\u2019t as likable in Until Dawn. This one is a lot harsher on QTE\u2019s (Quick Time Events) than Until Dawn. That said it\u2019s somewhat more intense than Until Dawn but not quite as intense as the VR Prequel to Until Dawn \u201cThe Inpatient\u201d but it\u2019s still just as unsettling as the both games. While I may have yet to have beaten the VR game and Man Of Medan all three games are great scary games in their own way.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "137214497", "uniq_id": "543f144e-33bc-58e6-bbe1-d3f53a3f0f7c", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3030", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Sluger17", "review_title": "Fun for Hours!!", "review_description": "Played the old Fallout titles and this one stepped it up a notch. Graphics are great, gameplay is great, the crafting system is awesome. There is a ton to explore.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "141964800", "uniq_id": "df6636d7-ab7a-5538-9f10-921d23cb91d5", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3037", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "JAHood", "review_title": "Fallout 4", "review_description": "Good story, very bloody, too much cussing for my taste, but overall very satisfying to play.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "141042890", "uniq_id": "82e62021-80c8-5975-8cf5-fa967b02df04", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3068", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Jmiller", "review_title": "Makes my flashlight brighter", "review_description": "[This review was collected as part of a promotion.] I had just replaced the batteries in my flashlight with an off brand and wasn\u2019t thrilled with the light I was getting so I replaced the batteries with these Energizers. What a difference. Much more light output from these batteries. I will be sticking with these for my flashlight from now on.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230912794", "uniq_id": "4ab31aee-ee2b-53f2-8b43-dbb7a1c3abf7", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3071", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "RatchetFan7", "review_title": "The best pokemon game by far", "review_description": "Pokemon black is the best pokemon game made so far. I like how the graphics are new and everything seems better than the last games before this one. I also like how there are new pokemon I have not yet seen before. I liked how they mixed things up a bit because usually the first gym is always a rock type gym, but they changed it to a battle between the type you picked (grass, fire, or water) and what it's weak against. I would recommened this game to any pokemon fans out there and even people who may not like pokemon that much.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "21", "not_helpful_count": "11", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17322510", "uniq_id": "85221023-c01b-583b-82ab-fa2191479584", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3093", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Lmjason2", "review_title": "Very good game.", "review_description": "Fallout is my favorite series. Fallout 4 is not as good as new Vegas or 3, but it\u2019s still very good.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "140277917", "uniq_id": "bf71351b-692e-5ece-8a6d-eceaa1421fbd", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3103", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "SYMPATHY 4NO1", "review_title": null, "review_description": "I love this game.Straight to the point,shoot and destroy everything! !ANARCHY", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "115632335", "uniq_id": "da9f805b-79e7-591f-93b0-f90a3949bb31", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3112", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Jose", "review_title": "I'm still in awe every time I turn it on!", "review_description": "[This review was collected as part of a promotion.] I love this monitor! I bought it for working from home and it's great being able to have email, work apps and a chat app all up on the same screen. While I'm not working I use it for gaming and the immersion in the game is awesome with all the real estate.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "28 days ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "213028357", "uniq_id": "efc8cc04-1307-5b82-86c1-c13a7331e77e", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3121", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Brookkynn610", "review_title": "Go to brand", "review_description": "[This review was collected as part of a promotion.] Energizer is my go to brand for batteries. They never let me down. Long lasting battery life for every day products. My automatic garbage can used D size batteries and they last months with multiple uses a day! Very impressed!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230907469", "uniq_id": "69543750-d48a-50f0-9141-1d76dc3f3c91", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3136", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Wpowopo", "review_title": "It was ok", "review_description": "Look, I bought this game in Japanese, and it just was ok, I played it alot because i wanted to playthrough the game just for fun. The graphics were great and there wasn't alot of challenge to the game. I mean come on, I Caught the legendary on the box in a pokeball on my first try. this game was not hard but fun altogether. I liked the basics that it had in all of the other games but it's just all the same. I will do a speed run of the game when it comes out so i might put that up on my youtube page but i just don't think it's any different than any other pokemon game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "7", "not_helpful_count": "12", "reviewed_at": "11 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16466841", "uniq_id": "9bd4b7ea-1988-5270-93c7-dbf32d544a56", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3143", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Alek Cramer", "review_title": "A game", "review_description": "A very strong play through and pretty scary be careful of what you choose cause people will die good luck", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "136269872", "uniq_id": "3f8dc42b-a045-584b-a20b-fd78c07c01bb", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3148", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Sar A", "review_title": "Great but wish there was more", "review_description": "Great game. I love the graphics. It has a nice historical theme. I always enjoy a game that gives you options that can make a difference in the outcome. The characters have very distinctive personalities. There is also a cool feature that allows you to play the game with up to five people. Each player plays one character and each character has their own episode. I just did not like that the game was so short and it is obvious what is happening from the beginning. There was not much mystery.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "136176406", "uniq_id": "54c239a8-808f-5789-8587-67ad69f318c4", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3149", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "megasnorlax", "review_title": "Excellent Port", "review_description": "Great fps game for all Switch owners. Panic Button did an excellent job on porting this game to the Nintendo Switch. As a Nintendo fan, it's great seeing a high-end game like this on the Switch, as it proves what the system could do. If you're a Switch owner looking for an action-packed shooter, look no further.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "115351693", "uniq_id": "9b954fd4-6018-56b6-86f3-7e5e6a2cc119", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3170", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Suli", "review_title": "Great, with headphones!!", "review_description": "\"[This review was collected as part of a promotion.] Xmas present from my pops, love it!! It blows my old \"\"tv\"\" out of the water. Perfect for playing my games on. Only complaint I have with my monitor", "recommended_review": " I have to use my headphones. Without headphones", "verifed_purchaser": " I get no sound.\"", "helpful_count": "No: I don\u2019t recommend this product", "not_helpful_count": null, "reviewed_at": "0", "rating": "0", "average_rating": "29 days ago", "reviews_count": "3", "comment_id": "4.5319", "uniq_id": "643", "scraped_at": "213010990"}, {"index": "3174", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Slas", "review_title": "This product is amazing , fantastic", "review_description": "[This review was collected as part of a promotion.] Using it often on my relaxing time, playing game filling myself into the action., beautiful specs colors , very attractive. Will spent my day playing and enjoying it.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3176", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Shaky", "review_title": "This product is great for my games", "review_description": "[This review was collected as part of a promotion.] This monitor is great for gaming really like to curve. Helps keep everything in visual site.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "29 days ago", "rating": "4", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212987386", "uniq_id": "4394929d-68eb-59be-8e2b-a4593ab1d5a2", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3182", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "anne117352", "review_title": "Great", "review_description": "[This review was collected as part of a promotion.] These batteries are huge and the only thing that I really use them for now for my heavy-duty flashlight. These batteries are really great, and they have a great  battery life. It is also very powerful and has yet to run out of charge.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230881266", "uniq_id": "5e1a6953-cf95-5bcd-97e7-6c51c27b50b0", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3187", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Warrent23", "review_title": "Very long lasting", "review_description": "[This review was collected as part of a promotion.] These energizer Max alkaline batteries last a super long time. We are using them in one of our kids toys that never gets turned off and they just keep going and they work as good as they did on day one. No problem with corrosion at all either.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230869585", "uniq_id": "be914f52-55fc-568f-9387-3a0a1da1f160", "scraped_at": "16/01/2022 16:19:08"}, {"index": "We always keep extra batteries around.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3190", "name": "Not Fast, Not Furious T-Shirt", "brand": "Geeknet", "sku": "222575", "reviewer_name": "Mac sauce dirty", "review_title": "All the right things", "review_description": "Got a compliment at the grocery store, truly a magnificent shirt!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 months ago", "rating": "5", "average_rating": "4.56", "reviews_count": "25", "comment_id": "184873545", "uniq_id": "d6fd8f22-d2dd-5152-b157-de7111c595c5", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3195", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "thegamingmaster101", "review_title": "Best Pokemon Game Yet", "review_description": "This game is going to be amazing! I played the Japan game version and it is amzing!! I heard this game is coming out in America in eather march or april! Can't wait!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16398098", "uniq_id": "5233350a-11c2-5afd-bccc-880192f070e7", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3207", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Icypyro1997", "review_title": "Amazing game", "review_description": "Definitely a scary game with lots of jump scares. Love that my choices are like a butterfly effect for the whole game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "136146232", "uniq_id": "7a30ab2e-288b-50f6-8283-0fdce0c74799", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3218", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Brittcwood89", "review_title": "Has awesome features great picture", "review_description": "[This review was collected as part of a promotion.] I watch alot of movies ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3222", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "jstancil", "review_title": "10-Nov", "review_description": "Classic. So much content and so little time to do it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "136941650", "uniq_id": "1b9e44f2-358a-5c25-a3b8-2e2854d2975a", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3228", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Vanguardprime", "review_title": "Invested", "review_description": "It\u2019s a game you don\u2019t want to put down. I was skeptical because I don\u2019t usually go for survival games but this one has enough plot that keeps me invested for 100+ hours.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "131935591", "uniq_id": "e9a28f27-3f5d-55fd-97c3-96762b81598e", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3231", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Skull roc", "review_title": "Great game!must have for switch!", "review_description": "Doom ! Awesome just like the old one 're done revamped and perfect for the switch !", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "114320641", "uniq_id": "02c09c44-eec8-5c12-90d8-33cc9f7ab433", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3233", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Gunloon", "review_title": "The best feature of doom is the multiplayer", "review_description": "I bought doom about a month ago and have been loving the multiplayer. Fast pace arena style gameplay actually having  to find armor and health is a challenge forcing you to use different tactics when engaging enemy players. One well armored player can easily overcome the odd of fight two opposing players if they didn't take the time to grab armor. Another fun challenge is to fight for survival just to grab one of the power weapons when eryone knows the location and when it is going to spawn.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "114241531", "uniq_id": "316e66f3-01fa-5606-8728-15c3a3a7edae", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3237", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "SuzDragon", "review_title": "Best Creature Game out there", "review_description": "Great game! Glad it came to the Switch w/ excellent content & graphics!! So glad I purchased this for my son!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "6", "not_helpful_count": "0", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "109685670", "uniq_id": "d128ef1d-ff19-5a79-bd62-3abd198e82d8", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3255", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "zekrom", "review_title": "CAN NOT WAIT!", "review_description": "I already reserved both black/white and i cant wait!!!! now there is 649 pokemon!!!!! that is too much but i dont care. i love pokemon! its coming out march 20! 4 months to go.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "3", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16296132", "uniq_id": "a84fa6a5-1290-579e-9fad-964c045d485d", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3256", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "new pokemon", "review_description": "theres millions of new pokemon in pokemon black . i like feraligatr", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "4", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16295162", "uniq_id": "309210e2-fdfb-59c9-b51f-1750d012d41d", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3261", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Mike", "review_title": "Huge", "review_description": "pros:", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "* my eyes no longer need to re-focus to switch monitors", "name": " i've got one giant continuous screen that acts like 3 monitors", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3267", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Camper48", "review_title": "Amazing Tv", "review_description": "[This review was collected as part of a promotion.] I use this monitor to play my video games all night before bed let me tell you this is honestly one of the best monitors I've used you could never go wrong with Samsung I have a whole line of Samsung products the best.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212904968", "uniq_id": "ebac0536-0890-521b-b5a4-f7c33a84b8ea", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3290", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "SoggyBananaPeel", "review_title": "Didn't disappoint!", "review_description": "Very nice game that you can play with other people!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "135826036", "uniq_id": "d38376a1-2aa7-5d80-ad83-b62848522f1f", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3299", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "mskitty", "review_title": "Powerful", "review_description": "[This review was collected as part of a promotion.] We go through batteries in our home like water. I have the Energizer Max D-2 pack and boy did I need them. We keep flashlights in every bedroom plus under the sink for emergencies. During a recent storm, my flashlight died and of course no spare batteries for it. Hence, the Energizer D size are now in my flashlight. Powerful bright light and they have a 10 yr. shelf life. Energizer is the ONLY brand we use so having a durable, strong, long lasting battery is a necessity. Thank you Energizer, the name alone means quality products. Will be stocking up on more of all sizes!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230843356", "uniq_id": "ad4d17bd-ac23-5658-8f92-77fb31b6172a", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3326", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Aj808", "review_title": "Great resolution", "review_description": "[This review was collected as part of a promotion.] It appears to be up to par with the best gaming monitors available.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212876145", "uniq_id": "ac3e6d2f-4b9a-5085-a9d3-cea7db1cf530", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3329", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "ljandy21", "review_title": "For the younger folks", "review_description": "My grandkids enjoy this more than I. My reflexes are not what it takes to play this game. I just plug away at it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "130669315", "uniq_id": "91f47a74-073b-5e60-9c27-b150849ed59d", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3350", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "KatarinaT", "review_title": "Great Batteries!", "review_description": "[This review was collected as part of a promotion.] I love the Energizer MAX Alkaline D Batteries.  They are long lasting.  I am glad they come in a 2 pack because its rare for me to need D batteries.  When I do need D batteries, I usually only need 2 at a time so this is a perfect pack for me.  I love Energizer batteries.  I highly recommend these.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230806566", "uniq_id": "cf14f174-fb97-5102-a7fe-ea2ac9e3ed5a", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3358", "name": "Spirit of the North - PlayStation 5", "brand": "Merge Games", "sku": "232541", "reviewer_name": "Noiser", "review_title": "Boring game. Sold it a day later.", "review_description": "Weak game. Graphics weren\u2019t even that spectacular, and the gameplay was weak af. No clue what the objective was, had to go wandering around for more time than I would have liked to get to the next stage, which never feels like a good enough payoff for the time invested. Terrible game, sold it after 1 day.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "12", "reviewed_at": "2 months ago", "rating": "1", "average_rating": "2.8", "reviews_count": "5", "comment_id": "190699599", "uniq_id": "46c4d72d-a760-52fa-a8de-edbf5f965255", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3375", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "LetsGetIt", "review_title": "Colors and performance", "review_description": "[This review was collected as part of a promotion.] Mostly for gaming, wide be angle, colors are even better then most monitors.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212860414", "uniq_id": "dad20334-033d-5731-9514-36e1065e9423", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3408", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Joshua D", "review_title": "Scratches that Nostalgic itch.", "review_description": "Fantastic quality. It is a perfect recreation of the classic Xbox controller (with some improvements) The triggers feel more modern, the thumb sticks are grippier, the shoulder buttons feel as good as they could. It's silly but the home button screen animation is very satisfying to watch every time you press the button. Even though I have small hands I really love this controller. I can't explain it. It's just comfortable.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "129464194", "uniq_id": "c9d64583-5ddf-588e-b84d-6e39002f01a1", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3412", "name": "Microsoft Flight Simulator", "brand": "Microsoft", "sku": "220054", "reviewer_name": "See you on the moon", "review_title": "Fun flying game", "review_description": "So realistic I didn\u2019t know the what the controls were for my joystick and I crashed 5 stars!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "5", "not_helpful_count": "3", "reviewed_at": "4 months ago", "rating": "5", "average_rating": "2.4", "reviews_count": "15", "comment_id": "186993855", "uniq_id": "5fff6e9e-ae59-5158-a0f4-451bbb23a7b7", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3427", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Ashe B", "review_title": "Decent start to new series", "review_description": "Littles short and clunky but entertaining none the less.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "133769640", "uniq_id": "a7f53f0c-c0c2-579b-bcbd-50e7acfbac13", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3430", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Customer of gamestop 4 li", "review_title": "I Love this game", "review_description": "Great game..great story highly recomend it to any one who loved until dawn..clunky controls but you will get used to them..multiple ways to play..bought for my daughter and she got scared by it 5 out of 5", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "133104472", "uniq_id": "5ca67199-ffd6-594e-a474-7f1cdb8a70e0", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3447", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Joe h44", "review_title": "Good game", "review_description": "Very fun game, plot is very good, no complaints at all.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "127664043", "uniq_id": "b227c817-cadd-5ed3-9ccb-489439342828", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3457", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Slimdtylz", "review_title": "TBT 360", "review_description": "Awesome.feel. cant stoo using it over my wireless.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "127411070", "uniq_id": "5e29d020-2e16-5ea9-bba8-948d1d14dbb0", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3459", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Halo gamer", "review_title": "Its ok", "review_description": "Bumper buttons are to far apart from triggers makes for difficult gaming", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "5", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "126755095", "uniq_id": "05bad6e3-ff07-5d74-9d89-8aadbc391fdf", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3499", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "ElJefeHiro", "review_title": "Its Fallout", "review_description": "Love the game. Everything about it is good. would have given it 5 stars but didnt rlly like the building aspect.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "126486648", "uniq_id": "6adc59ea-b4d1-5240-a9e3-a91226f96ca9", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3500", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "lucruss23", "review_title": "Disappointing", "review_description": "It's a fine enough game, but without mods it's very bare-boned. Bethesda could've done a lot more with it, in my opinion, as it's definitely the most aesthetically-pleasing Fallout. Unfortunately, it's also really boring after a couple of playthroughs. It's an important game to me and my teen years, but I'm afraid I have to give it a three out of five.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "126413722", "uniq_id": "0369cc1c-8fbd-5cb6-b703-9331d49535f1", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3502", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Twimms", "review_title": "Hours of fun !!", "review_description": "It was good but I\u2019m still a obsidian fallout fan but was still very fun", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "126192989", "uniq_id": "f027d68a-1b2f-5bd7-aded-cbb0a29344b8", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3514", "name": "SnipperClips Cut Out Upgrade", "brand": "Nintendo", "sku": "159078", "reviewer_name": "Mansonr84", "review_title": "Great New Features", "review_description": "I had some money left on my eshop and I decided to purchase the update with it. It turn out to be pretty cool.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "8", "not_helpful_count": "3", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "5", "reviews_count": "1", "comment_id": "112964957", "uniq_id": "9eabf8d4-019e-5031-a352-3bb5a5ea0307", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3516", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Barb65", "review_title": "Great Batteries!", "review_description": "[This review was collected as part of a promotion.] I finally found batteries that last for a long time.  I used them for camping and for electricity outage.  They are still working great and the light is much brighter.  I will be using this brand from now on. Will recommend these  to all my family and friends.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222839493", "uniq_id": "cac1eb22-89a2-5f2a-8bbd-35cbc22e4922", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3517", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "ktracer68", "review_title": "Long Lasting for SURE", "review_description": "[This review was collected as part of a promotion.] When I received the 2 pack of the Energizer Max Alkaline D Batteries we getting ready for a week long camping trip. Grabbed the small portable radio an put these batteries in. The radio played 24 hours daily for the week an are still going strong. Energizer wasn't my go to battery. These put other batteries to shame! Energizer batteries are now my GO BATTERIES.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222833332", "uniq_id": "18d8f1f3-6c24-58b3-b3a2-2ea56549d60b", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3521", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Bargain_mom_3", "review_title": "Long lasting", "review_description": "[This review was collected as part of a promotion.] The batteries are great. Love Energizer batteries. They are long lasting. I put them in my small water fountain outside a month ago and they are still working. Great product. I would not use any other batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222832804", "uniq_id": "89c93722-06eb-5b6e-92f7-1624cece9307", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3529", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Mohamed", "review_title": "Great monitor", "review_description": "[This review was collected as part of a promotion.] This monitor is perfect in every aspect, it has a great color accuracy, high refresh rate for gamers, and aslo very wide for multitasking", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212797744", "uniq_id": "8dfcbad1-0294-5aff-9eb2-bcfe82e82d58", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3539", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Dethklau", "review_title": "fallout 4 review", "review_description": "Fallout 4 has great graphics. It also has an interesting story line. The best part about it is the customization available for weapons, armor, power armor, and bases.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "125804528", "uniq_id": "ed6cb487-5745-50be-9068-ea0065250d6a", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3548", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Mgraham5", "review_title": "Long lasting", "review_description": "[This review was collected as part of a promotion.] I have an old emergency light that requires D batteries. I had a bad thunderstorm and our power went out. I used these batteries and Wow, this light worked great for hours and is still strong when I shut it off.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222799714", "uniq_id": "d14cb4fb-b5f7-5747-95a0-a7ea24a6a6b0", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3549", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Big Bill", "review_title": "Good quality", "review_description": "[This review was collected as part of a promotion.] Seems to be good battery put in my flash light I use around the house have not had them long enough to see what kind of life that they have but so far my light seems as bright as when first installed time will tell", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222795434", "uniq_id": "0b1e0de9-8a5a-58c8-8dd3-de913a9086f8", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3556", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Imperatritsa", "review_title": "This is an amazing Monitor!!!", "review_description": "[This review was collected as part of a promotion.] I use this monitor for work and streaming movies and my children use it for streaming movies, playing games and school work. This Monitor is insane! I am so happy with my purchase. Just make sure you have all the necessary cords i.e 4k. I tried to use 1080p and the quality was good but when I upgraded to the correct equipment Wow the difference. Overall installation was easy. I am so glad I went with the Samsung for overall quality and price you can not beat this Monitor. I have had it for about 2 months and I have not found a better deal. I have never been so sure about a purchase and glad I didn't search and wait for something else. Right now the Monitor is in my bedroom but I'm thinking about moving it to the Family Room and getting a second one for my bedroom. Thank you Samsung for providing quality at a price my family can afford.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212781704", "uniq_id": "7cbcd65c-5706-5a6f-abc9-5a8dba6979fe", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3600", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "YungSweet", "review_title": "Best I ever used", "review_description": "[This review was collected as part of a promotion.] I used the monitor for gaming and it have excellent pixle frame quality 10\\10", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212720369", "uniq_id": "6edcc1e7-fcd1-5ee6-a424-cb938cb162ba", "scraped_at": "16/01/2022 16:19:13"}, {"index": "The curve edge display is two perfection\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "5", "recommended_review": "4.5319", "verifed_purchaser": "643", "helpful_count": "212719409", "not_helpful_count": "0ff305cd-8d20-50a0-9014-7da961c3786e", "reviewed_at": "16/01/2022 16:19:13", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3605", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Oregomcj2", "review_title": "The best monitor.", "review_description": "[This review was collected as part of a promotion.] Gaming and Streaming, The best monitor of all The only thing is the price, but it is worth every dollar.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212715277", "uniq_id": "20f0757b-bc9a-5672-9238-35451556baa5", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3612", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Vlov", "review_title": "Great Collectible", "review_description": "This is my favorite version of the duke controller! I have 2 black ones and thought this version was only limited to the people that developed it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "117936679", "uniq_id": "722d4d2a-6e1b-5622-b6e6-67c437759049", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3614", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "TestudoENumen", "review_title": "Blast from the Past", "review_description": "I looooove this controller. Granted, I might be biased, as this is my favorite controller of all time. This recreation is so great. I especially love that the black and white buttons are still here, and they are extra buttons for functions.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "117848281", "uniq_id": "35cd04d5-d837-57ac-878e-c3fc38ea2963", "scraped_at": "16/01/2022 16:19:13"}, {"index": "Not for people with small hands ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3616", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Valkron1", "review_title": "Just got my green Duke!", "review_description": "I just received my green Duke controller today. My first game loaded up was Halo: Combat Anniversary. Ahhh, the memories! This is how this game was meant to be played if you have big hands. I love it and highly recommend it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "117163901", "uniq_id": "4e631204-df48-5880-ba83-d22e51a4e5d1", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3652", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "BK_VA", "review_title": "Even more of what. I enjoy!", "review_description": "I am a Fallout fan and when I comleted the last two entries, I was hungry for more. Fallout 4 provides a familiar feel to its predecessors, but it is all new locations tied to a compelling narrative. I play on a standard PS4 and the graphics are wonderful, the controls are smooth, and sound is engaging.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3656", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Jdixon92", "review_title": "Refreshing", "review_description": "After going a long time without a system, I needed a game to reintroduce me to quality gaming and this was it", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "123439844", "uniq_id": "7dffca28-ea04-5af0-b865-f4eb2be74f0d", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3671", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Lovebird", "review_title": "Great", "review_description": "[This review was collected as part of a promotion.] I have have no issues with the batterys . . .  Chanfed out some generic batteries on my flashlight and these are going strong as expected.   I expect these batteries to continue to work and outlast out perform the generics", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222655454", "uniq_id": "9d6b852c-e286-5497-b0f0-97b115cacaf3", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3689", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Older than 30", "review_title": "Dungeons and Dragons maxed out.", "review_description": "I just started playing a month ago, and at this point I hate having to tend to settlements. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Confusing right?  ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3702", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "deene", "review_title": "Battery", "review_description": "[This review was collected as part of a promotion.] I really enjoyed getting these batteries, they are a reliable product. I always buy this brand. They last along time and are very dependable. I use them in my flashlight and I can always count on my flashlight to be working when I need it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222649605", "uniq_id": "ccbf9524-8156-5d1d-a8b1-43ad5fa87baf", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3712", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Sonni", "review_title": "Great product", "review_description": "[This review was collected as part of a promotion.] I was worried in the beginning but it turns out to be a great monitor.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212663925", "uniq_id": "343895d8-69ed-588c-9c50-e7a5c0d373fb", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3734", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Courdles", "review_title": "Stronger than ever", "review_description": "[This review was collected as part of a promotion.] I got to try these Energizer Max Alkaline D batteries and they work really well.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3749", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "SamsungGuy520", "review_title": "Awesome display!", "review_description": "[This review was collected as part of a promotion.] This monitor is the best gaming monitor I have ever used! The quality of it is so insane, I feel like I'm five years (or 10 years) into the future! This is a must buy!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212627401", "uniq_id": "bc117efc-97c9-5273-8ff8-995885b33672", "scraped_at": "16/01/2022 16:19:16"}, {"index": "3805", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Timbojack", "review_title": "A good battery", "review_description": "[This review was collected as part of a promotion.] I use these for my mag light, especially when we go camping.  Honestly, I haven't noticed that the brightness has dimmed at all after several hours/days of use.  Usually after a few weekends of camping, it time to replace the batteries.  So far so good.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222608623", "uniq_id": "2b5415fc-9637-54b6-b5f6-0ce3d4ccc264", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3829", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Nmeats", "review_title": "Sicc", "review_description": "Bought about 2 weeks ago. My first shot at the fallout series, have loved every second of it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "118558358", "uniq_id": "7ea85f26-d3c0-52c3-9008-19381574c50a", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3833", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "LaLady", "review_title": "To the Max!!", "review_description": "[This review was collected as part of a promotion.] I love these batteries to the max! The long lasting feature of these batteries is the best.  I live in hurricane central and also the power outage capital, I can't ever be caught without some of the max alkaline batteries on hand. I use these in my flashlights, boombox and other portable devices. Energizer MAX batteries are the powerhouse for your battery needs. Don't be caught without them!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "221944936", "uniq_id": "e0eda68a-e635-510f-b525-aeb7206be826", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3841", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "icyblue357", "review_title": "Long Lasting", "review_description": "[This review was collected as part of a promotion.] I got my Energizer Max D Cell batteries, and used them in my flashlight. I had to change an electrical light socket, as it had a pull chain that broke, on off. I use the flashlight with the Energizer Max D Cell batteries, and dismantled and reinstalled a new socket in 20 minutes. I used the batteries the whole time without the light dimming or the batteries running down. I use a flashlight a lot and really think these batteries will last through the year.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "221846145", "uniq_id": "e3ec6e35-8454-5645-b6d3-85d839b6bb9e", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3845", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Toya22980", "review_title": "Dope and fire n awesome.", "review_description": "[This review was collected as part of a promotion.] Home and do my own fun gamer hook up any game hook.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212556431", "uniq_id": "04c04e94-ba6c-55eb-a9bf-09c89657e950", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3847", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Devinguy84", "review_title": "Extremely impressive and unique", "review_description": "[This review was collected as part of a promotion.] I use my monitor for gaming. And i have to say that i am absolutely impressed. Especially how it works around you and makes you feel as if you are part of the game. A truly unique feeling to say the least.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212549369", "uniq_id": "2d8935b3-91ff-5589-aa91-1e3e3659c688", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3851", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "chicken", "review_title": "great but some issues", "review_description": "[This review was collected as part of a promotion.] it is a good monitor and its big. But it doesn't fit most apps so there's no point.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212536817", "uniq_id": "844bc3f6-11bd-525d-be2e-126dd7a7c152", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3852", "name": "NBA Boston Celtics Larry Bird Plush 10 in", "brand": "Uncanny Brands", "sku": "224841", "reviewer_name": "Mike R13", "review_title": "Larry Legend", "review_description": "Bought this as a dog toy. If GameStop sold pet supplies, I would definitely buy them. Until then, I'll just repurpose human toys.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 months ago", "rating": "5", "average_rating": "5", "reviews_count": "2", "comment_id": "187546025", "uniq_id": "308023c3-a981-5d14-b5db-2b16ec6d57ea", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3857", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "wastadave", "review_title": "super fun for everyone", "review_description": "my 13 year old daughter has been playing it after we re-purchased it from when my 2 boys finished it several times.  She loves it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "118292355", "uniq_id": "33e84761-f4da-5c8c-ad17-2aa9f72a4242", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3866", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Melanie", "review_title": "Energizing", "review_description": "[This review was collected as part of a promotion.] These batteries are long lasting. I have a flashlight that I use them in. The light is very    bright and it lasts quite awhile. As usual they are a bit heavier than the A or AA's. But for what I need them for it's worth it.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3871", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Hello24", "review_title": "Essential!", "review_description": "[This review was collected as part of a promotion.] It's always a pain running out of batteries, especially the ones that drain so fast. These last a long time. Very happy with it. I do prefer the rechargeable ones though, wish they made them in this size. I'm all about sustainability right now.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "220150320", "uniq_id": "38764733-8ec2-5125-aa57-a7c38a8119b2", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3873", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "MissPyggy", "review_title": "Works as expected!", "review_description": "[This review was collected as part of a promotion.] It's hard to write a review on batteries that aren't used a lot.  I got these batteries for a flashlight.  We don't use the flashlight very often, but so far, these batteries are working great, as I expected and the light is nice and bright.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "218914050", "uniq_id": "0d30a8a6-dbae-5cd2-925b-4dabc957ad4b", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3891", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Mol1119", "review_title": "Great overall", "review_description": "The Fallout series is one that takes you into a world of a post-nuclear apocolypse where you fught to stay alive in an unfprgiving world. Every choice you make determines do many factors in the game. You can be good or evil. You can have companions that you can romance; each with their own well written tragic backstory(my personal favorite being hancock and Nick Valentine).In fallout 4 you are pre war and you fight to find your missing son, stole from you while you were unable to do anything.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117842732", "uniq_id": "9b184fe5-bbec-5a36-a696-db57957f9fe3", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3892", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Steven AH", "review_title": "Amazing!!!!!", "review_description": "Bought this at the Kirby Dr. Location and the manager was very helpful on how to play. His name was Adam or Josh? He had long hair. He is awesome and made this purchase awesome.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117733504", "uniq_id": "cfba0894-bcab-591c-b932-fe9c3ee1eb60", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3897", "name": "PlayStation X Like It's 94 T-Shirt", "brand": "Geeknet", "sku": "211057", "reviewer_name": "LadyOozaru", "review_title": "Comfy", "review_description": "Shirt is grey not black but I like it. I got it several sizes too big, so I can sleep in it. It's very comfy.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 months ago", "rating": "5", "average_rating": "4.614", "reviews_count": "57", "comment_id": "187554126", "uniq_id": "b5530656-fa7b-543d-b212-5d15ba2ae7a8", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3898", "name": "PlayStation X Like It's 94 T-Shirt", "brand": "Geeknet", "sku": "211057", "reviewer_name": "Hirioki", "review_title": "Lies and deceit.", "review_description": "I\u2019ve been notified that my package was \u201cdelivered\u201d. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3901", "name": "PlayStation X Like It's 94 T-Shirt", "brand": "Geeknet", "sku": "211057", "reviewer_name": "Nelly91", "review_title": "Nice shirt overall good deal", "review_description": "Nice shirt my fiance and brothers liked it, wrong color", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.614", "reviews_count": "57", "comment_id": "181628270", "uniq_id": "d68eb50c-2fb5-529f-8b57-f89285c4e14a", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3909", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Margo", "review_title": "Work great", "review_description": "[This review was collected as part of a promotion.] These batteries work great so far. I go through a lot of D batteries for my bubblers for bait buckets. I find that the name brand last longer than the cheaper ones. Hopefully I\u2019ll get a good long use out of these MAX batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "218148078", "uniq_id": "602c164e-e334-57b0-9f85-2956a9f3acbe", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3911", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Mar-75", "review_title": "Awesome brand", "review_description": "[This review was collected as part of a promotion.] What can I say that hasn\u2019t already been said about this awesome brand. This is by far my favorite brand of batteries. Whatever I use them in they last a long time. My flashlight are always super bright with these batteries. I rarely have to change my batteries and always shocked at how long they actually last. This will continue to be my favorite brand. I recommend them whenever I can.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "218093776", "uniq_id": "2e22d178-e540-58be-9492-a2b7f78cb1c2", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3926", "name": "PlayStation X Like It's 94 T-Shirt", "brand": "Geeknet", "sku": "211057", "reviewer_name": "Anonymous", "review_title": "Playstation Nostalgia", "review_description": "Just like the picture, brings back the nostalgia feel if the 90's. Size was exact", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.614", "reviews_count": "57", "comment_id": "163738447", "uniq_id": "a573791a-efed-5ca4-847f-bd69c76129e5", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3932", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Thewitchdoctor", "review_title": "Amazing game", "review_description": "I'm extremely satisfied with this game. I recently got a ps4 so after playing fallout 3, and new vegas for the past many years my experience with this new game and console is mind blowing", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117069152", "uniq_id": "fb22b464-a876-57d3-aaee-a894ba7c1365", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3935", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "SiR_PANDA82", "review_title": "Great game", "review_description": "This game hasn't came out my console at all. Very good game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117024576", "uniq_id": "c9421411-9583-5079-a5c5-4f42c6f25d84", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3942", "name": "Funko POP! Games: Halo Infinite Master Chief", "brand": "Funko", "sku": "216351", "reviewer_name": "Sch3p", "review_title": "Poor shipping packaging", "review_description": "Recieved the pop in very poor condition. Gamestoo did not do a good job at all with packaging. No bubble wrap or foam wrapping what so ever to help protect it during shipping.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "4", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.4096", "reviews_count": "83", "comment_id": "171393426", "uniq_id": "c61865b2-d8e3-54ff-940d-d4b3dbf7ba24", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3958", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Dilla", "review_title": "Great game.", "review_description": "This game does not quite stand up to 3 or NV, but it is a great game in it's own respect.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "116714731", "uniq_id": "8cbc5f78-99ec-52da-bc4c-9974c109fe76", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3968", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "lynellc", "review_title": "Lasts long time", "review_description": "[This review was collected as part of a promotion.] I have one of those big, heavy mag lites that take so many batteries that its almost not even worth it. But using Energizer MAX, they last a bit longer than all the others, and it doesnt cost a fortune to replace any batteries, no matter the size.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217924590", "uniq_id": "a6d76c00-1983-5557-adc0-9bf60c228b30", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3976", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Creator300", "review_title": "Detail is crazy good", "review_description": "I have never played fall out and I rented it fell in love had to buy it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "115588315", "uniq_id": "c261d4a5-fc4a-53a3-8fc7-b4fa7f8efd59", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3978", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Jbo89", "review_title": "Great fun can play it for days!", "review_description": "I had this game before traded it in too soon and had to get it back so I would be ready for the new fallout 76 great buy.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "115540019", "uniq_id": "c7c2436e-eff0-5b01-a6de-1b56c7ec15e5", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3979", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Big Daddy T", "review_title": "The Fallout series", "review_description": "Literally some of the best games I have ever played..", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "115531075", "uniq_id": "2170c6f7-9c56-52fc-baa2-93d7097e4b03", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3986", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "DebbieC8118", "review_title": "Long Lasting", "review_description": "[This review was collected as part of a promotion.] Batteries are a staple in my household.  Having a toddler son requires many batteries for many toys.  Regular batteries run out way to quickly.  These alkaline batteries have lasted twice as long so far and are still going.  I will not purchase another brand/style battery again after using the Energizer Max Alkaline.  The absolutely longest lasting battery I've ever used.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217868849", "uniq_id": "aad9d90b-0579-5a59-acfa-a593d4d16c9e", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3989", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "The Greg", "review_title": "Long shelf life", "review_description": "[This review was collected as part of a promotion.] So my fianc\u00e9 is notorious for buying things before we need them. I would buy batteries when the other batteries died. So to have these when I needed them was great. I was impressed that the date on them was almost ten years. I put them in my flashlight and I should be good to go for a few years with normal use. We have several flashlights, and will replace with the energizer max when the time comes.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217852061", "uniq_id": "5dce9946-accb-57c5-adef-de57414cc58a", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3991", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Beth80", "review_title": "Still going", "review_description": "[This review was collected as part of a promotion.] We used these in our light all weekend while camping and left them on all night. The batteries are just as strong as when we first put them in. I will definitely ne buying more of these batteries really soon for our other flashlights", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217839129", "uniq_id": "b8f92298-a357-5454-b462-ce0c04c9d648", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3999", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Ish28", "review_title": "This is amazing monitor has great features", "review_description": "[This review was collected as part of a promotion.] This monitor is amazing especially if you like to multitask I recommend anyone this monitor if you like to Stream, for Work, School, Gaming or for personal use has amazing feature to do everything in one monitor", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212470298", "uniq_id": "79937712-2ef6-5047-801c-25a525d90402", "scraped_at": "16/01/2022 16:19:20"}, {"index": " TRUE hdr", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "4008", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Sfcdaman", "review_title": "Excellent Game Play", "review_description": "This game is so awesome with a wide world to explore and you decide if you want to do the story line or branch off and explore.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "115347650", "uniq_id": "41d81055-d3e3-5fa6-97ec-338755b36390", "scraped_at": "16/01/2022 16:19:20"}, {"index": "4015", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Jon1225", "review_title": "Great", "review_description": "[This review was collected as part of a promotion.] These are some great brand batteries. I really needed these anyway because it was time to get new batteries for my baby girl swing and these are just the right fit for it . I love this brand of batteries anyway they are long lasting and don\u2019t have to worry about corruption or anything.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217808119", "uniq_id": "bb36ada7-133b-5749-ab80-3263689fe3d2", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4020", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Srm277", "review_title": "Trusted", "review_description": "[This review was collected as part of a promotion.] I bought these batteries to go with my \u201cout of power\u201d lights. Since these batteries last so long, I can trust that they will be ready to use if the power does go out giving us light to be able to see. I will definitely be buying more of these batteries for my power outage kit again.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217782827", "uniq_id": "6ed688b8-5c27-59ea-924b-1cd03c9b4c02", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4027", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Aust", "review_title": "Wow", "review_description": "[This review was collected as part of a promotion.] Wowfguvcy 9gi 8f8vu uv t 7f. R. T99t  9t r Today r it and t. T8 Today t 9t 9t of 9g 9t to", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212460315", "uniq_id": "e06f6485-53cc-534e-8a76-25e9df752b3f", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4031", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Moses0183", "review_title": "Greatest monitor of all time.", "review_description": "[This review was collected as part of a promotion.] Gaming on this monitor is a whole new experience. Great graphics and very smooth gam play.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212448092", "uniq_id": "70af7dd5-dd3d-5b92-83c2-bdb2c9d9c045", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4044", "name": "Angry Birds: Star Wars - Xbox One", "brand": "Activision", "sku": "954016", "reviewer_name": "Paul Rushing", "review_title": "It's Fun For All Ages.. even at 60 years old.", "review_description": "I'm 60years old and watched my grandson of age 6 play on his tablet. we loved taking turns. I wanted to be able to play my own as a player #2... went to look for this game as it was a 2 player up to a 4 player. gam estop made it easy by looking and finding is wasn't in their store. ordered and it in came and in time for Christmas.. we play and I able able to enjoy this game Angry Birds Star Wars with ease.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2941", "reviews_count": "17", "comment_id": "140542146", "uniq_id": "24f9aa82-3379-5165-912e-35d67995b744", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4050", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Catmom50", "review_title": "Simply the best battery for every day use", "review_description": "[This review was collected as part of a promotion.] If you're like me you've always thought batteries are batteries and paid no mind to brand....wrong...and I've found out the hard way. I've had batteries that didn't fit securely because of a smaller than standard size, some that didn't last more than a few days in a low drain device, and some that leaked into the device after just a few months.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "4060", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "cesarxp2", "review_title": "Beautiful Monitor and Gorgeous Display", "review_description": "[This review was collected as part of a promotion.] I use my monitor for both gaming and work. I love the default options the monitor comes with, as well as, the ability to split into two screens. Sometimes I'll work extra just to spend more time with the monitor lol. 10/10.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212444728", "uniq_id": "7803e2ed-99c4-5e64-9fa5-56af0c45bc65", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4061", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Doooodg", "review_title": "It's for me and work.", "review_description": "[This review was collected as part of a promotion.] I do not a Monitor but I really need one for work and. And the Monitor is the perfect size for me.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212444233", "uniq_id": "10868040-6a3f-5742-b397-c8e02b505834", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4069", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "The_Fat_Savage95", "review_title": "Great graphics great story great features", "review_description": "I just bought the ps4 n fallout 4 was one of the games I was looking forward to glad I got it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "114328702", "uniq_id": "9370f8d8-3408-56f8-9b1d-ae61c6c5a7cb", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4074", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Westsrt44", "review_title": "The story", "review_description": "I glad I bought this because I played fall out 3 and enjoyed the whole open world aspect of it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "114296758", "uniq_id": "ffd74613-da84-5a16-bbee-2f830c89d6ad", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4085", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Iamtracy35", "review_title": "Long Lasting!", "review_description": "[This review was collected as part of a promotion.] I generally use another battery brand but decided to try Energizer this time...I\u2019m glad I did. They have lasted longer and I think give a better charge. I\u2019m glad I picked these batteries ...they are my new favorite brand. I\u2019m going to change out all by batteries in my electronics today!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217718153", "uniq_id": "92b7e16b-792e-54ae-b3e1-aa028ed691d8", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4093", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "MrsZirkle1", "review_title": "Amazing", "review_description": "[This review was collected as part of a promotion.] I use my monitor for many different things but I love it for my work.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212430255", "uniq_id": "f90fe813-d893-52ee-91d6-652e76c6016f", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4097", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "MoneyMike", "review_title": "Monitor and feels like looking at the real world", "review_description": "[This review was collected as part of a promotion.] I love how everything i need and could use in a TV and monitor is in one. Well put together with solid craftsmanship so I know it will last a long time.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212420458", "uniq_id": "0b3d55d3-0e6a-5aae-a4a2-d9b208fcde73", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4104", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Shadowwoman94", "review_title": null, "review_description": "great graphics love how its setup and it's a lot better than Fallout 3", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "114005732", "uniq_id": "008af4aa-cd81-5842-babf-cd26afa78f76", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4113", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Dawsonsmommy", "review_title": "Love the brand", "review_description": "[This review was collected as part of a promotion.] I have always used this brand of batteries. They have a long shelf life and keep my things going for awhile. I\u2019ve never had an issue with these batteries. I have told many of my friends and family about them.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217713636", "uniq_id": "f0065927-1437-5b33-b08c-3d5983b402f8", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4141", "name": "KidKraft Modern Table and 2 Chair Set White", "brand": "KidKraft", "sku": "318647", "reviewer_name": "Joan E G", "review_title": "Great table / chair set", "review_description": "Just what I needed for my little grandson.  Perfect size and nice clean look.  Chairs are sturdy, never tipped over.  This is my second purchase. Granddaughter is still enjoying her table set, in use for 3 years.  It has held up very well with daily use!  A great selection at a reasonable price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.7", "reviews_count": "10", "comment_id": "226166118", "uniq_id": "c5c0fbc4-5ee2-5447-b462-53b659aa5c8f", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4151", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Krista87", "review_title": "Long lasting", "review_description": "[This review was collected as part of a promotion.] We have a huge need for batteries in our house between a toddler and baby and these don\u2019t disappoint. We are using them in our baby\u2019s swing and use the swing for hours a day and they\u2019ve been working great!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217678113", "uniq_id": "46b2971d-f809-5009-992f-62de21cfac87", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4167", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "JoeAndu", "review_title": "Love this game to death", "review_description": "There is actually no limit to what you can do unlike most games every building is explorable along with a huge maps and items that keep you questing/exploring to recieve them", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "10", "not_helpful_count": "3", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "95305631", "uniq_id": "9ae110a8-d0d5-5fa6-bead-f1852dfa2a57", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4169", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Ryu 2039", "review_title": "Amazing!!!", "review_description": "This has to be the best of the fallout series. I've played New Vegas and 3 and those were good, but this game was fantastic.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "7", "not_helpful_count": "2", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "94497450", "uniq_id": "61ef165b-73e2-53a7-81d4-dccd894ef4f8", "scraped_at": "16/01/2022 16:19:23"}, {"index": "Also", "name": " they are Energiser Max", "brand": " so that hopefully means it will last a while.\"", "sku": "yes: I recommend this product", "reviewer_name": null, "review_title": "0", "review_description": "0", "recommended_review": "1 year ago", "verifed_purchaser": "5", "helpful_count": "4.9175", "not_helpful_count": "424", "reviewed_at": "217585949", "rating": "6f9dac00-8c69-5c4d-9a2b-fc8b8da8fb99", "average_rating": "16/01/2022 16:19:24", "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "i'm continually blown away by the image quality and immersion every time i boot up. from a three 27\"\" monitors 1080p setup to this single qhd 49\"\" monitor", "name": " takes my gaming to a whole new level.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "i highly recommend the neo g9 to anyone serious about image quality and gaming response. take the time to set it up correctly and use care in handling it", "name": " and you'll have none of the issues some other folks on here have experienced.\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "1 month ago", "recommended_review": "5", "verifed_purchaser": "4.5319", "helpful_count": "643", "not_helpful_count": "212404276", "reviewed_at": "ca10085c-8f13-5678-94b4-713f2b126fb0", "rating": "16/01/2022 16:19:24", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "4192", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Queenrod71", "review_title": "This product has fantastic viewing settings", "review_description": "[This review was collected as part of a promotion.] I use the monitor for surveillance in my home. It has picture perfect quality. I loved the price and the voice control. Hands free always work for me. I would recommend this product by Samsung! A very exciting experience.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212403931", "uniq_id": "5f2c5749-2756-5496-a45a-f3e97817c54f", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4199", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Redd47", "review_title": "Fallout 4 and its intensity", "review_description": "Gaming is an art and some consider it a sport. The game Fallout 4 was intense, challenging and hard to conquer. The vocabulary alone that is asked before you begin the game is high level. I thought the game kept me on my toes and forced me to think during each battle. The journey that is taken with the exploration was exciting. Creating the characters prior to the game play was also something I genuinely enjoyed doing. The possibility of surviving the ride is, however, not promise to any gamer when playing. ~Red", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "69419213", "uniq_id": "7c7ae707-80a1-54db-9963-e6c3a6333a5e", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4222", "name": "Create-a-Space Storage Center 10 Piece Set", "brand": "Learning Resources", "sku": "294796", "reviewer_name": "EMILY", "review_title": "Efficient for both mom and child", "review_description": "\"I use this on my \"\"craft center\"\" right by the kitchen table", "recommended_review": " which ends up being the \"\"craft\"\" table as well. Very helpful for easy grabbing and quick clean up for a four year old. I like the lightness of the containers and the colors are fun. They are low profile", "verifed_purchaser": " which makes it difficult for markers or pens to stand up in. It would be great to have different heights", "helpful_count": " with some sort of Sliced effect to have the tall containers in the back. Overall", "not_helpful_count": " does it's job effectively", "reviewed_at": " organizes", "rating": " quick to get supplies and quick to clean up. Happy with it!\"", "average_rating": "No: I don\u2019t recommend this product", "reviews_count": "Verified Purchaser", "comment_id": "0", "uniq_id": "0", "scraped_at": "3 years ago"}, {"index": "4226", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "tmshears61", "review_title": "Happy Nana", "review_description": "[This review was collected as part of a promotion.] Energizer MAX Alkaline D Batteries 2 Pack is something I always need in my home because we go thew tons of battires. I also like that these will last much longer than a lot of others I have used with all the grandbabies toys and not having to go threw as many will help save alot of money in my pocket. One happy Nana here with Energizer MAX Alkaline D Batteries 2 Pack.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217557762", "uniq_id": "5b1be007-1e0f-59bc-84ba-98d1cbcf37f2", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4230", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Slimeball730", "review_title": "It's amazing, I have to repair", "review_description": "[This review was collected as part of a promotion.] Gaming and I love the wide screen display.  Gaming on it feels like your there.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212399707", "uniq_id": "fdd1b1ba-1af1-5754-a9a0-18b3b0779af2", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4252", "name": "Mass Effect 3", "brand": "Electronic Arts", "sku": "106427", "reviewer_name": "kingdawg", "review_title": "Good besides Ending", "review_description": "\"Game was overall amazing like all the Mass Effect's. The multiplayer gets really boring and is repetitive. The ending is horrible for singleplayer. Rumors are saying that Bioware is releasing the real ending thats a DLC called \"\"Truth\"\" it takes place on the last collector ship and in multiplayer you will be able to play as a Geth", "recommended_review": " Bataron", "verifed_purchaser": "\ufeff and Prothen.\"", "helpful_count": "yes: I recommend this product", "not_helpful_count": null, "reviewed_at": "0", "rating": "2", "average_rating": "9 years ago", "reviews_count": "4", "comment_id": "3.6667", "uniq_id": "18", "scraped_at": "22757834"}, {"index": "I can't even bring myself to try to play and enjoy the MP aspects of it anymore", "name": " there's just no point. I know the ending. I know my choices don't matter and in a fit of intellectual laziness", "brand": " the devs have sauntered off to collect my money.", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "4273", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Dawn", "review_title": "Great monitor", "review_description": "[This review was collected as part of a promotion.] Love the monitor  works great and colors are vivid.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212363568", "uniq_id": "66af1e92-d3dd-5b68-8c49-d2c798d64437", "scraped_at": "16/01/2022 16:19:25"}], "stage_runningstate": "executed", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": "{}"}}, {"_id": "678c3d1a820abd653b9b85c0", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/gamestop_reviews.csv", "in": ["678c3d1a820abd653b9b85bf"], "out": [], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "Recommended_AutoML", "comment": "", "pipeline_id": "678c3d1a820abd653b9b85bb", "sub_type": "Automl", "stage_type": "ml", "mlCategory": "Regression", "stage_attributes": {"model_type": "regression", "label": "recommended_review_stringindexer", "features": ["index_stringindexer", "name_stringindexer", "brand_stringindexer", "sku_stringindexer", "reviewer_name_stringindexer", "review_title_stringindexer", "review_description_stringindexer", "verifed_purchaser_stringindexer", "helpful_count_stringindexer", "not_helpful_count_stringindexer", "reviewed_at_stringindexer", "rating_stringindexer", "average_rating_stringindexer", "reviews_count_stringindexer", "comment_id_stringindexer", "uniq_id_stringindexer", "scraped_at_stringindexer"], "percentage": "60", "executionTime": "10", "sampling": "1", "sampling_value": "", "optimizeBy": "r2", "run_id": "87d04e9325aa45e3a3aa7b0b4a0bb44f", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}, "status": "new", "position": {"x": 187, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/ml-engine/regression.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 14, "fill": "#333333", "type": "aml", "text": "Regression-AutoML", "slug": "auto-ml", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"model_type": "regression", "label": "recommended_review_stringindexer", "features": ["index_stringindexer", "name_stringindexer", "brand_stringindexer", "sku_stringindexer", "reviewer_name_stringindexer", "review_title_stringindexer", "review_description_stringindexer", "verifed_purchaser_stringindexer", "helpful_count_stringindexer", "not_helpful_count_stringindexer", "reviewed_at_stringindexer", "rating_stringindexer", "average_rating_stringindexer", "reviews_count_stringindexer", "comment_id_stringindexer", "uniq_id_stringindexer", "scraped_at_stringindexer"], "percentage": "60", "executionTime": "10", "sampling": "1", "sampling_value": "", "optimizeBy": "r2", "run_id": "87d04e9325aa45e3a3aa7b0b4a0bb44f", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}, "_id": "678c3d1a820abd653b9b85c0"}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8633", "field": "index_stringindexer", "alias": "index_stringindexer", "type": "real", "position": "0"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8634", "field": "name_stringindexer", "alias": "name_stringindexer", "type": "real", "position": "1"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8635", "field": "brand_stringindexer", "alias": "brand_stringindexer", "type": "real", "position": "2"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8636", "field": "sku_stringindexer", "alias": "sku_stringindexer", "type": "real", "position": "3"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8637", "field": "reviewer_name_stringindexer", "alias": "reviewer_name_stringindexer", "type": "real", "position": "4"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8638", "field": "review_title_stringindexer", "alias": "review_title_stringindexer", "type": "real", "position": "5"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8639", "field": "review_description_stringindexer", "alias": "review_description_stringindexer", "type": "real", "position": "6"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b863a", "field": "recommended_review_stringindexer", "alias": "recommended_review_stringindexer", "type": "real", "position": "7"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b863b", "field": "verifed_purchaser_stringindexer", "alias": "verifed_purchaser_stringindexer", "type": "real", "position": "8"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b863c", "field": "helpful_count_stringindexer", "alias": "helpful_count_stringindexer", "type": "real", "position": "9"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b863d", "field": "not_helpful_count_stringindexer", "alias": "not_helpful_count_stringindexer", "type": "real", "position": "10"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b863e", "field": "reviewed_at_stringindexer", "alias": "reviewed_at_stringindexer", "type": "real", "position": "11"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b863f", "field": "rating_stringindexer", "alias": "rating_stringindexer", "type": "real", "position": "12"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8640", "field": "average_rating_stringindexer", "alias": "average_rating_stringindexer", "type": "real", "position": "13"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8641", "field": "reviews_count_stringindexer", "alias": "reviews_count_stringindexer", "type": "real", "position": "14"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8642", "field": "comment_id_stringindexer", "alias": "comment_id_stringindexer", "type": "real", "position": "15"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8643", "field": "uniq_id_stringindexer", "alias": "uniq_id_stringindexer", "type": "real", "position": "16"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8644", "field": "scraped_at_stringindexer", "alias": "scraped_at_stringindexer", "type": "real", "position": "17"}], "actual_schema": [{"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8621", "field": "index", "alias": "index", "type": "String", "position": "0"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8622", "field": "name", "alias": "name", "type": "String", "position": "1"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8623", "field": "brand", "alias": "brand", "type": "String", "position": "2"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8624", "field": "sku", "alias": "sku", "type": "String", "position": "3"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8625", "field": "reviewer_name", "alias": "reviewer_name", "type": "String", "position": "4"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8626", "field": "review_title", "alias": "review_title", "type": "String", "position": "5"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8627", "field": "review_description", "alias": "review_description", "type": "String", "position": "6"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8628", "field": "recommended_review", "alias": "recommended_review", "type": "String", "position": "7"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8629", "field": "verifed_purchaser", "alias": "verifed_purchaser", "type": "String", "position": "8"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b862a", "field": "helpful_count", "alias": "helpful_count", "type": "String", "position": "9"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b862b", "field": "not_helpful_count", "alias": "not_helpful_count", "type": "String", "position": "10"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b862c", "field": "reviewed_at", "alias": "reviewed_at", "type": "String", "position": "11"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b862d", "field": "rating", "alias": "rating", "type": "String", "position": "12"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b862e", "field": "average_rating", "alias": "average_rating", "type": "String", "position": "13"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b862f", "field": "reviews_count", "alias": "reviews_count", "type": "String", "position": "14"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8630", "field": "comment_id", "alias": "comment_id", "type": "String", "position": "15"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8631", "field": "uniq_id", "alias": "uniq_id", "type": "String", "position": "16"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678c3e71820abd653b9b8632", "field": "scraped_at", "alias": "scraped_at", "type": "String", "position": "17"}], "selected_schema": [], "created_at": "2025-01-18 23:45:30.275000", "originalcount": 5321, "samplecount": 546, "samplefile": "/FileStore/platform/sampleData/678c3d1a820abd653b9b85be/part-00000-63ae79d1-6839-4975-8817-215afb701a8c-c000.csv", "joinSchema": [], "updated_at": "2025-01-19 18:47:00.154000", "__v": 0, "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": {}}}]